{"version":3,"file":"desktop.browser.min.js","sources":["../node_modules/@glue42/core/dist/core.es.js","../src/activity/entities/activityEntity.ts","../src/activity/helpers/util.ts","../src/activity/entities/activityType.ts","../src/activity/entities/windowType.ts","../src/activity/contracts/entityEvent.ts","../src/activity/core/activityAGM.ts","../src/activity/entities/attachedActivityDescriptor.ts","../src/activity/helpers/promiseExtensions.ts","../src/activity/entities/activity.ts","../src/activity/helpers/logger.ts","../src/activity/entities/activityWindow.ts","../src/activity/contracts/activityStatus.ts","../src/activity/bridges/gw3Bridge.ts","../src/activity/API/activityMyAPI.ts","../src/activity/helpers/readyMarker.ts","../src/activity/helpers/entityObservableCollection.ts","../src/activity/core/activityManager.ts","../src/activity/API/activityManagementAPI.ts","../src/activity/API/activityAPI.ts","../src/activity/activityModule.ts","../src/app-manager/const/agm-names.ts","../node_modules/callback-registry/lib/index.js","../src/app-manager/helper.ts","../src/app-manager/application.ts","../src/app-manager/instance.ts","../src/app-manager/app-manager.ts","../src/app-manager/entitlements.ts","../src/app-manager/in-memory.ts","../src/app-manager/main.ts","../src/app-manager/snapshot.ts","../src/app-manager/data-subscription.ts","../src/windows/store.ts","../src/utils.ts","../src/windows/window.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/windows/environment/gd/executor.ts","../src/windows/environment/helpers.ts","../src/windows/environment/gd/gd.ts","../src/windows/group.ts","../src/windows/groups.ts","../src/windows/main.ts","../src/windows/environment/detector.ts","../src/layouts/store.ts","../src/layouts/contextProvider.ts","../src/layouts/transform.ts","../src/layouts/layout.ts","../src/layouts/layouts.ts","../src/layouts/stream/acsStream.ts","../src/layouts/main.ts","../src/displays/displayManager.ts","../src/channels/agm.ts","../src/channels/contexts.ts","../src/channels/channels.ts","../src/channels/main.ts","../src/hotkeys/hotkeys.ts","../src/config.ts","../src/notifications/notification.ts","../src/notifications/panel.ts","../src/notifications/main.ts","../src/themes/themes.ts","../src/intents/intents.ts","../src/glue.ts","../src/initInfo.ts","../src/prefs/index.ts","../src/hotkeys/main.ts","../src/themes/main.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar MetricTypes = {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\n\nfunction getMetricTypeByValue(metric) {\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    }\r\n    else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    }\r\n    else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n    return \"unknown\";\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        if (!a.state) {\r\n            return 1;\r\n        }\r\n        if (!b.state) {\r\n            return -1;\r\n        }\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\n\nfunction gw3 (connection, config) {\r\n    var _this = this;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\");\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metric, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (system.parent === undefined) {\r\n                        return [2];\r\n                    }\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    metric = {\r\n                        name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        type: \"object\",\r\n                        composite: {\r\n                            Description: {\r\n                                type: \"string\",\r\n                                description: \"\",\r\n                            },\r\n                            Value: {\r\n                                type: \"number\",\r\n                                description: \"\",\r\n                            },\r\n                        },\r\n                        description: \"System state\",\r\n                        context: {},\r\n                    };\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [metric],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateSystem = function (system, state) { return __awaiter(_this, void 0, void 0, function () {\r\n        var shadowedUpdateMetric, stateObj, rootMetric;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    shadowedUpdateMetric = {\r\n                        type: \"publish\",\r\n                        values: [{\r\n                                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                                value: {\r\n                                    Description: state.description,\r\n                                    Value: state.state,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(shadowedUpdateMetric);\r\n                    stateObj = composeMsgForRootStateMetric(system);\r\n                    rootMetric = {\r\n                        type: \"publish\",\r\n                        peer_id: connection.peerId,\r\n                        values: [{\r\n                                name: \"/State\",\r\n                                value: {\r\n                                    Description: stateObj.description,\r\n                                    Value: stateObj.value,\r\n                                },\r\n                                timestamp: Date.now(),\r\n                            }],\r\n                    };\r\n                    session.send(rootMetric);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var createMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone, m, createMetricsMsg;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    m = serializeMetric(metricClone);\r\n                    createMetricsMsg = {\r\n                        type: \"define\",\r\n                        metrics: [m],\r\n                    };\r\n                    session.send(createMetricsMsg);\r\n                    if (typeof metricClone.value !== \"undefined\") {\r\n                        updateMetricCore(metricClone);\r\n                    }\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetric = function (metric) { return __awaiter(_this, void 0, void 0, function () {\r\n        var metricClone;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    metricClone = cloneMetric(metric);\r\n                    return [4, joinPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    updateMetricCore(metricClone);\r\n                    return [2];\r\n            }\r\n        });\r\n    }); };\r\n    var updateMetricCore = function (metric) {\r\n        if (canUpdate()) {\r\n            var value = getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            return session.sendFireAndForget(publishMetricsMsg);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    var cloneMetric = function (metric) {\r\n        var metricClone = __assign({}, metric);\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = __assign({}, metric.value);\r\n        }\r\n        return metricClone;\r\n    };\r\n    var canUpdate = function () {\r\n        var _a;\r\n        try {\r\n            var func = (_a = config.canUpdateMetric) !== null && _a !== void 0 ? _a : (function () { return true; });\r\n            return func();\r\n        }\r\n        catch (_b) {\r\n            return true;\r\n        }\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\n\nvar Helpers = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\n\nvar BaseMetric = (function () {\r\n    function BaseMetric(definition, system, transport, value, type) {\r\n        this.definition = definition;\r\n        this.system = system;\r\n        this.transport = transport;\r\n        this.value = value;\r\n        this.type = type;\r\n        this.path = [];\r\n        Helpers.validate(definition, system, transport);\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n        transport.createMetric(this);\r\n    }\r\n    Object.defineProperty(BaseMetric.prototype, \"repo\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.system) === null || _a === void 0 ? void 0 : _a.repo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseMetric.prototype, \"id\", {\r\n        get: function () { return this.system.path + \"/\" + name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseMetric.prototype.update = function (newValue) {\r\n        this.value = newValue;\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    return BaseMetric;\r\n}());\n\nvar NumberMetric = (function (_super) {\r\n    __extends(NumberMetric, _super);\r\n    function NumberMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.NUMBER) || this;\r\n    }\r\n    NumberMetric.prototype.incrementBy = function (num) {\r\n        this.update(this.value + num);\r\n    };\r\n    NumberMetric.prototype.increment = function () {\r\n        this.incrementBy(1);\r\n    };\r\n    NumberMetric.prototype.decrement = function () {\r\n        this.incrementBy(-1);\r\n    };\r\n    NumberMetric.prototype.decrementBy = function (num) {\r\n        this.incrementBy(num * -1);\r\n    };\r\n    return NumberMetric;\r\n}(BaseMetric));\n\nvar ObjectMetric = (function (_super) {\r\n    __extends(ObjectMetric, _super);\r\n    function ObjectMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.OBJECT) || this;\r\n    }\r\n    ObjectMetric.prototype.update = function (newValue) {\r\n        this.mergeValues(newValue);\r\n        return this.transport.updateMetric(this);\r\n    };\r\n    ObjectMetric.prototype.mergeValues = function (values) {\r\n        var _this = this;\r\n        return Object.keys(this.value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _this.value[k] = values[k];\r\n            }\r\n        });\r\n    };\r\n    return ObjectMetric;\r\n}(BaseMetric));\n\nvar StringMetric = (function (_super) {\r\n    __extends(StringMetric, _super);\r\n    function StringMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.STRING) || this;\r\n    }\r\n    return StringMetric;\r\n}(BaseMetric));\n\nvar TimestampMetric = (function (_super) {\r\n    __extends(TimestampMetric, _super);\r\n    function TimestampMetric(definition, system, transport, value) {\r\n        return _super.call(this, definition, system, transport, value, MetricTypes.TIMESTAMP) || this;\r\n    }\r\n    TimestampMetric.prototype.now = function () {\r\n        this.update(new Date());\r\n    };\r\n    return TimestampMetric;\r\n}(BaseMetric));\n\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.STRING, value, function (metricDef) { return new StringMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.NUMBER, value, function (metricDef) { return new NumberMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.OBJECT, value, function (metricDef) { return new ObjectMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric(definition, MetricTypes.TIMESTAMP, value, function (metricDef) { return new TimestampMetric(metricDef, me, _transport, value); });\r\n    }\r\n    function _getOrCreateMetric(metricObject, expectedType, value, createMetric) {\r\n        var metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        }\r\n        else {\r\n            metricDef = metricObject;\r\n        }\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDef.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDef.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing\r\n                    .update(value)\r\n                    .catch(function () { });\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        timestampMetric: timestampMetric,\r\n        objectMetric: objectMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\n\nvar Repository = (function () {\r\n    function Repository(options, protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n    Repository.prototype.addSystemMetrics = function (rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    };\r\n    return Repository;\r\n}());\n\nvar NullProtocol = (function () {\r\n    function NullProtocol() {\r\n    }\r\n    NullProtocol.prototype.init = function (repo) {\r\n    };\r\n    NullProtocol.prototype.createSystem = function (system) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateSystem = function (metric, state) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.createMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    NullProtocol.prototype.updateMetric = function (metric) {\r\n        return Promise.resolve();\r\n    };\r\n    return NullProtocol;\r\n}());\n\nvar PerfTracker = (function () {\r\n    function PerfTracker(api, initialPublishTimeout, publishInterval) {\r\n        this.api = api;\r\n        this.lastCount = 0;\r\n        this.initialPublishTimeout = 10 * 1000;\r\n        this.publishInterval = 60 * 1000;\r\n        this.initialPublishTimeout = initialPublishTimeout !== null && initialPublishTimeout !== void 0 ? initialPublishTimeout : this.initialPublishTimeout;\r\n        this.publishInterval = publishInterval !== null && publishInterval !== void 0 ? publishInterval : this.publishInterval;\r\n        this.scheduleCollection();\r\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\r\n    }\r\n    PerfTracker.prototype.scheduleCollection = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.collect();\r\n            setInterval(function () {\r\n                _this.collect();\r\n            }, _this.publishInterval);\r\n        }, this.initialPublishTimeout);\r\n    };\r\n    PerfTracker.prototype.collect = function () {\r\n        try {\r\n            this.collectMemory();\r\n            this.collectEntries();\r\n        }\r\n        catch (_a) {\r\n        }\r\n    };\r\n    PerfTracker.prototype.collectMemory = function () {\r\n        var memory = window.performance.memory;\r\n        this.system.stringMetric(\"memory\", JSON.stringify({\r\n            totalJSHeapSize: memory.totalJSHeapSize,\r\n            usedJSHeapSize: memory.usedJSHeapSize\r\n        }));\r\n    };\r\n    PerfTracker.prototype.collectEntries = function () {\r\n        var allEntries = window.performance.getEntries();\r\n        if (allEntries.length <= this.lastCount) {\r\n            return;\r\n        }\r\n        this.lastCount = allEntries.length;\r\n        var jsonfiedEntries = allEntries.map(function (i) { return i.toJSON(); });\r\n        this.system.stringMetric(\"entries\", JSON.stringify(jsonfiedEntries));\r\n    };\r\n    return PerfTracker;\r\n}());\n\nvar metrics = (function (options) {\r\n    var protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    }\r\n    else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n    var repo = new Repository(options, protocol);\r\n    var rootSystem = repo.root;\r\n    if (!options.disableAutoAppSystem) {\r\n        rootSystem = rootSystem.subSystem(\"App\");\r\n    }\r\n    var api = addFAVSupport(rootSystem);\r\n    initPerf(api, options.pagePerformanceMetrics);\r\n    return api;\r\n});\r\nvar perf;\r\nfunction initPerf(api, config) {\r\n    var _a, _b;\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n    var perfConfig = (_b = (_a = window === null || window === void 0 ? void 0 : window.glue42gd) === null || _a === void 0 ? void 0 : _a.metrics) === null || _b === void 0 ? void 0 : _b.pagePerformanceMetrics;\r\n    if (perfConfig) {\r\n        config = perfConfig;\r\n    }\r\n    if (config === null || config === void 0 ? void 0 : config.enabled) {\r\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\r\n    }\r\n}\r\nfunction addFAVSupport(system) {\r\n    var reportingSystem = system.subSystem(\"reporting\");\r\n    var def = {\r\n        name: \"features\"\r\n    };\r\n    var featureMetric;\r\n    var featureMetricFunc = function (name, action, payload) {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        }\r\n        else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        }\r\n        else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name: name, action: action, payload: payload });\r\n        }\r\n        else {\r\n            featureMetric.update({\r\n                name: name,\r\n                action: action,\r\n                payload: payload\r\n            });\r\n        }\r\n    };\r\n    system.featureMetric = featureMetricFunc;\r\n    return system;\r\n}\n\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\ncreateRegistry.default = createRegistry;\r\nvar lib = createRegistry;\n\nvar InProcTransport = (function () {\r\n    function InProcTransport(settings, logger) {\r\n        var _this = this;\r\n        this.registry = lib();\r\n        this.gw = settings.facade;\r\n        this.gw.connect(function (_client, message) {\r\n            _this.messageHandler(message);\r\n        }).then(function (client) {\r\n            _this.client = client;\r\n        });\r\n    }\r\n    Object.defineProperty(InProcTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InProcTransport.prototype.sendObject = function (msg) {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        else {\r\n            return Promise.reject(\"not connected\");\r\n        }\r\n    };\r\n    InProcTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    InProcTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    InProcTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    InProcTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.name = function () {\r\n        return \"in-memory\";\r\n    };\r\n    InProcTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InProcTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return InProcTransport;\r\n}());\n\nvar SharedWorkerTransport = (function () {\r\n    function SharedWorkerTransport(workerFile, logger) {\r\n        var _this = this;\r\n        this.logger = logger;\r\n        this.registry = lib();\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = function (e) {\r\n            _this.messageHandler(e.data);\r\n        };\r\n    }\r\n    Object.defineProperty(SharedWorkerTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SharedWorkerTransport.prototype.sendObject = function (msg) {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.send = function (_msg) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    SharedWorkerTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    SharedWorkerTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    SharedWorkerTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.open = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.name = function () {\r\n        return \"shared-worker\";\r\n    };\r\n    SharedWorkerTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    SharedWorkerTransport.prototype.messageHandler = function (msg) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return SharedWorkerTransport;\r\n}());\n\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    };\r\n    return Utils;\r\n}());\n\nvar PromiseWrapper = (function () {\r\n    function PromiseWrapper() {\r\n        var _this = this;\r\n        this.rejected = false;\r\n        this.resolved = false;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = function (t) {\r\n                _this.resolved = true;\r\n                resolve(t);\r\n            };\r\n            _this.reject = function (err) {\r\n                _this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n    PromiseWrapper.delay = function (time) {\r\n        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n    };\r\n    Object.defineProperty(PromiseWrapper.prototype, \"ended\", {\r\n        get: function () {\r\n            return this.rejected || this.resolved;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PromiseWrapper;\r\n}());\n\nvar timers = {};\r\nfunction getAllTimers() {\r\n    return timers;\r\n}\r\nfunction timer (timerName) {\r\n    var existing = timers[timerName];\r\n    if (existing) {\r\n        return existing;\r\n    }\r\n    var marks = [];\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    mark(\"start\", startTime);\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        mark(\"end\", endTime);\r\n        period = endTime - startTime;\r\n        return period;\r\n    }\r\n    function mark(name, time) {\r\n        var currentTime = time !== null && time !== void 0 ? time : now();\r\n        var diff = 0;\r\n        if (marks.length > 0) {\r\n            diff = currentTime - marks[marks.length - 1].time;\r\n        }\r\n        marks.push({ name: name, time: currentTime, diff: diff });\r\n    }\r\n    var timerObj = {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop,\r\n        mark: mark,\r\n        marks: marks\r\n    };\r\n    timers[timerName] = timerObj;\r\n    return timerObj;\r\n}\n\nvar WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this.startupTimer = timer(\"connection\");\r\n        this._running = true;\r\n        this._registry = lib();\r\n        this.wsRequests = [];\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(function () {\r\n                var _a;\r\n                try {\r\n                    (_a = _this.ws) === null || _a === void 0 ? void 0 : _a.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        var _this = this;\r\n        this.logger.info(\"opening ws...\");\r\n        this._running = true;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitForSocketConnection(resolve, reject);\r\n        });\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.name = function () {\r\n        return \"ws \" + this.settings.ws;\r\n    };\r\n    WS.prototype.reconnect = function () {\r\n        var _a;\r\n        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();\r\n        var pw = new PromiseWrapper();\r\n        this.waitForSocketConnection(function () {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed) {\r\n        var _a;\r\n        failed = failed !== null && failed !== void 0 ? failed : (function () { });\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this.settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.wsRequests.push({ callback: callback, failed: failed });\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n        this.openSocket();\r\n    };\r\n    WS.prototype.openSocket = function (retryInterval, retriesLeft) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.startupTimer.mark(\"opening-socket\");\r\n                        if (retryInterval === undefined) {\r\n                            retryInterval = this.settings.reconnectInterval;\r\n                        }\r\n                        if (retriesLeft !== undefined) {\r\n                            if (retriesLeft === 0) {\r\n                                this.notifyForSocketState(\"wait for socket on \" + this.settings.ws + \" failed - no more retries left\");\r\n                                return [2];\r\n                            }\r\n                            this.logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4, this.initiateSocket()];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.startupTimer.mark(\"socket-initiated\");\r\n                        this.notifyForSocketState();\r\n                        return [3, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        setTimeout(function () {\r\n                            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                            _this.openSocket(retryInterval, retries);\r\n                        }, retryInterval);\r\n                        return [3, 4];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        var pw = new PromiseWrapper();\r\n        this.logger.debug(\"initiating ws to \" + this.settings.ws + \"...\");\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\");\r\n        this.ws.onerror = function (err) {\r\n            var reason = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            }\r\n            catch (error) {\r\n                var seen_1 = new WeakSet();\r\n                var replacer = function (key, value) {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen_1.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen_1.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n            pw.reject(\"error\");\r\n            _this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = function (err) {\r\n            _this.logger.info(\"ws closed \" + err);\r\n            pw.reject(\"closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this.ws.onopen = function () {\r\n            var _a;\r\n            _this.startupTimer.mark(\"ws-opened\");\r\n            _this.logger.info(\"ws opened \" + ((_a = _this.settings.identity) === null || _a === void 0 ? void 0 : _a.application));\r\n            pw.resolve();\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this.ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n        return pw.promise;\r\n    };\r\n    WS.prototype.notifyForSocketState = function (error) {\r\n        this.wsRequests.forEach(function (wsRequest) {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            }\r\n            else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nvar randomFromSeed = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed$1(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nvar alphabet_1 = {\n    characters: characters,\n    seed: setSeed$1,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nvar randomByteBrowser = randomByte;\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByteBrowser() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nvar encode_1 = encode;\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet_1.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nvar decode_1 = decode;\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet_1.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvar isValid = isShortId;\n\nvar lib$1 = createCommonjsModule(function (module) {\n\n\n\n\n\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId =  0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode_1(alphabet_1.lookup, version);\n    str = str + encode_1(alphabet_1.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode_1(alphabet_1.lookup, counter);\n    }\n    str = str + encode_1(alphabet_1.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet_1.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet_1.characters(newCharacters);\n    }\n\n    return alphabet_1.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode_1;\nmodule.exports.isValid = isValid;\n});\nvar lib_1 = lib$1.generate;\nvar lib_2 = lib$1.seed;\nvar lib_3 = lib$1.worker;\nvar lib_4 = lib$1.characters;\nvar lib_5 = lib$1.decode;\nvar lib_6 = lib$1.isValid;\n\nvar shortid = lib$1;\n\nfunction domainSession (domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = lib();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(\"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(\"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining domain \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        return send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        return connection.send(msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n \" + e.stack + \" \\n msg was: \" + JSON.stringify(msg), e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\n\nvar GW3ProtocolImpl = (function () {\r\n    function GW3ProtocolImpl(connection, settings, logger) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.protocolVersion = 3;\r\n        this.datePrefix = \"#T42_DATE#\";\r\n        this.datePrefixLen = this.datePrefix.length;\r\n        this.dateMinLen = this.datePrefixLen + 1;\r\n        this.datePrefixFirstChar = this.datePrefix[0];\r\n        this.registry = lib();\r\n        this._isLoggedIn = false;\r\n        this.shouldTryLogin = true;\r\n        this.initialLogin = true;\r\n        this.initialLoginAttempts = 3;\r\n        this.sessions = [];\r\n        connection.disconnected(function () {\r\n            _this.handleDisconnected();\r\n        });\r\n        this.ping();\r\n    }\r\n    Object.defineProperty(GW3ProtocolImpl.prototype, \"isLoggedIn\", {\r\n        get: function () {\r\n            return this._isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3ProtocolImpl.prototype.processStringMessage = function (message) {\r\n        var _this = this;\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < _this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== _this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, _this.datePrefixLen) !== _this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(_this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createStringMessage = function (message) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            var datePrefix_1 = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix_1 + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.processObjectMessage = function (message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    };\r\n    GW3ProtocolImpl.prototype.createObjectMessage = function (message) {\r\n        return message;\r\n    };\r\n    GW3ProtocolImpl.prototype.login = function (config, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authentication, token, e_1, _a, helloMsg, sendOptions, welcomeMsg, msg, token, _b, err_1;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging in...\");\r\n                        this.loginConfig = config;\r\n                        if (!this.loginConfig) {\r\n                            this.loginConfig = { username: \"\", password: \"\" };\r\n                        }\r\n                        this.shouldTryLogin = true;\r\n                        authentication = {};\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        if (!config.gatewayToken) return [3, 5];\r\n                        if (!reconnect) return [3, 4];\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        _c.trys.push([1, 3, , 4]);\r\n                        return [4, this.getNewGWToken()];\r\n                    case 2:\r\n                        token = _c.sent();\r\n                        config.gatewayToken = token;\r\n                        return [3, 4];\r\n                    case 3:\r\n                        e_1 = _c.sent();\r\n                        this.logger.warn(\"failed to get GW token when reconnecting \" + ((e_1 === null || e_1 === void 0 ? void 0 : e_1.message) || e_1));\r\n                        return [3, 4];\r\n                    case 4:\r\n                        authentication.method = \"gateway-token\";\r\n                        authentication.token = config.gatewayToken;\r\n                        this.connection.gatewayToken = config.gatewayToken;\r\n                        return [3, 10];\r\n                    case 5:\r\n                        if (!(config.flowName === \"sspi\")) return [3, 9];\r\n                        authentication.provider = \"win\";\r\n                        authentication.method = \"access-token\";\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 7];\r\n                        _a = authentication;\r\n                        return [4, config.flowCallback(config.sessionId, null)];\r\n                    case 6:\r\n                        _a.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        return [3, 8];\r\n                    case 7: throw new Error(\"Invalid SSPI config\");\r\n                    case 8: return [3, 10];\r\n                    case 9:\r\n                        if (config.token) {\r\n                            authentication.method = \"access-token\";\r\n                            authentication.token = config.token;\r\n                        }\r\n                        else if (config.username) {\r\n                            authentication.method = \"secret\";\r\n                            authentication.login = config.username;\r\n                            authentication.secret = config.password;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n                        }\r\n                        _c.label = 10;\r\n                    case 10:\r\n                        helloMsg = {\r\n                            type: \"hello\",\r\n                            identity: this.settings.identity,\r\n                            authentication: authentication\r\n                        };\r\n                        if (config.sessionId) {\r\n                            helloMsg.request_id = config.sessionId;\r\n                        }\r\n                        this.globalDomain = domainSession(\"global\", this.connection, this.logger.subLogger(\"global-domain\"), [\r\n                            \"welcome\",\r\n                            \"token\",\r\n                            \"authentication-request\"\r\n                        ]);\r\n                        sendOptions = { skipPeerId: true };\r\n                        if (this.initialLogin) {\r\n                            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n                            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n                        }\r\n                        _c.label = 11;\r\n                    case 11:\r\n                        _c.trys.push([11, 19, 20, 21]);\r\n                        welcomeMsg = void 0;\r\n                        _c.label = 12;\r\n                    case 12:\r\n                        return [4, this.globalDomain.send(helloMsg, undefined, sendOptions)];\r\n                    case 13:\r\n                        msg = _c.sent();\r\n                        if (!(msg.type === \"authentication-request\")) return [3, 16];\r\n                        token = Buffer.from(msg.authentication.token, \"base64\");\r\n                        if (!(config.flowCallback && config.sessionId)) return [3, 15];\r\n                        _b = helloMsg.authentication;\r\n                        return [4, config.flowCallback(config.sessionId, token)];\r\n                    case 14:\r\n                        _b.token =\r\n                            (_c.sent())\r\n                                .data\r\n                                .toString(\"base64\");\r\n                        _c.label = 15;\r\n                    case 15:\r\n                        helloMsg.request_id = config.sessionId;\r\n                        return [3, 12];\r\n                    case 16:\r\n                        if (msg.type === \"welcome\") {\r\n                            welcomeMsg = msg;\r\n                            return [3, 18];\r\n                        }\r\n                        else if (msg.type === \"error\") {\r\n                            throw new Error(\"Authentication failed: \" + msg.reason);\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                        }\r\n                    case 17: return [3, 12];\r\n                    case 18:\r\n                        this.initialLogin = false;\r\n                        this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n                        this.connection.peerId = welcomeMsg.peer_id;\r\n                        this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n                        this.connection.availableDomains = welcomeMsg.available_domains;\r\n                        if (welcomeMsg.options) {\r\n                            this.connection.token = welcomeMsg.options.access_token;\r\n                            this.connection.info = welcomeMsg.options.info;\r\n                        }\r\n                        this.setLoggedIn(true);\r\n                        return [2, welcomeMsg.resolved_identity];\r\n                    case 19:\r\n                        err_1 = _c.sent();\r\n                        this.logger.error(\"error sending hello message - \" + (err_1.message || err_1.msg || err_1.reason || err_1), err_1);\r\n                        throw err_1;\r\n                    case 20:\r\n                        if (config && config.flowCallback && config.sessionId) {\r\n                            config.flowCallback(config.sessionId, null);\r\n                        }\r\n                        return [7];\r\n                    case 21: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"logging out...\");\r\n                        this.shouldTryLogin = false;\r\n                        if (this.pingTimer) {\r\n                            clearTimeout(this.pingTimer);\r\n                        }\r\n                        promises = this.sessions.map(function (session) {\r\n                            session.leave();\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.loggedIn = function (callback) {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    };\r\n    GW3ProtocolImpl.prototype.domain = function (domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = this.sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    };\r\n    GW3ProtocolImpl.prototype.handleDisconnected = function () {\r\n        var _this = this;\r\n        this.setLoggedIn(false);\r\n        var tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(function () {\r\n                setTimeout(_this.handleDisconnected.bind(_this), _this.settings.reconnectInterval || 1000);\r\n            });\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.setLoggedIn = function (value) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    };\r\n    GW3ProtocolImpl.prototype.ping = function () {\r\n        var _this = this;\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n        this.pingTimer = setTimeout(function () {\r\n            _this.ping();\r\n        }, 30 * 1000);\r\n    };\r\n    GW3ProtocolImpl.prototype.authToken = function () {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n        return this.globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    };\r\n    GW3ProtocolImpl.prototype.getNewGWToken = function () {\r\n        if (typeof window !== undefined) {\r\n            var glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    };\r\n    return GW3ProtocolImpl;\r\n}());\n\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        var _a;\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _b = this.specs[name].types; _i < _b.length; _i++) {\r\n            var type = _b[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                (_a = this.connection) === null || _a === void 0 ? void 0 : _a.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\n\nvar PromisePlus = function (executor, timeoutMilliseconds, timeoutMessage) {\r\n    return new Promise(function (resolve, reject) {\r\n        var timeout = setTimeout(function () {\r\n            var message = timeoutMessage || \"Promise timeout hit: \" + timeoutMilliseconds;\r\n            reject(message);\r\n        }, timeoutMilliseconds);\r\n        var providedPromise = new Promise(executor);\r\n        providedPromise\r\n            .then(function (result) {\r\n            clearTimeout(timeout);\r\n            resolve(result);\r\n        })\r\n            .catch(function (error) {\r\n            clearTimeout(timeout);\r\n            reject(error);\r\n        });\r\n    });\r\n};\n\nvar WebPlatformTransport = (function () {\r\n    function WebPlatformTransport(settings, logger, identity) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.identity = identity;\r\n        this.parentReady = false;\r\n        this.iAmConnected = false;\r\n        this.rejected = false;\r\n        this.children = [];\r\n        this.parentPingTimeout = 3000;\r\n        this.connectionRequestTimeout = 5000;\r\n        this.defaultTargetString = \"*\";\r\n        this.registry = lib();\r\n        this.messages = {\r\n            connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\r\n            connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\r\n            connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\r\n            parentReady: { name: \"parentReady\", handle: this.handleParentReady.bind(this) },\r\n            parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\r\n            platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\r\n            platformUnload: { name: \"platformUnload\", handle: this.handlePlatformUnload.bind(this) },\r\n            platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\r\n            clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) },\r\n            manualUnload: { name: \"manualUnload\", handle: this.handleManualUnload.bind(this) }\r\n        };\r\n        this.setUpMessageListener();\r\n        this.setUpUnload();\r\n        if (!this.settings.port) {\r\n            this.parent = window.opener || window.top;\r\n            this.parentType = window.opener ? \"opener\" :\r\n                window.name.indexOf(\"#wsp\") !== -1 ? \"workspace\" : \"top\";\r\n        }\r\n    }\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"transportWindowId\", {\r\n        get: function () {\r\n            return this.publicWindowId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.sendObject = function (msg) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.port) {\r\n                    throw new Error(\"Cannot send message, because the port was not opened yet\");\r\n                }\r\n                this.port.postMessage(msg);\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(WebPlatformTransport.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WebPlatformTransport.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.send = function () {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    WebPlatformTransport.prototype.onConnectedChanged = function (callback) {\r\n        return this.registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WebPlatformTransport.prototype.open = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.debug(\"opening a connection to the web platform gateway.\");\r\n                        return [4, this.connect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.notifyStatusChanged(true);\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.close = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.name = function () {\r\n        return \"web-platform\";\r\n    };\r\n    WebPlatformTransport.prototype.reconnect = function () {\r\n        return Promise.resolve();\r\n    };\r\n    WebPlatformTransport.prototype.connect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.parentReady) {\r\n                            this.logger.debug(\"cancelling connection attempt, because this client's parent has already given a ready signal\");\r\n                            return [2];\r\n                        }\r\n                        if (this.settings.port) {\r\n                            this.logger.debug(\"opening an internal web platform connection\");\r\n                            this.port = this.settings.port;\r\n                            this.publicWindowId = this.settings.windowId;\r\n                            if (this.identity) {\r\n                                this.identity.windowId = this.publicWindowId;\r\n                            }\r\n                            this.port.onmessage = function (event) { return _this.registry.execute(\"onMessage\", event.data); };\r\n                            this.logger.debug(\"internal web platform connection completed\");\r\n                            return [2];\r\n                        }\r\n                        if (!this.parentType || !this.parent) {\r\n                            throw new Error(\"Cannot initiate a connection, because there is no opener, no top and no port.\");\r\n                        }\r\n                        this.logger.debug(\"opening a \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client web platform connection\");\r\n                        return [4, this.waitParent(this.parent, this.parentType)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.initiateRemoteConnection(this.parent, this.parentType)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.debug(\"the \" + (this.parentType === \"opener\" ? \"child\" : \"grandchild\") + \" client is connected\");\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.initiateRemoteConnection = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve, reject) {\r\n            _this.connectionResolve = resolve;\r\n            _this.connectionReject = reject;\r\n            _this.myClientId = shortid();\r\n            var bridgeInstanceId = _this.parentType === \"workspace\" ? window.name.substring(0, window.name.indexOf(\"#wsp\")) : window.name;\r\n            var request = {\r\n                glue42core: {\r\n                    type: _this.messages.connectionRequest.name,\r\n                    clientId: _this.myClientId,\r\n                    clientType: parentType === \"top\" || parentType === \"workspace\" ? \"grandChild\" : \"child\",\r\n                    bridgeInstanceId: bridgeInstanceId\r\n                }\r\n            };\r\n            _this.logger.debug(\"sending connection request to \" + parentType);\r\n            target.postMessage(request, _this.defaultTargetString);\r\n        }, this.connectionRequestTimeout, \"The connection to the opener/top window timed out\");\r\n    };\r\n    WebPlatformTransport.prototype.waitParent = function (target, parentType) {\r\n        var _this = this;\r\n        return PromisePlus(function (resolve) {\r\n            _this.parentPingResolve = resolve;\r\n            var message = {\r\n                glue42core: {\r\n                    type: parentType === \"opener\" ? _this.messages.platformPing.name : _this.messages.parentPing.name\r\n                }\r\n            };\r\n            _this.logger.debug(\"checking for \" + parentType + \" window availability\");\r\n            target.postMessage(message, _this.defaultTargetString);\r\n        }, this.parentPingTimeout, \"Cannot initiate glue, because this window was not opened or created by a glue client\");\r\n    };\r\n    WebPlatformTransport.prototype.setUpMessageListener = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"message\", function (event) {\r\n            var _a;\r\n            var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n            if (!data || _this.rejected) {\r\n                return;\r\n            }\r\n            if (!_this.checkMessageTypeValid(data.type)) {\r\n                _this.logger.error(\"cannot handle the incoming glue42 core message, because the type is invalid: \" + data.type);\r\n                return;\r\n            }\r\n            var messageType = data.type;\r\n            _this.logger.debug(\"received valid glue42core message of type: \" + messageType);\r\n            _this.messages[messageType].handle(event);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.setUpUnload = function () {\r\n        var _this = this;\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\r\n            return;\r\n        }\r\n        window.addEventListener(\"beforeunload\", function () {\r\n            var _a, _b;\r\n            var message = {\r\n                glue42core: {\r\n                    type: _this.messages.clientUnload.name,\r\n                    data: {\r\n                        clientId: _this.myClientId,\r\n                        ownWindowId: (_a = _this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                    }\r\n                }\r\n            };\r\n            if (_this.parent) {\r\n                _this.parent.postMessage(message, _this.defaultTargetString);\r\n            }\r\n            (_b = _this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n        });\r\n    };\r\n    WebPlatformTransport.prototype.handleParentReady = function () {\r\n        this.logger.debug(\"handling the ready signal from the parent, by resoling the pending promise.\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformReady = function () {\r\n        this.logger.debug(\"the web platform gave the ready signal\");\r\n        this.parentReady = true;\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionAccepted = function (event) {\r\n        var _a;\r\n        var data = (_a = event.data) === null || _a === void 0 ? void 0 : _a.glue42core;\r\n        if (this.myClientId === data.clientId) {\r\n            return this.handleAcceptanceOfMyRequest(data);\r\n        }\r\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfMyRequest = function (data) {\r\n        var _this = this;\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\r\n        if (!data.port) {\r\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\r\n            return;\r\n        }\r\n        this.publicWindowId = this.parentType === \"opener\" ? window.name :\r\n            this.parentType === \"top\" ? data.parentWindowId :\r\n                window.name.substring(0, window.name.indexOf(\"#wsp\"));\r\n        if (this.identity && this.parentType !== \"top\") {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n        this.port = data.port;\r\n        this.port.onmessage = function (e) { return _this.registry.execute(\"onMessage\", e.data); };\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\r\n    };\r\n    WebPlatformTransport.prototype.handleAcceptanceOfGrandChildRequest = function (data, event) {\r\n        this.logger.debug(\"handling a connection accepted signal targeted at a grandchild: \" + data.clientId);\r\n        var child = this.children.find(function (c) { return c.grandChildId === data.clientId; });\r\n        if (!child) {\r\n            this.logger.error(\"cannot handle connection accepted for grandchild: \" + data.clientId + \", because there is no grandchild with this id\");\r\n            return;\r\n        }\r\n        child.connected = true;\r\n        this.logger.debug(\"the grandchild connection for \" + data.clientId + \" is set up, forwarding the success message and the gateway port\");\r\n        data.parentWindowId = this.publicWindowId;\r\n        child.source.postMessage(event.data, child.origin, [data.port]);\r\n        return;\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRejected = function () {\r\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\r\n        if (this.connectionReject) {\r\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\r\n            delete this.connectionReject;\r\n        }\r\n    };\r\n    WebPlatformTransport.prototype.handleConnectionRequest = function (event) {\r\n        var source = event.source;\r\n        var data = event.data.glue42core;\r\n        if (!data.clientType || data.clientType !== \"grandChild\") {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\r\n        }\r\n        if (!data.clientId) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\r\n        }\r\n        if (this.parentType !== \"opener\" || !this.parent) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\r\n        }\r\n        this.logger.debug(\"handling a connection request for a grandchild: \" + data.clientId);\r\n        this.children.push({ grandChildId: data.clientId, source: source, connected: false, origin: event.origin });\r\n        this.logger.debug(\"grandchild: \" + data.clientId + \" is prepared, forwarding connection request to the platform\");\r\n        this.parent.postMessage(event.data, this.defaultTargetString);\r\n    };\r\n    WebPlatformTransport.prototype.handleParentPing = function (event) {\r\n        if (!this.parentReady) {\r\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        if (!this.iAmConnected) {\r\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.parentReady.name\r\n            }\r\n        };\r\n        var source = event.source;\r\n        this.logger.debug(\"responding to a parent ping with a ready message\");\r\n        source.postMessage(message, event.origin);\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformUnload = function (event) {\r\n        this.logger.debug(\"detected a web platform unload\");\r\n        this.parentReady = false;\r\n        if (this.children.length) {\r\n            this.logger.debug(\"forwarding the platform unload to all known children and starting platform discovery polling\");\r\n            this.children.forEach(function (child) { return child.source.postMessage(event.data, child.origin); });\r\n        }\r\n        this.notifyStatusChanged(false, \"Gateway unloaded\");\r\n    };\r\n    WebPlatformTransport.prototype.handleManualUnload = function () {\r\n        var _a, _b;\r\n        var message = {\r\n            glue42core: {\r\n                type: this.messages.clientUnload.name,\r\n                data: {\r\n                    clientId: this.myClientId,\r\n                    ownWindowId: (_a = this.identity) === null || _a === void 0 ? void 0 : _a.windowId\r\n                }\r\n            }\r\n        };\r\n        if (this.parent) {\r\n            this.parent.postMessage(message, this.defaultTargetString);\r\n        }\r\n        (_b = this.port) === null || _b === void 0 ? void 0 : _b.postMessage(message);\r\n    };\r\n    WebPlatformTransport.prototype.handleClientUnload = function (event) {\r\n        var data = event.data.glue42core;\r\n        var clientId = data === null || data === void 0 ? void 0 : data.data.clientId;\r\n        if (!clientId) {\r\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\r\n            return;\r\n        }\r\n        var foundChild = this.children.find(function (child) { return child.grandChildId === clientId; });\r\n        if (!foundChild) {\r\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\r\n            return;\r\n        }\r\n        this.logger.debug(\"handling grandchild unload for id: \" + clientId);\r\n        this.children = this.children.filter(function (child) { return child.grandChildId !== clientId; });\r\n    };\r\n    WebPlatformTransport.prototype.handlePlatformPing = function () {\r\n        this.logger.error(\"cannot handle platform ping, because this is not a platform calls handling component\");\r\n    };\r\n    WebPlatformTransport.prototype.notifyStatusChanged = function (status, reason) {\r\n        this.iAmConnected = status;\r\n        this.registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    WebPlatformTransport.prototype.checkMessageTypeValid = function (typeToValidate) {\r\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate];\r\n    };\r\n    WebPlatformTransport.prototype.rejectConnectionRequest = function (source, origin, reason) {\r\n        this.rejected = true;\r\n        this.logger.error(reason);\r\n        var rejection = {\r\n            glue42core: {\r\n                type: this.messages.connectionRejected.name\r\n            }\r\n        };\r\n        source.postMessage(rejection, origin);\r\n    };\r\n    return WebPlatformTransport;\r\n}());\n\nvar Connection = (function () {\r\n    function Connection(settings, logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = lib();\r\n        this._connected = false;\r\n        this.isTrace = false;\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        }\r\n        else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        }\r\n        else if (settings.webPlatform) {\r\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.debug(\"starting with \" + this.transport.name() + \" transport\");\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.protocol) === null || _a === void 0 ? void 0 : _a.protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.send = function (message, options) {\r\n        if (this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport) {\r\n            var msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + JSON.stringify(msg));\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        }\r\n        else {\r\n            var strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(\">> \" + strMessage);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    };\r\n    Connection.prototype.on = function (type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    Connection.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this.protocol.isLoggedIn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Connection.prototype.connected = function (callback) {\r\n        var _this = this;\r\n        return this.protocol.loggedIn(function () {\r\n            callback(_this.settings.ws || _this.settings.sharedWorker || \"\");\r\n        });\r\n    };\r\n    Connection.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    Connection.prototype.login = function (authRequest, reconnect) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var identity;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.transport.open()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        timer(\"connection\").mark(\"transport-opened\");\r\n                        identity = this.protocol.login(authRequest, reconnect);\r\n                        timer(\"connection\").mark(\"protocol-logged-in\");\r\n                        return [2, identity];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.protocol.logout()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.transport.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.loggedIn = function (callback) {\r\n        return this.protocol.loggedIn(callback);\r\n    };\r\n    Connection.prototype.domain = function (domain, successMessages, errorMessages) {\r\n        return this.protocol.domain(domain, this.logger.subLogger(\"domain=\" + domain), successMessages, errorMessages);\r\n    };\r\n    Connection.prototype.authToken = function () {\r\n        return this.protocol.authToken();\r\n    };\r\n    Connection.prototype.reconnect = function () {\r\n        return this.transport.reconnect();\r\n    };\r\n    Connection.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        try {\r\n                            _this.logger.error(\"Message handler failed with \" + error.stack, error);\r\n                        }\r\n                        catch (loggerError) {\r\n                            console.log(\"Message handler failed\", error);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Connection.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    Connection.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n        if (this.isTrace) {\r\n            this.logger.trace(\"<< \" + JSON.stringify(msgObj));\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return Connection;\r\n}());\n\nvar order = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\nvar Logger = (function () {\r\n    function Logger(name, parent, logFn) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.subLoggers = [];\r\n        this.logFn = console;\r\n        this.customLogFn = false;\r\n        this.name = name;\r\n        if (parent) {\r\n            this.path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this.path = name;\r\n        }\r\n        this.loggerFullName = \"[\" + this.path + \"]\";\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n    Logger.prototype.subLogger = function (name) {\r\n        var existingSub = this.subLoggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n        this.subLoggers.push(sub);\r\n        return sub;\r\n    };\r\n    Logger.prototype.publishLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.publishLevel());\r\n    };\r\n    Logger.prototype.consoleLevel = function (level) {\r\n        var _a;\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.consoleLevel());\r\n    };\r\n    Logger.prototype.log = function (message, level, error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    };\r\n    Logger.prototype.trace = function (message) {\r\n        this.log(message, \"trace\");\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        this.log(message, \"debug\");\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        this.log(message, \"info\");\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        this.log(message, \"warn\");\r\n    };\r\n    Logger.prototype.error = function (message, err) {\r\n        this.log(message, \"error\");\r\n    };\r\n    Logger.prototype.canPublish = function (level, compareWith) {\r\n        var levelIdx = order.indexOf(level);\r\n        var restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    Logger.prototype.publishMessage = function (level, message, error) {\r\n        var loggerName = this.loggerFullName;\r\n        if (level === \"error\" && !error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                        \"\\n\" +\r\n                        e.stack\r\n                            .split(\"\\n\")\r\n                            .slice(3)\r\n                            .join(\"\\n\");\r\n            }\r\n        }\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            var interop = Logger.Interop;\r\n            if (interop) {\r\n                try {\r\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\r\n                        interop.invoke(Logger.InteropMethodName, {\r\n                            msg: \"\" + message,\r\n                            logger: loggerName,\r\n                            level: level\r\n                        });\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                }\r\n            }\r\n        }\r\n        if (this.canPublish(level)) {\r\n            var prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                var date = new Date();\r\n                var time = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n                prefix = \"[\" + time + \"] [\" + level + \"] \";\r\n            }\r\n            var toPrint = \"\" + prefix + loggerName + \": \" + message;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    if (this.logFn.debug) {\r\n                        this.logFn.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Logger.InteropMethodName = \"T42.AppLogger.Log\";\r\n    return Logger;\r\n}());\n\nvar GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nvar GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nvar GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nvar GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nvar GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nvar GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nvar GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nvar GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nvar GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nvar GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nvar GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nvar GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nvar GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n\nvar ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            GW_MESSAGE_CREATE_CONTEXT,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            GW_MESSAGE_DESTROY_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_UPDATE_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\n\nvar version = \"5.4.9\";\n\nfunction prepareConfig (configuration, ext, glue42gd) {\r\n    var _a, _b, _c, _d, _e;\r\n    var nodeStartingContext;\r\n    if (Utils.isNode()) {\r\n        var startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            }\r\n            catch (_f) {\r\n            }\r\n        }\r\n    }\r\n    function getConnection() {\r\n        var _a, _b, _c, _d, _e;\r\n        var gwConfig = configuration.gateway;\r\n        var protocolVersion = (_a = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.protocolVersion) !== null && _a !== void 0 ? _a : 3;\r\n        var reconnectInterval = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectInterval;\r\n        var reconnectAttempts = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.reconnectAttempts;\r\n        var defaultWs = \"ws://localhost:8385\";\r\n        var ws = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.ws;\r\n        var sharedWorker = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.sharedWorker;\r\n        var inproc = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.inproc;\r\n        var webPlatform = (_b = gwConfig === null || gwConfig === void 0 ? void 0 : gwConfig.webPlatform) !== null && _b !== void 0 ? _b : undefined;\r\n        if (glue42gd) {\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n        var instanceId;\r\n        var windowId;\r\n        var pid;\r\n        var environment;\r\n        var region;\r\n        var appName = getApplication();\r\n        var uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            uniqueAppName = (_c = glue42gd.application) !== null && _c !== void 0 ? _c : \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        }\r\n        else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        }\r\n        else ;\r\n        var replaySpecs = (_e = (_d = configuration.gateway) === null || _d === void 0 ? void 0 : _d.replaySpecs) !== null && _e !== void 0 ? _e : [];\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n        return {\r\n            identity: {\r\n                application: uniqueAppName,\r\n                applicationName: appName,\r\n                windowId: windowId,\r\n                instance: instanceId,\r\n                process: pid,\r\n                region: region,\r\n                environment: environment,\r\n                api: ext.version || version\r\n            },\r\n            reconnectInterval: reconnectInterval,\r\n            ws: ws,\r\n            sharedWorker: sharedWorker,\r\n            webPlatform: webPlatform,\r\n            inproc: inproc,\r\n            protocolVersion: protocolVersion,\r\n            reconnectAttempts: reconnectAttempts,\r\n            replaySpecs: replaySpecs,\r\n        };\r\n    }\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n        var uid = shortid();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n            return \"NodeJS\" + uid;\r\n        }\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + (\" (\" + uid + \")\");\r\n        }\r\n        return uid;\r\n    }\r\n    function getAuth() {\r\n        var _a, _b, _c;\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n        if (((_a = configuration.gateway) === null || _a === void 0 ? void 0 : _a.webPlatform) || ((_b = configuration.gateway) === null || _b === void 0 ? void 0 : _b.inproc) || ((_c = configuration.gateway) === null || _c === void 0 ? void 0 : _c.sharedWorker)) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n    function getLogger() {\r\n        var _a, _b;\r\n        var config = configuration.logger;\r\n        var defaultLevel = \"warn\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n        var gdConsoleLevel;\r\n        if (glue42gd) {\r\n            gdConsoleLevel = glue42gd.consoleLogLevel;\r\n        }\r\n        if (typeof config === \"string\") {\r\n            return { console: gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config, publish: defaultLevel };\r\n        }\r\n        return {\r\n            console: (_a = gdConsoleLevel !== null && gdConsoleLevel !== void 0 ? gdConsoleLevel : config.console) !== null && _a !== void 0 ? _a : defaultLevel,\r\n            publish: (_b = config.publish) !== null && _b !== void 0 ? _b : defaultLevel\r\n        };\r\n    }\r\n    var connection = getConnection();\r\n    var application = getApplication();\r\n    if (typeof window !== \"undefined\") {\r\n        var windowAsAny = window;\r\n        var containerApplication = windowAsAny.htmlContainer ?\r\n            windowAsAny.htmlContainer.containerName + \".\" + windowAsAny.htmlContainer.application : (_a = windowAsAny === null || windowAsAny === void 0 ? void 0 : windowAsAny.glue42gd) === null || _a === void 0 ? void 0 : _a.application;\r\n        if (containerApplication) {\r\n            application = containerApplication;\r\n        }\r\n    }\r\n    return {\r\n        bus: (_b = configuration.bus) !== null && _b !== void 0 ? _b : false,\r\n        application: application,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: (_c = configuration.metrics) !== null && _c !== void 0 ? _c : true,\r\n        contexts: (_d = configuration.contexts) !== null && _d !== void 0 ? _d : true,\r\n        version: ext.version || version,\r\n        libs: (_e = ext.libs) !== null && _e !== void 0 ? _e : [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\n\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\n\nfunction applyContextDelta(context, delta, logger) {\r\n    try {\r\n        if (logger === null || logger === void 0 ? void 0 : logger.canPublish(\"trace\")) {\r\n            logger === null || logger === void 0 ? void 0 : logger.trace(\"applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context));\r\n        }\r\n        if (!delta) {\r\n            return context;\r\n        }\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, undefined);\r\n        if (delta.commands) {\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    deletePath(context, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(context, command.value, command.path);\r\n                }\r\n            }\r\n            return context;\r\n        }\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n        return context;\r\n    }\r\n    catch (e) {\r\n        logger === null || logger === void 0 ? void 0 : logger.error(\"error applying context delta \" + JSON.stringify(delta) + \" on context \" + JSON.stringify(context), e);\r\n        return context;\r\n    }\r\n}\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, __spreadArrays([result], Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction setValueToPath(obj, value, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        if (typeof obj[pathArr[i]] !== \"object\") {\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    obj[pathArr[i]] = value;\r\n}\r\nfunction isSubset(superObj, subObj) {\r\n    return Object.keys(subObj).every(function (ele) {\r\n        if (typeof subObj[ele] === \"object\") {\r\n            return isSubset((superObj === null || superObj === void 0 ? void 0 : superObj[ele]) || {}, subObj[ele] || {});\r\n        }\r\n        return subObj[ele] === (superObj === null || superObj === void 0 ? void 0 : superObj[ele]);\r\n    });\r\n}\r\nfunction deletePath(obj, path) {\r\n    var pathArr = path.split(\".\");\r\n    var i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            return;\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    delete obj[pathArr[i]];\r\n}\n\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        var _a;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._protocolVersion = undefined;\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", [\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        (_a = this._connection.replayer) === null || _a === void 0 ? void 0 : _a.drain(ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(GW3Bridge.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            var _a;\r\n            if (!this._protocolVersion) {\r\n                var contextsDomainInfo = this._connection.availableDomains.find(function (d) { return d.uri === \"context\"; });\r\n                this._protocolVersion = (_a = contextsDomainInfo === null || contextsDomainInfo === void 0 ? void 0 : contextsDomainInfo.version) !== null && _a !== void 0 ? _a : 1;\r\n            }\r\n            return this._protocolVersion;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GW3Bridge.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this.protocolVersion >= 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            _this._contextIdToName[createContextMsg.context_id] = name;\r\n            var contextData = _this._contextNameToData[name] || new GW3ContextData(createContextMsg.context_id, name, true, undefined);\r\n            contextData.isAnnounced = true;\r\n            contextData.name = name;\r\n            contextData.contextId = createContextMsg.context_id;\r\n            contextData.context = data;\r\n            _this._contextNameToData[name] = contextData;\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextData, currentContext, calculatedDelta;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        contextData = this._contextNameToData[name];\r\n                        if (!contextData || !contextData.isAnnounced) {\r\n                            return [2, this.createContext(name, delta)];\r\n                        }\r\n                        currentContext = contextData.context;\r\n                        if (!!contextData.hasCallbacks()) return [3, 2];\r\n                        return [4, this.get(contextData.name)];\r\n                    case 1:\r\n                        currentContext = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        calculatedDelta = this.protocolVersion === 2 ?\r\n                            this.calculateContextDeltaV2(currentContext, delta) :\r\n                            this.calculateContextDeltaV1(currentContext, delta);\r\n                        if (!Object.keys(calculatedDelta.added).length\r\n                            && !Object.keys(calculatedDelta.updated).length\r\n                            && !calculatedDelta.removed.length\r\n                            && !((_a = calculatedDelta.commands) === null || _a === void 0 ? void 0 : _a.length)) {\r\n                            return [2, Promise.resolve()];\r\n                        }\r\n                        return [2, this._gw3Session\r\n                                .send({\r\n                                type: GW_MESSAGE_UPDATE_CONTEXT,\r\n                                domain: \"global\",\r\n                                context_id: contextData.contextId,\r\n                                delta: calculatedDelta,\r\n                            }, {}, { skipPeerId: false })\r\n                                .then(function (gwResponse) {\r\n                                _this.handleUpdated(contextData, calculatedDelta, {\r\n                                    updaterId: gwResponse.peer_id\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.setPath = function (name, path, value) {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        return this.setPaths(name, [{ path: path, value: value }]);\r\n    };\r\n    GW3Bridge.prototype.setPaths = function (name, pathValues) {\r\n        var _this = this;\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            var obj = {};\r\n            for (var _i = 0, pathValues_1 = pathValues; _i < pathValues_1.length; _i++) {\r\n                var pathValue = pathValues_1[_i];\r\n                setValueToPath(obj, pathValue.value, pathValue.path);\r\n            }\r\n            return this.createContext(name, obj);\r\n        }\r\n        var commands = [];\r\n        for (var _a = 0, pathValues_2 = pathValues; _a < pathValues_2.length; _a++) {\r\n            var pathValue = pathValues_2[_a];\r\n            if (pathValue.value === null) {\r\n                commands.push({ type: \"remove\", path: pathValue.path });\r\n            }\r\n            else {\r\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\r\n            }\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { commands: commands }\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands: commands }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var _a;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return Promise.resolve({});\r\n        }\r\n        if (contextData && !contextData.hasCallbacks()) {\r\n            return new Promise(function (resolve, _) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    this.subscribe(name, function (data, _d, _r, un) {\r\n                        _this.unsubscribe(un);\r\n                        resolve(data);\r\n                    });\r\n                    return [2];\r\n                });\r\n            }); });\r\n        }\r\n        var context = (_a = contextData === null || contextData === void 0 ? void 0 : contextData.context) !== null && _a !== void 0 ? _a : {};\r\n        return Promise.resolve(context);\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context && contextData.sentExplicitSubscription) {\r\n                    var clone = deepClone(contextData.context);\r\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                var clone = deepClone(contextData.context);\r\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            var clone = deepClone(contextData.context);\r\n            callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.destroy = function (name) {\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData) {\r\n            return Promise.reject(\"context with \" + name + \" does not exist\");\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_DESTROY_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_ADDED,\r\n            GW_MESSAGE_CONTEXT_CREATED,\r\n            GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else ;\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_UPDATED,\r\n            GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new GW3ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(contextData.context, contextUpdatedMsg.delta, this._logger);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        if (delta.commands) {\r\n            delta.added = delta.updated = delta.reset = {};\r\n            delta.removed = [];\r\n            for (var _i = 0, _a = delta.commands; _i < _a.length; _i++) {\r\n                var command = _a[_i];\r\n                if (command.type === \"remove\") {\r\n                    if (command.path.indexOf(\".\") === -1) {\r\n                        delta.removed.push(command.path);\r\n                    }\r\n                    setValueToPath(delta.updated, null, command.path);\r\n                }\r\n                else if (command.type === \"set\") {\r\n                    setValueToPath(delta.updated, command.value, command.path);\r\n                }\r\n            }\r\n        }\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            GW_MESSAGE_CONTEXT_DESTROYED,\r\n            GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV1 = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    GW3Bridge.prototype.calculateContextDeltaV2 = function (from, to) {\r\n        var _a, _b;\r\n        var delta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\r\n        for (var _i = 0, _c = Object.keys(to); _i < _c.length; _i++) {\r\n            var x = _c[_i];\r\n            if (to[x] !== null) {\r\n                var fromX = from ? from[x] : null;\r\n                if (!deepEqual(fromX, to[x])) {\r\n                    (_a = delta.commands) === null || _a === void 0 ? void 0 : _a.push({ type: \"set\", path: x, value: to[x] });\r\n                }\r\n            }\r\n            else {\r\n                (_b = delta.commands) === null || _b === void 0 ? void 0 : _b.push({ type: \"remove\", path: x });\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\n\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.update(name, data);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.setPath = function (name, path, data) {\r\n        this.checkName(name);\r\n        this.checkPath(path);\r\n        var isTopLevelPath = path === \"\";\r\n        if (isTopLevelPath) {\r\n            this.checkData(data);\r\n            return this.set(name, data);\r\n        }\r\n        return this._bridge.setPath(name, path, data);\r\n    };\r\n    ContextsModule.prototype.setPaths = function (name, paths) {\r\n        this.checkName(name);\r\n        if (!Array.isArray(paths)) {\r\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\r\n        }\r\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\r\n            var _a = paths_1[_i], path = _a.path, value = _a.value;\r\n            this.checkPath(path);\r\n            var isTopLevelPath = path === \"\";\r\n            if (isTopLevelPath) {\r\n                this.checkData(value);\r\n            }\r\n        }\r\n        return this._bridge.setPaths(name, paths);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Please provide the callback as a function!\");\r\n        }\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.destroy = function (name) {\r\n        this.checkName(name);\r\n        return this._bridge.destroy(name);\r\n    };\r\n    Object.defineProperty(ContextsModule.prototype, \"setPathSupported\", {\r\n        get: function () {\r\n            return this._bridge.setPathSupported;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n            throw new Error(\"Please provide the name as a non-empty string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkPath = function (path) {\r\n        if (typeof path !== \"string\") {\r\n            throw new Error(\"Please provide the path as a dot delimited string!\");\r\n        }\r\n    };\r\n    ContextsModule.prototype.checkData = function (data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Please provide the data as an object!\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\n\nfunction promisify (promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    return promise.then(successCallback, errorCallback);\r\n}\n\nfunction rejectAfter(ms, promise, error) {\r\n    if (ms === void 0) { ms = 0; }\r\n    var timeout;\r\n    var clearTimeoutIfThere = function () {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    };\r\n    promise\r\n        .then(function () {\r\n        clearTimeoutIfThere();\r\n    })\r\n        .catch(function () {\r\n        clearTimeoutIfThere();\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        timeout = setTimeout(function () { return reject(error); }, ms);\r\n    });\r\n}\n\nvar InvokeStatus;\r\n(function (InvokeStatus) {\r\n    InvokeStatus[InvokeStatus[\"Success\"] = 0] = \"Success\";\r\n    InvokeStatus[InvokeStatus[\"Error\"] = 1] = \"Error\";\r\n})(InvokeStatus || (InvokeStatus = {}));\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback, existingSub) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            var _a;\r\n            options.methodResponseTimeout = (_a = options.methodResponseTimeout) !== null && _a !== void 0 ? _a : options.waitTimeoutMs;\r\n            _this.protocol.client.subscribe(stream, options, targetServers, successProxy, errorProxy, existingSub);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!method) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (!methodDef.name) {\r\n                reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n                return;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\", \\\"best\\\", or an instance.\"));\r\n                return;\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        var filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : __assign({}, methodFilter);\r\n        return this.getServers(filterCopy).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        else {\r\n            methodFilter = __assign({}, methodFilter);\r\n        }\r\n        return this.getMethods(methodFilter);\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance);\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(callback);\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(callback);\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(callback);\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server, reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server, method: method });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var getInvokePromise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                getInvokePromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var methodDefinition, serversMethodMap, err_1, method, errorObj, timeout, additionalOptionsCopy, invokePromises, invocationMessages, results, allRejected;\r\n                    var _this = this;\r\n                    var _a, _b, _c;\r\n                    return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (typeof methodFilter === \"string\") {\r\n                                    methodDefinition = { name: methodFilter };\r\n                                }\r\n                                else {\r\n                                    methodDefinition = __assign({}, methodFilter);\r\n                                }\r\n                                if (!methodDefinition.name) {\r\n                                    return [2, Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\")];\r\n                                }\r\n                                if (!argumentObj) {\r\n                                    argumentObj = {};\r\n                                }\r\n                                if (!target) {\r\n                                    target = \"best\";\r\n                                }\r\n                                if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + target + \"\\\" is not a valid target. Valid targets are \\\"all\\\" and \\\"best\\\".\"))];\r\n                                }\r\n                                if (!additionalOptions) {\r\n                                    additionalOptions = {};\r\n                                }\r\n                                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                    additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                                    if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                                        additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                    additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                                    if (additionalOptions.waitTimeoutMs === undefined) {\r\n                                        additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                                    }\r\n                                }\r\n                                if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                                    return [2, Promise.reject(new Error(\"\\\"\" + additionalOptions.waitTimeoutMs + \"\\\" is not a valid number for \\\"waitTimeoutMs\\\" \"))];\r\n                                }\r\n                                if (typeof argumentObj !== \"object\") {\r\n                                    return [2, Promise.reject(new Error(\"The method arguments must be an object. method: \" + methodDefinition.name))];\r\n                                }\r\n                                serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                                if (!(serversMethodMap.length === 0)) return [3, 4];\r\n                                _d.label = 1;\r\n                            case 1:\r\n                                _d.trys.push([1, 3, , 4]);\r\n                                return [4, this.tryToAwaitForMethods(methodDefinition, target, additionalOptions)];\r\n                            case 2:\r\n                                serversMethodMap = _d.sent();\r\n                                return [3, 4];\r\n                            case 3:\r\n                                err_1 = _d.sent();\r\n                                method = __assign(__assign({}, methodDefinition), { getServers: function () { return []; }, supportsStreaming: false, objectTypes: (_a = methodDefinition.objectTypes) !== null && _a !== void 0 ? _a : [], flags: (_c = (_b = methodDefinition.flags) === null || _b === void 0 ? void 0 : _b.metadata) !== null && _c !== void 0 ? _c : {} });\r\n                                errorObj = {\r\n                                    method: method,\r\n                                    called_with: argumentObj,\r\n                                    message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                                    executed_by: undefined,\r\n                                    returned: undefined,\r\n                                    status: undefined,\r\n                                };\r\n                                return [2, Promise.reject(errorObj)];\r\n                            case 4:\r\n                                timeout = additionalOptions.methodResponseTimeoutMs;\r\n                                additionalOptionsCopy = additionalOptions;\r\n                                invokePromises = serversMethodMap.map(function (serversMethodPair) {\r\n                                    var invId = shortid();\r\n                                    var method = serversMethodPair.methods[0];\r\n                                    var server = serversMethodPair.server;\r\n                                    var invokePromise = _this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\r\n                                    return Promise.race([\r\n                                        invokePromise,\r\n                                        rejectAfter(timeout, invokePromise, {\r\n                                            invocationId: invId,\r\n                                            message: \"Invocation timeout (\" + timeout + \" ms) reached for method name: \" + (method === null || method === void 0 ? void 0 : method.name) + \", target instance: \" + JSON.stringify(server.instance) + \", options: \" + JSON.stringify(additionalOptionsCopy),\r\n                                            status: InvokeStatus.Error,\r\n                                        })\r\n                                    ]);\r\n                                });\r\n                                return [4, Promise.all(invokePromises)];\r\n                            case 5:\r\n                                invocationMessages = _d.sent();\r\n                                results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n                                allRejected = invocationMessages.every(function (result) { return result.status === InvokeStatus.Error; });\r\n                                if (allRejected) {\r\n                                    return [2, Promise.reject(results)];\r\n                                }\r\n                                return [2, results];\r\n                        }\r\n                    });\r\n                }); };\r\n                return [2, promisify(getInvokePromise(), success, error)];\r\n            });\r\n        });\r\n    };\r\n    Client.prototype.getInvocationResultObj = function (invocationResults, method, calledWith) {\r\n        var all_return_values = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Success; })\r\n            .reduce(function (allValues, currentValue) {\r\n            allValues = __spreadArrays(allValues, [\r\n                {\r\n                    executed_by: currentValue.instance,\r\n                    returned: currentValue.result,\r\n                    called_with: calledWith,\r\n                    method: method,\r\n                    message: currentValue.message,\r\n                    status: currentValue.status,\r\n                }\r\n            ]);\r\n            return allValues;\r\n        }, []);\r\n        var all_errors = invocationResults\r\n            .filter(function (invokeMessage) { return invokeMessage.status === InvokeStatus.Error; })\r\n            .reduce(function (allErrors, currError) {\r\n            allErrors = __spreadArrays(allErrors, [\r\n                {\r\n                    executed_by: currError.instance,\r\n                    called_with: calledWith,\r\n                    name: method.name,\r\n                    message: currError.message,\r\n                }\r\n            ]);\r\n            return allErrors;\r\n        }, []);\r\n        var invResult = invocationResults[0];\r\n        var result = {\r\n            method: method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values: all_return_values,\r\n            all_errors: all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n        return result;\r\n    };\r\n    Client.prototype.tryToAwaitForMethods = function (methodDefinition, target, additionalOptions) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var retry = function () {\r\n                delayTillNow += delayStep;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                }\r\n                else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            var interval = setInterval(retry, delayStep);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return __spreadArrays(serverMethodMap);\r\n            }\r\n            else if (target === \"best\") {\r\n                var localMachine = serverMethodMap\r\n                    .find(function (s) { return s.server.instance.isLocal; });\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            }\r\n            else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(function (_a) {\r\n                    var server = _a.server;\r\n                    return server.instance.peerId !== _this.instance.peerId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var targetArray = void 0;\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            }\r\n            else {\r\n                targetArray = target;\r\n            }\r\n            var allServersMatching = targetArray.reduce(function (matches, filter) {\r\n                var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                    return _this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, repoMethod) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return filter[prop] !== undefined\r\n                && typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\"\r\n                && prop !== \"id\"\r\n                && prop !== \"gatewayId\"\r\n                && prop !== \"identifier\"\r\n                && prop[0] !== \"_\";\r\n        });\r\n        return filterProps.every(function (prop) {\r\n            var isMatch;\r\n            var filterValue = filter[prop];\r\n            var repoMethodValue = repoMethod[prop];\r\n            switch (prop) {\r\n                case \"objectTypes\":\r\n                    isMatch = (filterValue || []).every(function (filterValueEl) {\r\n                        return (repoMethodValue || []).includes(filterValueEl);\r\n                    });\r\n                    break;\r\n                case \"flags\":\r\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\r\n                    break;\r\n                default:\r\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\r\n            }\r\n            return isMatch;\r\n        });\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        var methods = this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method);\r\n        });\r\n        return methods;\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server, methods: [] };\r\n            });\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = Object.values(current.methods);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\n\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            if (!this.repoMethod.stream) {\r\n                throw new Error(\"no stream\");\r\n            }\r\n            return this.repoMethod.stream;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () {\r\n            if (!this.subscription.instance) {\r\n                throw new Error(\"no instance\");\r\n            }\r\n            return this.subscription.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\n\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\n\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\n\nvar ServerStream = (function () {\r\n    function ServerStream(_protocol, _repoMethod, _server) {\r\n        this._protocol = _protocol;\r\n        this._repoMethod = _repoMethod;\r\n        this._server = _server;\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new ServerBranch(branchKey, _this._protocol, _this._repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.branch = function (key) {\r\n        return this.branches(key);\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new ServerSubscription(_this._protocol, _this._repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var _a;\r\n            var def2 = this._repoMethod.definition;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n                flags: (_a = def2.flags) === null || _a === void 0 ? void 0 : _a.metadata,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    };\r\n    ServerStream.prototype.updateRepoMethod = function (repoMethod) {\r\n        this._repoMethod = repoMethod;\r\n    };\r\n    return ServerStream;\r\n}());\n\nvar Server = (function () {\r\n    function Server(protocol, serverRepository) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.invocations = 0;\r\n        this.currentlyUnregistering = {};\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback, existingStream) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (!streamDef) {\r\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to \\u201Cglue.interop.createStream()\\u201D or a \\u201CmethodDefinition\\u201D object with a unique \\u201Cname\\u201D property for the stream.\");\r\n                return;\r\n            }\r\n            var streamMethodDefinition;\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            }\r\n            else {\r\n                streamMethodDefinition = __assign({}, streamDef);\r\n            }\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(\"The \\u201Cname\\u201D property is required for the \\u201CstreamDefinition\\u201D object and must be unique. Stream definition: \" + JSON.stringify(streamMethodDefinition));\r\n            }\r\n            var nameAlreadyExists = _this.serverRepository.getList()\r\n                .some(function (serverMethod) { return serverMethod.definition.name === streamMethodDefinition.name; });\r\n            if (nameAlreadyExists) {\r\n                return reject(\"A stream with the name \\\"\" + streamMethodDefinition.name + \"\\\" already exists! Please, provide a unique name for the stream.\");\r\n            }\r\n            streamMethodDefinition.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = _this.serverRepository.add({\r\n                definition: streamMethodDefinition,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n            _this.protocol.server.createStream(repoMethod)\r\n                .then(function () {\r\n                var streamUserObject;\r\n                if (existingStream) {\r\n                    streamUserObject = existingStream;\r\n                    existingStream.updateRepoMethod(repoMethod);\r\n                }\r\n                else {\r\n                    streamUserObject = new ServerStream(_this.protocol, repoMethod, _this);\r\n                }\r\n                repoMethod.stream = streamUserObject;\r\n                resolve(streamUserObject);\r\n            })\r\n                .catch(function (err) {\r\n                if (repoMethod.repoId) {\r\n                    _this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        var _this = this;\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) { return __awaiter(_this, void 0, void 0, function () {\r\n            var result, resultValue, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        result = callback(context.args, context.instance);\r\n                        if (!(result && typeof result.then === \"function\")) return [3, 2];\r\n                        return [4, result];\r\n                    case 1:\r\n                        resultValue = _a.sent();\r\n                        resultCallback(undefined, resultValue);\r\n                        return [3, 3];\r\n                    case 2:\r\n                        resultCallback(undefined, result);\r\n                        _a.label = 3;\r\n                    case 3: return [3, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        if (!e_1) {\r\n                            e_1 = \"\";\r\n                        }\r\n                        resultCallback(e_1, e_1);\r\n                        return [3, 5];\r\n                    case 5: return [2];\r\n                }\r\n            });\r\n        }); };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a \\u201CmethodDefinition\\u201D object with a required \\u201Cname\\u201D property.\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be a callback function. Method: \" + (typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name));\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                var resultCalled_1 = false;\r\n                var success = function (result) {\r\n                    if (!resultCalled_1) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var error = function (e) {\r\n                    if (!resultCalled_1) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled_1 = true;\r\n                };\r\n                var methodResult = callback(context.args, context.instance, success, error);\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please, provide either a unique string for a name or an object containing a \\u201Cname\\u201D property.\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method with a name \\\"\" + methodDefinition.name + \"\\\" does not exist or is not registered by your application!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"Could not find a \" + (forStream ? \"stream\" : \"method\") + \" matching the specified condition!\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        var _this = this;\r\n        var methodUnregPromises = [];\r\n        methodsToRemove.forEach(function (method) {\r\n            var promise = _this.protocol.server.unregister(method)\r\n                .then(function () {\r\n                if (method.repoId) {\r\n                    _this.serverRepository.remove(method.repoId);\r\n                }\r\n            });\r\n            methodUnregPromises.push(promise);\r\n            _this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n        return Promise.all(methodUnregPromises);\r\n    };\r\n    Server.prototype.addAsCurrentlyUnregistering = function (methodName, promise) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var timeout;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                timeout = new Promise(function (resolve) { return setTimeout(resolve, 5000); });\r\n                this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(function () {\r\n                    delete _this.currentlyUnregistering[methodName];\r\n                });\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, unregisterInProgress, nameAlreadyExists, repoMethod;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof method === \"string\") {\r\n                            methodDefinition = { name: \"\" + method };\r\n                        }\r\n                        else {\r\n                            methodDefinition = __assign({}, method);\r\n                        }\r\n                        if (!methodDefinition.name) {\r\n                            return [2, Promise.reject(\"Please, provide a (unique) string value for the \\u201Cname\\u201D property in the \\u201CmethodDefinition\\u201D object: \" + JSON.stringify(method))];\r\n                        }\r\n                        unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n                        if (!unregisterInProgress) return [3, 2];\r\n                        return [4, unregisterInProgress];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nameAlreadyExists = this.serverRepository.getList()\r\n                            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n                        if (nameAlreadyExists) {\r\n                            return [2, Promise.reject(\"A method with the name \\\"\" + methodDefinition.name + \"\\\" already exists! Please, provide a unique name for the method.\")];\r\n                        }\r\n                        if (methodDefinition.supportsStreaming) {\r\n                            return [2, Promise.reject(\"When you create methods with \\u201Cglue.interop.register()\\u201D or \\u201Cglue.interop.registerAsync()\\u201D the property \\u201CsupportsStreaming\\u201D cannot be \\u201Ctrue\\u201D. If you want \\u201C\" + methodDefinition.name + \"\\u201D to be a stream, please use the \\u201Cglue.interop.createStream()\\u201D method.\")];\r\n                        }\r\n                        repoMethod = this.serverRepository.add({\r\n                            definition: methodDefinition,\r\n                            theFunction: theFunction,\r\n                            protocolState: {},\r\n                        });\r\n                        return [2, this.protocol.server.register(repoMethod)\r\n                                .catch(function (err) {\r\n                                if (repoMethod === null || repoMethod === void 0 ? void 0 : repoMethod.repoId) {\r\n                                    _this.serverRepository.remove(repoMethod.repoId);\r\n                                }\r\n                                throw err;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err !== undefined && err !== null) {\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result) {\r\n                result = {};\r\n            }\r\n            else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                result = { _value: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\n\nvar InstanceWrapper = (function () {\r\n    function InstanceWrapper(API, instance, connection) {\r\n        var _this = this;\r\n        this.wrapped = {};\r\n        this.wrapped.getMethods = function () {\r\n            return API.methodsForInstance(this);\r\n        };\r\n        this.wrapped.getStreams = function () {\r\n            return API.methodsForInstance(this).filter(function (m) { return m.supportsStreaming; });\r\n        };\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(function () {\r\n                _this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n    InstanceWrapper.prototype.unwrap = function () {\r\n        return this.wrapped;\r\n    };\r\n    InstanceWrapper.prototype.refresh = function (connection) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n        var resolvedIdentity = connection === null || connection === void 0 ? void 0 : connection.resolvedIdentity;\r\n        var instance = Object.assign({}, resolvedIdentity !== null && resolvedIdentity !== void 0 ? resolvedIdentity : {}, { peerId: connection === null || connection === void 0 ? void 0 : connection.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    };\r\n    InstanceWrapper.prototype.refreshWrappedObject = function (resolvedIdentity) {\r\n        var _a, _b, _c;\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = (_a = resolvedIdentity.application) !== null && _a !== void 0 ? _a : shortid();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = (_c = (_b = resolvedIdentity.pid) !== null && _b !== void 0 ? _b : resolvedIdentity.process) !== null && _c !== void 0 ? _c : Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    };\r\n    return InstanceWrapper;\r\n}());\n\nvar hideMethodSystemFlags = function (method) {\r\n    return __assign(__assign({}, method), { flags: method.flags.metadata || {} });\r\n};\r\nvar ClientRepository = (function () {\r\n    function ClientRepository(logger, API) {\r\n        this.logger = logger;\r\n        this.API = API;\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = lib();\r\n        var peerId = this.API.instance.peerId;\r\n        this.myServer = {\r\n            id: peerId,\r\n            methods: {},\r\n            instance: this.API.instance,\r\n            wrapper: this.API.unwrappedInstance,\r\n        };\r\n        this.servers[peerId] = this.myServer;\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        this.logger.debug(\"adding server \" + serverId);\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var wrapper = new InstanceWrapper(this.API, info);\r\n        var serverEntry = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper: wrapper,\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        if (!server) {\r\n            this.logger.warn(\"not aware of server \" + id + \", my state \" + JSON.stringify(Object.keys(this.servers)));\r\n            return;\r\n        }\r\n        else {\r\n            this.logger.debug(\"removing server \" + id);\r\n        }\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method) {\r\n        var _a;\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n        var identifier = this.createMethodIdentifier(method);\r\n        var that = this;\r\n        var methodDefinition = {\r\n            identifier: identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            flags: (_a = method.flags) !== null && _a !== void 0 ? _a : {},\r\n            getServers: function () {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        methodDefinition.object_types = methodDefinition.objectTypes;\r\n        methodDefinition.display_name = methodDefinition.displayName;\r\n        methodDefinition.version = methodDefinition.version;\r\n        server.methods[method.id] = methodDefinition;\r\n        var clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\r\n        return methodDefinition;\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        var clientMethodDefinition = hideMethodSystemFlags(method);\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        var serversWithMethodsToReplay = this.getServers().map(function (s) { return s.instance; });\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        var methodsToReplay = this.getMethods();\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        var unsubCalled = false;\r\n        var servers = this.getServers();\r\n        setTimeout(function () {\r\n            servers.forEach(function (server) {\r\n                var methods = server.methods;\r\n                Object.keys(methods).forEach(function (methodId) {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.hideServerMethodSystemFlags(this.servers[id]);\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        var _a;\r\n        var _this = this;\r\n        Object.keys(this.servers).forEach(function (key) {\r\n            _this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = (_a = {},\r\n            _a[this.myServer.id] = this.myServer,\r\n            _a);\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createMethodIdentifier = function (methodInfo) {\r\n        var accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        var returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (identifier) {\r\n        var allServers = [];\r\n        Object.values(this.servers).forEach(function (server) {\r\n            Object.values(server.methods).forEach(function (method) {\r\n                if (method.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.returnUnsubWithDelayedReplay = function (unsubscribeFunc, collectionToReplay, callback) {\r\n        var unsubCalled = false;\r\n        setTimeout(function () {\r\n            collectionToReplay.forEach(function (item) {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n        return function () {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    };\r\n    ClientRepository.prototype.hideServerMethodSystemFlags = function (server) {\r\n        var clientMethods = {};\r\n        Object.entries(server.methods).forEach(function (_a) {\r\n            var name = _a[0], method = _a[1];\r\n            clientMethods[name] = hideMethodSystemFlags(method);\r\n        });\r\n        return __assign(__assign({}, server), { methods: clientMethods });\r\n    };\r\n    ClientRepository.prototype.extractMethodsFromServers = function (servers) {\r\n        var methods = Object.values(servers).reduce(function (clientMethods, server) {\r\n            return __spreadArrays(clientMethods, Object.values(server.methods));\r\n        }, []);\r\n        return methods;\r\n    };\r\n    return ClientRepository;\r\n}());\n\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.find(function (m) {\r\n            return m.repoId === id;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\n\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming$1 = (function () {\r\n    function ServerStreaming(session, repository, serverRepository) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = lib();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) {\r\n            _this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", function (msg) {\r\n            _this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            if (!branches || branches.length === 0) {\r\n                return true;\r\n            }\r\n            return branches.indexOf(br.key) >= 0;\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        var subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        var allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map(function (key) {\r\n            return subscriptionsMap[key];\r\n        });\r\n        var result = [];\r\n        allSubscriptions.forEach(function (sub) {\r\n            var branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = caller.instance;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(\"streaming \" + streamingMethod.definition.name + \" method without protocol state\");\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\n\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = lib();\r\n        this.streaming = new ServerStreaming$1(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod) {\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        return this.register(repoMethod, true);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, isStreaming) {\r\n        var _this = this;\r\n        var _a;\r\n        var methodDef = repoMethod.definition;\r\n        var flags = Object.assign({}, { metadata: (_a = methodDef.flags) !== null && _a !== void 0 ? _a : {} }, { streaming: isStreaming || false });\r\n        var registerMsg = {\r\n            type: \"register\",\r\n            methods: [{\r\n                    id: repoMethod.repoId,\r\n                    name: methodDef.name,\r\n                    display_name: methodDef.displayName,\r\n                    description: methodDef.description,\r\n                    version: methodDef.version,\r\n                    flags: flags,\r\n                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                    input_signature: methodDef.accepts,\r\n                    result_signature: methodDef.returns,\r\n                    restrictions: undefined,\r\n                }],\r\n        };\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(function () {\r\n            _this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n        })\r\n            .catch(function (msg) {\r\n            _this.logger.warn(\"failed to register method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId + \" - \" + JSON.stringify(msg));\r\n            throw msg;\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId).instance;\r\n        var invocationArgs = { args: args, instance: client };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\n\nvar UserSubscription = (function () {\r\n    function UserSubscription(repository, subscriptionData) {\r\n        this.repository = repository;\r\n        this.subscriptionData = subscriptionData;\r\n    }\r\n    Object.defineProperty(UserSubscription.prototype, \"requestArguments\", {\r\n        get: function () {\r\n            return this.subscriptionData.params.arguments || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"servers\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this.subscriptionData.trackedServers\r\n                .filter(function (pair) { return pair.subscriptionId; })\r\n                .map(function (pair) { return _this.repository.getServerById(pair.serverId).instance; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"serverInstance\", {\r\n        get: function () {\r\n            return this.servers[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserSubscription.prototype, \"stream\", {\r\n        get: function () {\r\n            return this.subscriptionData.method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserSubscription.prototype.onData = function (dataCallback) {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach(function (dataItem) {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    };\r\n    UserSubscription.prototype.onClosed = function (closedCallback) {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    };\r\n    UserSubscription.prototype.onFailed = function (callback) {\r\n    };\r\n    UserSubscription.prototype.onConnected = function (callback) {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    };\r\n    UserSubscription.prototype.close = function () {\r\n        this.subscriptionData.close();\r\n    };\r\n    UserSubscription.prototype.setNewSubscription = function (newSub) {\r\n        this.subscriptionData = newSub;\r\n    };\r\n    return UserSubscription;\r\n}());\n\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.params.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.params.arguments,\r\n                        method: pendingSub.method,\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            if (isFirstResponse) {\r\n                var reconnect = false;\r\n                var sub = pendingSub.subscription;\r\n                if (sub) {\r\n                    sub.setNewSubscription(pendingSub);\r\n                    pendingSub.success(sub);\r\n                    reconnect = true;\r\n                }\r\n                else {\r\n                    sub = new UserSubscription(_this.repository, pendingSub);\r\n                    pendingSub.subscription = sub;\r\n                    pendingSub.success(sub);\r\n                }\r\n                for (var _i = 0, _a = pendingSub.handlers.onConnected; _i < _a.length; _i++) {\r\n                    var handler = _a[_i];\r\n                    try {\r\n                        handler(sub.serverInstance, reconnect);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).instance,\r\n                    requestArguments: subscription.params.arguments,\r\n                    message: undefined,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, params, targetServers, success, error, existingSub) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, params, success, error, params.methodResponseTimeout || 10000, existingSub);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            var method = target.methods.find(function (m) { return m.name === streamingMethod.name; });\r\n            if (!method) {\r\n                _this.logger.error(\"can not find method \" + streamingMethod.name + \" for target \" + target.server.id);\r\n                return;\r\n            }\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.drainSubscriptions = function () {\r\n        var existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, params, success, error, timeout, existingSub) {\r\n        var _this = this;\r\n        var subsInfo = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            params: params,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onData) || [],\r\n                onClosed: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onClosed) || [],\r\n                onConnected: (existingSub === null || existingSub === void 0 ? void 0 : existingSub.handlers.onConnected) || [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: function () { return _this.closeSubscription(subLocalKey); },\r\n            subscription: existingSub === null || existingSub === void 0 ? void 0 : existingSub.subscription\r\n        };\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n        subsInfo.timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return subsInfo;\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            subscription.queued.closers.push(server.serverId);\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\n\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(session, repository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, options, targetServers, success, error, existingSub) {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.gatewayId;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        return this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.drainSubscriptions = function () {\r\n        return this.streaming.drainSubscriptions();\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var isLocal = msg.meta ? msg.meta.local : true;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal: isLocal\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        return {\r\n            invocationId: invocationId,\r\n            result: result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        if (\"_tag\" in msg) {\r\n            var invocationId = msg._tag.invocationId;\r\n            var serverId = msg._tag.serverId;\r\n            var server = this.repository.getServerById(serverId);\r\n            var message = msg.reason;\r\n            var context_1 = msg.context;\r\n            return {\r\n                invocationId: invocationId,\r\n                result: context_1,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message: message\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: msg.message,\r\n                status: InvokeStatus.Error,\r\n                error: msg\r\n            };\r\n        }\r\n    };\r\n    return ClientProtocol;\r\n}());\n\nfunction gW3ProtocolFactory (instance, connection, clientRepository, serverRepository, libConfig, interop) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", [\"subscribed\"]);\r\n    var server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        var existingSubscriptions = client.drainSubscriptions();\r\n        for (var _i = 0, existingSubscriptions_1 = existingSubscriptions; _i < existingSubscriptions_1.length; _i++) {\r\n            var sub = existingSubscriptions_1[_i];\r\n            var methodInfo = sub.method;\r\n            var params = Object.assign({}, sub.params);\r\n            logger.info(\"trying to re-subscribe to method \" + methodInfo.name);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        for (var _a = 0, registeredMethods_1 = registeredMethods; _a < registeredMethods_1.length; _a++) {\r\n            var method = registeredMethods_1[_a];\r\n            var def = method.definition;\r\n            logger.info(\"re-publishing method \" + def.name);\r\n            if (method.stream) {\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client: client,\r\n                server: server,\r\n            });\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.onLeft(function () {\r\n        clientRepository.reset();\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\n\nvar Interop = (function () {\r\n    function Interop(configuration) {\r\n        var _this = this;\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n        var connection = configuration.connection;\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\r\n        this.instance = this.unwrappedInstance.unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\r\n        this.serverRepository = new ServerRepository();\r\n        var protocolPromise;\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        }\r\n        else {\r\n            throw new Error(\"protocol \" + connection.protocolVersion + \" not supported\");\r\n        }\r\n        this.readyPromise = protocolPromise.then(function (protocol) {\r\n            _this.protocol = protocol;\r\n            _this.client = new Client(_this.protocol, _this.clientRepository, _this.instance, configuration);\r\n            _this.server = new Server(_this.protocol, _this.serverRepository);\r\n            return _this;\r\n        });\r\n    }\r\n    Interop.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    Interop.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    Interop.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    Interop.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    Interop.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    Interop.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    Interop.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    Interop.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    Interop.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    Interop.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    Interop.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    Interop.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    Interop.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    Interop.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    Interop.prototype.waitForMethod = function (name) {\r\n        var pw = new PromiseWrapper();\r\n        var unsubscribe = this.client.methodAdded(function (m) {\r\n            if (m.name === name) {\r\n                unsubscribe();\r\n                pw.resolve(m);\r\n            }\r\n        });\r\n        return pw.promise;\r\n    };\r\n    return Interop;\r\n}());\n\nvar successMessages = [\"subscribed\", \"success\"];\r\nvar MessageBus = (function () {\r\n    function MessageBus(connection, logger) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n            var args = _this.removeEmptyValues({\r\n                type: \"publish\",\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, routingKey = _a.routingKey, target = _a.target;\r\n                var args = _this.removeEmptyValues({\r\n                    type: \"subscribe\",\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: \"unsubscribe\", subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on(\"event\", function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args[\"publisher-identity\"];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (_this.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(function () {\r\n            _this.watchOnEvent();\r\n        });\r\n    }\r\n    MessageBus.prototype.ready = function () {\r\n        return this.readyPromise;\r\n    };\r\n    MessageBus.prototype.removeEmptyValues = function (obj) {\r\n        var cleaned = {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    };\r\n    MessageBus.prototype.keysMatch = function (obj1, obj2) {\r\n        var keysObj1 = Object.keys(obj1);\r\n        var allMatch = true;\r\n        keysObj1.forEach(function (key) {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    };\r\n    return MessageBus;\r\n}());\n\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = Utils.getGDMajorVersion();\r\n    var glue42gd;\r\n    var preloadPromise = Promise.resolve();\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n    var glueInitTimer = timer(\"glue\");\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n    var _connection;\r\n    var _interop;\r\n    var _logger;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var _allowTrace;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(\"registering \" + name + \" module\");\r\n        }\r\n        var done = function () {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            inner.marks = t.marks;\r\n            if (_allowTrace) {\r\n                _logger.trace(name + \" is ready - \" + (t.endTime - t.startTime));\r\n            }\r\n        };\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n        name.forEach(function (n) {\r\n            libs[n] = inner;\r\n            GlueCore[n] = inner;\r\n        });\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer(\"connection\");\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                authPromise = glue42gd.getGWToken()\r\n                    .then(function (token) {\r\n                    return {\r\n                        gatewayToken: token\r\n                    };\r\n                });\r\n            }\r\n            else {\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            initTimer.mark(\"auth-promise-resolved\");\r\n            var authRequest;\r\n            if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function () {\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var _a;\r\n        var initTimer = timer(\"logger\");\r\n        _logger = new Logger(\"\" + ((_a = internalConfig.connection.identity) === null || _a === void 0 ? void 0 : _a.application), undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n        if (_logger.canPublish(\"debug\")) {\r\n            _logger.debug(\"initializing glue...\");\r\n        }\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        var _a, _b, _c, _d, _e;\r\n        var initTimer = timer(\"metrics\");\r\n        var config = internalConfig.metrics;\r\n        var metricsPublishingEnabledFunc = glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.getMetricsPublishingEnabled;\r\n        var identity = internalConfig.connection.identity;\r\n        var canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : function () { return true; };\r\n        var disableAutoAppSystem = (_a = (typeof config !== \"boolean\" && config.disableAutoAppSystem)) !== null && _a !== void 0 ? _a : false;\r\n        _metrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric: canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: (_c = (_b = identity === null || identity === void 0 ? void 0 : identity.service) !== null && _b !== void 0 ? _b : glue42gd === null || glue42gd === void 0 ? void 0 : glue42gd.applicationName) !== null && _c !== void 0 ? _c : internalConfig.application,\r\n            instance: (_e = (_d = identity === null || identity === void 0 ? void 0 : identity.instance) !== null && _d !== void 0 ? _d : identity === null || identity === void 0 ? void 0 : identity.windowId) !== null && _e !== void 0 ? _e : shortid(),\r\n            disableAutoAppSystem: disableAutoAppSystem,\r\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config === null || config === void 0 ? void 0 : config.pagePerformanceMetrics : undefined\r\n        });\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupInterop() {\r\n        var initTimer = timer(\"interop\");\r\n        var agmConfig = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && _connection.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer(\"contexts\");\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n    function setupBus() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var initTimer;\r\n            return __generator(this, function (_a) {\r\n                if (!internalConfig.bus) {\r\n                    return [2, Promise.resolve()];\r\n                }\r\n                initTimer = timer(\"bus\");\r\n                _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                return [2, Promise.resolve()];\r\n            });\r\n        });\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer(name);\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function (feedbackInfo) {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n        var info = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _logger === null || _logger === void 0 ? void 0 : _logger.info(\"done called by user...\");\r\n                return _connection.logout();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var all = getAllTimers();\r\n                return Object.keys(all).map(function (key) {\r\n                    var t = all[key];\r\n                    return {\r\n                        name: key,\r\n                        duration: t.endTime - t.startTime,\r\n                        marks: t.marks,\r\n                        startTime: t.startTime,\r\n                        endTime: t.endTime\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n        glue.config = {};\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext === null || ext === void 0 ? void 0 : ext.extOptions[k];\r\n            });\r\n        }\r\n        if (ext === null || ext === void 0 ? void 0 : ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        if (glue.agm) {\r\n            var deprecatedDecorator = function (fn, wrong, proper) {\r\n                return function () {\r\n                    glue.logger.warn(\"glue.js - 'glue.agm.\" + wrong + \"' method is deprecated, use 'glue.interop.\" + proper + \"' instead.\");\r\n                    return fn.apply(glue.agm, arguments);\r\n                };\r\n            };\r\n            var agmAny = glue.agm;\r\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\r\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\r\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\r\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\r\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\r\n        }\r\n        return glue;\r\n    }\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]); })\r\n        .then(function () { return _interop.readyPromise; })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = GlueCore;\r\n}\r\nGlueCore.version = version;\r\nGlueCore.default = GlueCore;\n\nexport default GlueCore;\n//# sourceMappingURL=core.es.js.map\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return arg === null || typeof arg === \"undefined\";\n}\n\nexport function isNullOrWhiteSpace(str: string) {\n  return (typeof str !== \"string\" || !str || str.length === 0 || /^\\s*$/.test(str));\n}\n\n/**\n *  Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { WindowDefinition } from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows.map((hw) => this.covertToWindowDef(hw));\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this.covertToWindowDef(this._ownerWindow);\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n\n  private covertToWindowDef(windowType: any): any {\n    // GD2 + old glue js backward compatible\n    return {\n      type: windowType?.id?.type,\n      name: windowType?.id?.name\n    };\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added: string = \"added\";\n    public static Removed: string = \"removed\";\n    public static Updated: string = \"updated\";\n    public static Closed: string = \"closed\";\n    public static StatusChange: string = \"statusChange\";\n    public static ActivityContextChange: string = \"activityContextUpdate\";\n    public static ActivityWindowEvent: string = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity: string = \"joined\";\n    public static ActivityWindowLeftActivity: string = \"left\";\n}\n\nexport class ActivityState {\n    public static Created: string = \"created\";\n    public static Started: string = \"started\";\n    public static Destroyed: string = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n                        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n                        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* tslint:disable */\n\nimport * as util from \"./util\";\nimport {Glue42Core} from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace: string = \"trace\";\n  public static Debug: string = \"debug\";\n  public static Info: string = \"info\";\n  public static Warn: string = \"warn\";\n  public static Error: string = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: Object): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","import { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\nconst gwMessageDestroyPeer = \"destroy-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n    private _windows: Glue42.Windows.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: Array<EventHandlerCallback<EntityEvent<Activity>>> = [];\n    private _activityTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityType>>> = [];\n    private _activityWindowChangeCallbacks: Array<EventHandlerCallback<EntityEvent<ActivityWindow>>> = [];\n    private _windowTypeStatusChangeCallbacks: Array<EventHandlerCallback<EntityEvent<WindowType>>> = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(config: ActivityConfig) {\n        this._config = config;\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._contexts = config.contexts;\n        this._windows = config.windows;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /*, reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /*, reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = this._connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n            const glue42gd = (window as any).glue42gd;\n            // G4E-1343\n            if (glue42gd && typeof glue42gd.addRefreshHandler === \"function\") {\n                glue42gd.addRefreshHandler((success: any, error: any) => {\n                    this._gw3Session\n                        .send(\n                            {\n                                type: \"reload\"\n                            })\n                        .then(\n                            (msg: any) => {\n                                if (!msg.token) {\n                                    error(\"Expected gateway token for refreshing.\");\n                                    return;\n                                }\n                                try {\n                                    glue42gd.setGWToken(msg.token as string);\n                                } catch (e) {\n                                    error(e.message || e);\n                                    return;\n                                }\n                                success();\n                            },\n                            error);\n                });\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /*(msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (this._windows && typeof this._windows.my() !== \"undefined\") {\n                        this._windows.my().close();\n                        return;\n                    }\n                    if (typeof window !== \"undefined\" && typeof (window as any).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" && typeof (process as any).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id,\n            null).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        const joinPeer = (id: string) => {\n            if (!activityId) {\n                return;\n            }\n            return this.joinActivity(activityId, id, windowDefinition.name)\n                .then(() => {\n                    return id;\n                });\n        };\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id,\n            joinPeer)\n            .then(joinPeer);\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyPeer,\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n        let sub1;\n        let sub2;\n\n        sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: Array<EventHandlerCallback<EntityEvent<TEntity>>>) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType,\n        listenForRecreates: (result: TPromiseType) => void): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            if (!listenForRecreates) {\n                this.dropSubscription(createdSubscription);\n            }\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n\n        let recreated = false;\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    if (recreated) {\n                        if (listenForRecreates) {\n                            listenForRecreates(createdMessageToPromiseResolution(msg1));\n                        }\n                    } else {\n                        recreated = true;\n                        resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                    }\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: Array<EventHandlerCallback<EntityEvent<TEvent>>>,\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myDetached: Array<(state: AttachedActivityDescriptor) => void> = [];\n  public _myAttachedTo: Array<(activity: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myDetachedFrom: Array<(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void> = [];\n  public _myActivityFrameColorChanged: Array<(frameColor: string) => void> = [];\n  public _myActivityJoinedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myActivityRemovedCallbacks: Array<(activity: Activity, event: any) => void> = [];\n  public _myContextUpdateCallbacks: Array<(context: object, delta: object, removed: string[], activity: Activity) => void> = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: Array<string | WindowDefinition>, timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)  {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: Array<(activity: Activity, event: any) => void>) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach( (element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","import {Logger} from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: Array<(err: any) => void>;\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: Array<(item: T, action: EntityEventContext) => void> = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   *  Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\ndeclare const htmlContainer: any;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: Array<(newAct: any, descriptor: any) => void> = [];\n  private _detachedCallbacks: Array<(newAct: any, oldAct: Activity, descriptor: any) => void> = [];\n  private _frameColorChangesCallbacks: Array<(act: Activity, frameColor: string) => void> = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // tslint:disable-next-line\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        // G4E-3178 When creating a window in activity, the loading animation doesn't hide - extra property URL\n        const invalidKeys: string[] = [\"url\"];\n\n        const filteredWindowTypeOrConfiguration: any = {};\n\n        Object.keys(windowTypeOrConfiguration).forEach((key) => {\n          if (invalidKeys.indexOf(key) === -1) {\n            filteredWindowTypeOrConfiguration[key] = windowTypeOrConfiguration[key];\n          }\n        });\n        windowDefinition = filteredWindowTypeOrConfiguration as WindowDefinition;\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow as string });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: Array<string | WindowDefinition>, timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be an array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const windowDefinitions: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        // a hint that this comes from createStackedWindows\n        windowDefinition.stackedWindow = true;\n        windowDefinition.timeout = timeout;\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n            }\n          }\n        }\n        windowDefinitions.push(windowDefinition);\n      });\n\n      const tasks: Array<Promise<ActivityWindow>> = [];\n      windowDefinitions.forEach((wd) => tasks.push(this.createWindow(activity, wd)));\n\n      Promise.all(tasks).then(resolve).catch(reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/*(params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      this._activities.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const OnGDShutdownMethodName = \"T42.ACS.OnGDShutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedbackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map","export function objectValues(source: {[key: string]: any}): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: {[key: string]: any}): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { ContextParam, InstanceProps, AppProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone } from \"./helper\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || true; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: ContextParam, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        const name = this._name;\n        const startTimeout: number = 10000;\n        return new Promise<Glue42.AppManager.Instance>((resolve, reject) => {\n            options = options || {};\n            context = context || {};\n            const waitForAGMInstance = options.waitForAGMReady ?? true;\n\n            const waitForApplicationInstance = (id: string) => {\n                // fetch from the current list in app-manager\n                const check = (): Glue42.AppManager.Instance => {\n                    const filtered = this._appManager.instances().filter((i: Glue42.AppManager.Instance) => i.id === id);\n                    let result: Glue42.AppManager.Instance;\n                    // GD2 check - in case of activities we have 2 instances with the same id\n                    if (filtered.length === 2) {\n                        result = filtered[0].isActivityInstance ? filtered[0] : filtered[1];\n                    } else {\n                        result = filtered[0];\n                    }\n                    if (result && waitForAGMInstance) {\n                        if (result.agm) {\n                            return result;\n                        } else {\n                            // if no agm, return undefined so we keep waiting\n                            return undefined;\n                        }\n                    }\n\n                    return result;\n                };\n\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(\"timeout\");\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    // schedule - we need this because there might be more than one\n                    // instance with the same id (activity case) - so this handler\n                    // will kick for the very first\n                    setTimeout(() => {\n                        resolve(check());\n                    }, 1);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n\n                // try to find it in the current list\n                const instances: Glue42.AppManager.Instance = check();\n                if (instances) {\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(instances);\n                }\n            };\n\n            this._agm.invoke(AgmNames.StartApplicationMethodName,\n                {\n                    Name: name,\n                    Context: context,\n                    Options: options\n                },\n                \"best\",\n                {\n                    methodResponseTimeoutMs: startTimeout\n                },\n                (result) => {\n                    const acsResult: InstanceProps = result.returned && result.returned.Instance_0\n                        ? result.returned.Instance_0\n                        : result.returned;\n\n                    if (acsResult && acsResult.Id) {\n                        if (this._appManager.mode === \"startOnly\") {\n                            // we're in startOnly mode, no stream, so we will simulate the instance\n                            // based on the data received from GD\n                            const instance = this._appManager.handleInstanceStarted(acsResult);\n                            resolve(instance);\n                        } else {\n                            // we received instance from ACS, let's wait until it appears on the stream\n                            waitForApplicationInstance(acsResult.Id);\n                        }\n                    } else {\n                        // we haven't received instance from ACS - this might happen if the app does not\n                        // support tracking instances (e.g. we start internet explorer with some url)\n                        resolve(undefined);\n                    }\n                },\n                (err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): void {\n        this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { ContextParam, InstanceProps, WindowContext, AgmInstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n\n    public onAgmReady = this._addToRegistry(\"agmReady\");\n\n    public onStopped = this._addToRegistry(\"stopped\");\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _isActivityOwner: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(\n        private _id: string,\n        private _appName: string,\n        private _appManager: AppManagerImpl,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        startFailed?: boolean\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get isActivityOwner(): boolean { return this._isActivityOwner; }\n\n    // this property returns a list of activity window instances (not activity instances)\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances().filter((i) =>\n            i.application.type !== \"activity\" && // GD2 backward compatibility -  do not show activity instances into the activity window instances list\n            i.activityId && // glue js 2 and 3 bug and breaking change - they will show non activity window instances as activity in case of activityId === undefined\n            i.activityId === this._activityId);\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        if (!this._activityId) {\n            return undefined;\n        }\n        return this.activityInstances.filter((inst) => (inst as InstanceImpl)?.isActivityOwner)[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this._activities && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    // uses this.window and waits for the window to appear if needed\n    // we can not remove this.window for legacy reasons\n    public getWindow(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            // try to get it the normal way\n            const result = this.window;\n            if (result) {\n                resolve(result);\n                return;\n            }\n\n            // if we can not find it directly wait for it to appear\n            const done = (error?: Error, window?: Glue42.Windows.GDWindow) => {\n                if (error) {\n                    reject(error);\n                }\n\n                if (window) {\n                    resolve(window);\n                }\n\n                setTimeout(() => {\n                    clearTimeout(timeout);\n                    unsub();\n                }, 0);\n            };\n\n            // if not found for 30 sec reject\n            const timeout = setTimeout(() => {\n                done(new Error(`can not find a window with id ${this._id}`));\n            }, 30000);\n\n            const unsub = this._windows.onWindowAdded((w) => {\n                if (w.id === this._id) {\n                    done(undefined, w);\n\n                }\n            });\n        });\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        this._isActivityOwner = props.IsActivityOwner;\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        if (props.GD3) {\n            const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers as Glue42Core.AGM.Instance[];\n            if (agmInstances) {\n                this._agmInstance = agmInstances[0];\n            }\n        } else {\n            const gdAgmServers: { [key: string]: AgmInstanceProps } = props.AgmServers as { [key: string]: AgmInstanceProps };\n            const propsAgmServer = Object.keys(gdAgmServers)[0];\n            if (!propsAgmServer) {\n                return;\n            }\n            const propsAgm = gdAgmServers[propsAgmServer];\n            this._agmInstance = {\n                machine: propsAgm.machineName,\n                user: propsAgm.userName,\n                environment: propsAgm.environment,\n                application: propsAgm.applicationName,\n            };\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === this._id) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id,\n                            Context: undefined,\n                            Title: undefined,\n                            ActivityId: undefined,\n                            IsActivityOwner: undefined,\n                            AgmServers: undefined\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    public getContext(): Promise<object> {\n        return Promise.resolve(this.context);\n    }\n\n    private _addToRegistry(key: string) {\n        return (callback: (instance: Glue42.AppManager.Instance) => any) => {\n            this._registry.add(key, callback);\n        };\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number\n    ) {\n        //\n    }\n\n    public application = (name: string) => {\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances;\n    }\n\n    public getMyInstance = () => {\n        if (this._gdMajorVersion >= 3) {\n            // GD3 check\n            const instanceId = window.glue42gd.appInstanceId;\n            return this._instances.filter((i) => i.id === instanceId)[0];\n        }\n\n        return undefined;\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: InstanceProps) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStarted\", callback, this._instances);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAdded\", callback, Object.values(this._apps));\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: InstanceProps) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: InstanceProps) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${props}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { OnGDShutdownMethodName } from \"./const/agm-names\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private _isMethodRegistered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public onShuttingDown = (callback: (arg: { restarting: boolean }) => Promise<void>) => {\n        this.registerMethod();\n        return this._registry.add(\"onShuttingDown\", callback);\n    }\n\n    public restart = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private registerMethod() {\n        if (!this._isMethodRegistered) {\n            this._agm.register(OnGDShutdownMethodName, async (args) => {\n                try {\n                    await Promise.all(this._registry.execute(\"onShuttingDown\", args));\n                } catch (error) {\n                    //\n                }\n            });\n            this._isMethodRegistered = true;\n        }\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\n\nexport const InMemoryStoreCommandMethodName = \"T42.ACS.InMemoryStoreCommand\";\n\nexport type InMemoryStoreCommandArgs = InMemoryImportCommand | InMemoryExportCommand | InMemoryRemoveCommand | InMemoryClearCommand;\n\nexport interface GenericInMemoryCommand<C, A> {\n    command: C;\n    args?: A;\n}\n\ntype InMemoryImportCommand = GenericInMemoryCommand<\"import\", InMemoryImportArgs>;\ninterface InMemoryImportArgs {\n    apps: Glue42.AppManager.Definition[];\n    mode?: \"merge\" | \"replace\";\n}\n\ntype InMemoryRemoveCommand = GenericInMemoryCommand<\"remove\", { apps: string[] }>;\nexport interface InMemoryRemoveArgs {\n    apps: string[];\n}\n\ntype InMemoryExportCommand = GenericInMemoryCommand<\"export\", undefined>;\ntype InMemoryClearCommand = GenericInMemoryCommand<\"clear\", undefined>;\n\nexport interface InMemoryExportResult {\n    apps: Glue42.AppManager.Definition[];\n}\n\nexport class InMemoryStore implements Glue42.AppManager.InMemoryStore {\n\n    constructor(private interop: Glue42Core.Interop.API) {\n    }\n\n    public import(apps: Glue42.AppManager.Definition[], mode?: \"replace\" | \"merge\"): Promise<Glue42.AppManager.ImportResult> {\n        if (!apps || !Array.isArray(apps)) {\n            return Promise.reject(\"invalid apps argument - should be an array of application definitions\");\n        }\n        if (mode && mode !== \"replace\" && mode !== \"merge\") {\n            return Promise.reject(\"invalid mode argument - should be 'replace' or 'merge'\");\n        }\n\n        mode = mode ?? \"replace\";\n        const command: InMemoryImportCommand = {\n            command: \"import\",\n            args: {\n                apps,\n                mode\n            }\n        };\n        return this.interop.invoke<Glue42.AppManager.ImportResult>(InMemoryStoreCommandMethodName, command)\n            .then((r) => r.returned);\n    }\n\n    public export(): Promise<Glue42.AppManager.Definition[]> {\n        return this.interop.invoke<InMemoryExportResult>(InMemoryStoreCommandMethodName, { command: \"export\" })\n            .then((r) => r.returned.apps);\n    }\n\n    public remove(app: string): Promise<void> {\n        if (!app || typeof app !== \"string\") {\n            return Promise.reject(\"invalid app name, should be a string value\");\n        }\n        const command: InMemoryRemoveCommand = {\n            command: \"remove\",\n            args: {\n                apps: [app]\n            }\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public clear(): Promise<void> {\n        const command: InMemoryClearCommand = {\n            command: \"clear\"\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public createAppDef(name: string, url: string): Glue42.AppManager.Definition {\n        if (!url) {\n            url = \"https://google.com\";\n        }\n        return {\n            name,\n            type: \"window\",\n            title: name,\n            details: {\n                url\n            }\n        };\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\nimport { InMemoryStore } from \"./in-memory\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<undefined | {}>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise,\n\n        applications: appManager.applications,\n        application: appManager.application,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart,\n\n        onShuttingDown: entitlements.onShuttingDown,\n\n        inMemory: new InMemoryStore(agm)\n    };\n\n    return api;\n};\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n        agm.invoke(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                if (!data) {\n                    resolve();\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve();\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve();\n            })\n            .catch((err) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n\n    let subscription: Glue42Core.AGM.Subscription;\n    const start = () => {\n        let resolveFunc: (value?: {} | Promise<{}>) => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n\n                    objectValues(events[EventNames.OnApplicationAddedEvent])\n                        .map((item: AppProps) => applications.handleAppAdded(item));\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .map((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .map((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .map((item: AppProps) => applications.handleAppReady(item));\n\n                    objectValues(events[EventNames.OnApplicationStartedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStarted(item));\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .map((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .map((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .map((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    resolveFunc();\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: any) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, display?: Glue42.Screen) {\n        const left = Math.floor(Math.max(display.left, (display.left + (display.workingAreaWidth - a.width) / 2)));\n        const top = Math.floor(Math.max(display.top, (display.top + (display.workingAreaHeight - a.height) / 2)));\n        return {\n            top,\n            left\n        };\n    }\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n    DetachTabOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\nimport { CompositionChangedData } from \"./environment/gd/types\";\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n\n    let resultWindow: Glue42.Windows.GDWindow;\n\n    const _id = id;\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context ?? {};\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours ?? {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected ?? false;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // is Window sticky enable\n    let _isSticky: boolean = options.isSticky;\n\n    // Window state Collapsed | Expanded\n    let _isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n    let _tabIndex: number = options.tabIndex;\n\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    let _placementSettings: Glue42.Windows.PlacementSettings = options.placementSettings;\n\n    //#region \"AGM methods\"\n\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!id) {\n                throw new Error(\"The window is already closed.\");\n            }\n            return executor.close(resultWindow);\n        }, success, error);\n    }\n\n    function navigate(newUrl: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(newUrl)) {\n                throw new Error(\"The new URL must be a non-empty string.\");\n            }\n            return executor.navigate(resultWindow, newUrl);\n        }, success, error);\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n                throw new Error(\"Invalid style arguments: \" + JSON.stringify(style));\n            }\n            if (style && style.focus !== undefined) {\n                if (typeof style.focus !== \"boolean\") {\n                    throw new Error(\"Focus must be a boolean value. Currently, only `focus: true` is supported.\");\n                } else if (style.focus === false) {\n                    _logger.warn(\"`focus: false` is not supported!\");\n                }\n            }\n            if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n                throw new Error(\"The `hidden` property must hold a boolean value.\");\n            }\n            for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\"]) {\n                const styleAsAny = style as any;\n                const value = styleAsAny[prop];\n                if (prop in style) {\n                    if (util.isUndefinedOrNull(value)) {\n                        delete styleAsAny[prop];\n                        continue;\n                    }\n                    if (!util.isNumber(styleAsAny[prop])) {\n                        throw new Error(`\"${prop}\" must be a number`);\n                    }\n                }\n            }\n            return executor.setStyle(resultWindow, style);\n        }, success, error);\n    }\n    // REVIEW\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function setOnTop(onTop: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof onTop !== \"boolean\") {\n                throw new Error(\"`onTop` must hold a boolean value.\");\n            }\n            return executor.setOnTop(resultWindow, onTop);\n        }, success, error);\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n                throw new Error(\"The properties of `constraints` cannot be null or undefined.\");\n            }\n            return executor.setSizeConstraints(resultWindow, constraints);\n        }, success, error);\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(newTitle)) {\n                throw new Error(\"`newTitle` must not be null or undefined.\");\n            }\n            if (newTitle === _title) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.setTitle(resultWindow, newTitle);\n        }, success, error);\n    }\n\n    function setSticky(isSticky: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof isSticky !== \"boolean\") {\n                throw new Error(\"`isSticky` must hold a boolean value.\");\n            }\n            return executor.setSticky(resultWindow, isSticky);\n        }, success, error);\n    }\n\n    function moveResize(bounds: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(bounds)) {\n                throw new Error(\"The properties of `bounds` cannot be null or undefined.\");\n            }\n            return executor.moveResize(resultWindow, bounds);\n        }, success, error);\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof buttonInfo === \"undefined\" || Object.keys(buttonInfo).length === 0) {\n                throw new Error(\"Button info is not available.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.imageBase64)) {\n                throw new Error(\"`imageBase64` must not be null or undefined.\");\n            }\n            return executor.addFrameButton(resultWindow, buttonInfo);\n        }, success, error);\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            return executor.removeFrameButton(resultWindow, buttonId);\n        }, success, error);\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.activate(resultWindow);\n        }, success, error);\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.focus(resultWindow);\n        }, success, error);\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.maximizeRestore(resultWindow);\n        }, success, error);\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"maximized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.maximize(resultWindow);\n        }, success, error);\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"normal\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.restore(resultWindow);\n        }, success, error);\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"minimized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.minimize(resultWindow);\n        }, success, error);\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.collapse(resultWindow);\n        }, success, error);\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.expand(resultWindow);\n        }, success, error);\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.toggleCollapse(resultWindow);\n        }, success, error);\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(target)) {\n                throw new Error(`A target window is not specified - ${target}`);\n            }\n\n            if (typeof target === \"string\") {\n                const win = windowStore.get(target);\n                if (!win) {\n                    throw new Error(`Invalid \"target\" parameter or no such window. Invoked with: ${target}`);\n                }\n                target = win.API;\n            }\n            return executor.snap(resultWindow, target, direction);\n        }, success, error);\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, opt: number | Glue42.Windows.AttachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const errorMessage = `Invalid \"tab\" parameter - must be an object with an \"id\" property or a string. Invoked for source window with ID:`;\n            if (util.isUndefinedOrNull(tab)) {\n                throw new Error(errorMessage + tab);\n            }\n            // tab === sourceWindow\n            let sourceWindow;\n            if (typeof tab === \"string\") {\n                sourceWindow = windowStore.get(tab)?.API;\n                if (util.isUndefinedOrNull(sourceWindow)) {\n                    throw new Error(errorMessage + sourceWindow);\n                }\n            } else if (!util.isUndefinedOrNull(tab.id)) {\n                sourceWindow = tab;\n            } else {\n                throw new Error(errorMessage);\n            }\n            const attachOptions: Glue42.Windows.AttachOptions = {};\n            if (!util.isUndefinedOrNull(opt)) {\n                if (typeof opt === \"number\") {\n                    attachOptions.index = opt;\n                } else {\n                    attachOptions.selected = opt.selected;\n                    attachOptions.index = opt.index;\n                }\n            }\n\n            return executor.attachTab(resultWindow, sourceWindow, attachOptions);\n        }, success, error);\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions = {}, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const argsForSend: DetachTabOptions = {};\n            function isDetachRelative(o: Glue42.Windows.DetachOptions) {\n                return o.relativeTo !== undefined;\n            }\n            if (isDetachRelative(opt)) {\n                if (typeof opt.relativeTo === \"string\") {\n                    argsForSend.relativeTo = opt.relativeTo;\n                } else if (!util.isUndefinedOrNull(opt.relativeTo.id)) {\n                    argsForSend.relativeTo = opt.relativeTo.id;\n                }\n                if (!util.isUndefinedOrNull(opt.relativeDirection)) {\n                    argsForSend.relativeDirection = opt.relativeDirection;\n                }\n                if (!util.isUndefinedOrNull(opt.width)) {\n                    argsForSend.width = opt.width;\n                }\n                if (!util.isUndefinedOrNull(opt.height)) {\n                    argsForSend.height = opt.height;\n                }\n            } else {\n                if (!util.isUndefinedOrNull(opt.bounds)) {\n                    argsForSend.bounds = opt.bounds;\n                }\n            }\n            if (!util.isUndefinedOrNull(opt.hideTabHeader)) {\n                argsForSend.hideTabHeader = opt.hideTabHeader;\n            }\n            return executor.detachTab(resultWindow, argsForSend);\n        }, success, error);\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.setVisible(resultWindow, toBeVisible);\n        }, success, error);\n    }\n\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return executor.showLoader(resultWindow, loader);\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return executor.hideLoader(resultWindow);\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined.`);\n            }\n\n            return executor.updateContext(resultWindow, context);\n        }, success, error);\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.lock(resultWindow);\n        }, success, error);\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.unlock(resultWindow);\n        }, success, error);\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: (error: string) => void): Promise<string> {\n        return utils.callbackifyPromise(() => {\n            return executor.getIcon(resultWindow);\n        }, success, error);\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(base64Image)) {\n                throw new Error(`\"base64Imag\" must be a non-empty string.`);\n            }\n            return executor.setIcon(resultWindow, base64Image);\n        }, success, error);\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(frameColor)) {\n                throw new Error(`\"frameColor\" must be a non-empty string`);\n            }\n            return executor.setFrameColor(resultWindow, frameColor);\n        }, success, error);\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof toBeTabHeaderVisible !== \"boolean\") {\n                throw new Error(`\"toBeTabHeaderVisible\" must hold a boolean value.`);\n            }\n            return executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible);\n        }, success, error);\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (util.isNullOrWhiteSpace(tooltip)) {\n            throw new Error(`\"${tooltip}\" must not be null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean, mode?: Glue42.Windows.FlashMode): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true,\n            mode: \"auto\"\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        if (typeof mode !== \"undefined\") {\n            flashOptions.mode = mode;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    function print(printOptions: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.print(resultWindow, printOptions);\n    }\n\n    function printToPDF(printToPDFOptions: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        return executor.printToPDF(resultWindow, printToPDFOptions);\n    }\n\n    function ungroup(ungroupOptions?: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const unGroupChanged = onGroupChanged(\n                (win: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => {\n                    if (id === win.id) {\n                        unGroupChanged();\n                        resolve(resultWindow);\n                    }\n                });\n\n            executor.ungroup(resultWindow, ungroupOptions)\n                .catch((e: string) => {\n                    unGroupChanged();\n                    reject(e);\n                });\n        });\n    }\n\n    function place(placementSettings: Glue42.Windows.PlacementSettings): Promise<void> {\n        return executor.place(resultWindow, placementSettings);\n    }\n\n    function refresh(ignoreCache: boolean) {\n        return executor.refresh(resultWindow, ignoreCache);\n    }\n\n    function configure(settings: Glue42.Windows.WindowConfiguration) {\n        return executor.configureWindow(resultWindow, settings);\n    }\n\n    //#endregion \"AGM methods\"\n\n    //#region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onTitleChanged\", callback, [resultWindow.title, resultWindow]);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (id === undefined) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (!_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            return onEventCore(\"maximized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"maximized\", callback);\n        }\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            return onEventCore(\"minimized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"minimized\", callback);\n        }\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            return onEventCore(\"normal\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"normal\", callback);\n        }\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"focus-changed\", callback);\n    }\n\n    function onStickyChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"sticky-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return onEventCore(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: () => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void) => {\n            const promise = callback();\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, id);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise && promise.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, id);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"zoom-factor-changed\", callback);\n    }\n\n    function onPlacementSettingsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"placementSettingsChanged\", callback);\n    }\n\n    function onNeighboursChanged(callback: (neighbours: Glue42.Windows.Neighbours, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"neighbours-changed\", callback);\n    }\n\n    function onEventCore(key: string, callback: any, replayArguments?: any[]) {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        return _registry.add(key, callback, replayArguments);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"Stream function\"\n\n    function handleUpdate(updated: WindowConstructorOptions) {\n        _url = updated.url;\n        _title = updated.title;\n        _context = updated.context || {};\n        _bounds = updated.bounds;\n        _frameColor = updated.frameColor;\n        _focus = updated.focus;\n        _neighbours = updated.neighbours || {};\n        _groupId = updated.groupId;\n        _isGroupHeaderVisible = updated.isGroupHeaderVisible;\n        _isTabHeaderVisible = updated.isTabHeaderVisible;\n        _isTabSelected = updated.isTabSelected;\n        _settings = updated.settings;\n        _isVisible = updated.isVisible;\n        _isSticky = updated.isSticky;\n        _isCollapsed = updated.isCollapsed;\n        _windowState = updated.state;\n        _tabGroupId = updated.tabGroupId;\n        _isLocked = updated.isLocked;\n        // _frameButtons = updated.fra;\n        // _group: Glue42.Windows.Group;\n        _zoomFactor = updated.zoomFactor;\n        _placementSettings = updated.placementSettings;\n    }\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        executor.finished\n            .finally(() => {\n                _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n            });\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (id === undefined) {\n            return;\n        }\n        _registry.execute(\"onClose\", resultWindow);\n        id = undefined;\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj: Glue42.Windows.ButtonInfo = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    async function handleWindowChangeState(state: string): Promise<void> {\n        if (state === \"collapsed\") {\n            _isCollapsed = true;\n        } else if (state === \"expanded\") {\n            _isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n        await executor.finished;\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds = bounds;\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleIsStickyChanged(isSticky: boolean): void {\n        _isSticky = isSticky;\n        _registry.execute(\"sticky-changed\", isSticky, resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        _neighbours = state.neighbors || {};\n        _tabIndex = state.index;\n        _registry.execute(\"neighbours-changed\", _neighbours, resultWindow);\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    async function handleFrameSelectionChanged(newWindow: string, prevWindow: string) {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n        await executor.finished;\n        _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n    }\n\n    async function handleAttached(newTabGroupId: string, tabHeaderVisible: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowAttached(resultWindow);\n        });\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    async function handleDetached(winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = undefined;\n        _isTabSelected = false;\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowDetached(resultWindow);\n        });\n        _registry.execute(\"detached\", resultWindow);\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    function handlePlacementSettingsChanged(placementSettings: Glue42.Windows.PlacementSettings): void {\n        let promise: Promise<Glue42.Displays.Display>;\n        const copy = placementSettings as any;\n        if (!copy.display) {\n            promise = Promise.resolve(undefined);\n        } else {\n            const displayAPI = displayAPIGetter();\n            if (!displayAPI) {\n                // display API is disabled\n                promise = Promise.resolve(undefined);\n            } else {\n                const index = copy.display - 1;\n                promise = new Promise((resolve, reject) => {\n                    displayAPI.all().then((displays) => {\n                        const display = displays.find((d) => d.index === index);\n                        resolve(display);\n                    }).catch(reject);\n                });\n            }\n        }\n\n        promise.then((d) => {\n            copy.display = d;\n            _placementSettings = copy;\n            _registry.execute(\"placementSettingsChanged\", resultWindow);\n        });\n    }\n    //#endregion \"Stream function\"\n\n    //#region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        _group = newGroup;\n        _groupId = newGroup?.id;\n\n        if (!util.isUndefinedOrNull(newGroup) && !util.isUndefinedOrNull(oldGroup)) {\n            _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n        }\n    }\n\n    //#region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        const tabs = Object.keys(allWindows).reduce<GDWindow[]>((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        return tabs.sort((w1, w2) => {\n            if (w1.tabIndex !== w2.tabIndex) {\n                if (w1.tabIndex === -1) {\n                    return Number.MAX_SAFE_INTEGER;\n                }\n                if (w2.tabIndex === -1) {\n                    return Number.MIN_SAFE_INTEGER;\n                }\n            }\n            return w1.tabIndex - w2.tabIndex;\n        });\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application;\n        }\n        const info = getWindowInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        return info.applicationName;\n    }\n\n    function getWindowInfo() {\n        if (typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"API\"\n\n    resultWindow = {\n        get id() {\n            return _id;\n        },\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            return appManager ? appManager.application(getApplicationName()) : undefined;\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return agm.servers().find((s) => s.windowId === this.id);\n            }\n            const appName = getApplicationName();\n            return appName ? { application: appName } : undefined;\n        },\n        get url() {\n            return _url;\n        },\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get tabIndex() {\n            return _mode.toLowerCase() === \"tab\" ? _tabIndex : undefined;\n        },\n        get frameButtons() {\n            return _frameButtons;\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return _isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n        get groupId() {\n            return _groupId;\n        },\n        get isSticky() {\n            return _isSticky;\n        },\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n        get activityWindowId() {\n            if (_context._t42) {\n                return _context._t42.activityWindowId;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n            }\n            return undefined;\n        },\n        get placementSettings(): Glue42.Windows.PlacementSettings {\n            return Object.assign({}, _placementSettings);\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        setSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center: (screen) => moveResize(utils.getDisplayCenterOfScreen(resultWindow.bounds, screen || resultWindow.screen)),\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n        setSticky,\n        print,\n        printToPDF,\n        place,\n        ungroup,\n        refresh,\n        configure,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onStickyChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n        onPlacementSettingsChanged,\n        onNeighboursChanged,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            return updateContext(context);\n        },\n\n        getDisplay(): Promise<Glue42.Displays.Display> {\n            const displayAPI = displayAPIGetter();\n            return displayAPI.getByWindowId(id);\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id;\n                });\n        }\n    };\n\n    //#endregion \"API\"\n\n    //#endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleUpdate,\n\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged,\n        handleIsStickyChanged,\n        handlePlacementSettingsChanged,\n    };\n\n    return {\n        API: resultWindow,\n        Events: events\n    };\n};\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { DetachTabOptions, Executor, FlashOptions } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions, EventTypes } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory, UnsubscribeFunction } from \"callback-registry\";\nimport shortid from \"shortid\";\nimport windowStore from \"../../store\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../../../activity/helpers/util\";\n\nexport class GDExecutor implements Executor {\n    private agm: Glue42Core.AGM.API;\n    private agmTarget: {};\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _finished: Promise<void> = Promise.resolve();\n\n    public get hostInstance() {\n        return this.agmTarget;\n    }\n\n    public get finished() {\n        return this._finished;\n    }\n\n    public init(agm: Glue42Core.AGM.API, instance: Glue42Core.AGM.Instance | string) {\n        this.agm = agm;\n        this.agmTarget = instance;\n    }\n    // refactor\n    public handleEvent(data: any) {\n        this._registry.execute(\"event\", data);\n    }\n\n    public async open(options: Glue42.Windows.WindowCreateOptions) {\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            const result = await this.agm.invoke<{ id: string }>(\"T42.Wnd.Create\", options, this.agmTarget);\n            if (result.returned === undefined) {\n                throw new Error(\"failed to execute T42.Wnd.Create - unknown reason\");\n            }\n\n            const id = result.returned.id;\n            const win = await windowStore.waitFor(id);\n            setTimeout(() => {\n                if (win.API.windowType === \"electron\") {\n                    // on normal windows urlCHanged has to be detected first in order for the window to be ready\n                    // that causes the user callbacks to miss urlChanged since they are not registered yet\n                    // here we 'replay' the urlChanged event\n                    win.Events.handleUrlChanged(win.API.url);\n                }\n            }, 0);\n            return win.API;\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async close(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"close\", { windowId: w.id }, `Closed`);\n        return w;\n    }\n\n    public async navigate(w: Glue42.Windows.GDWindow, newUrl: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"navigate\", { windowId: w.id, options: { url: newUrl } }, \"UrlChanged\");\n        return w;\n    }\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(w: Glue42.Windows.GDWindow, style: Glue42.Windows.WindowSettings): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Array<Promise<any>> = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (!isUndefinedOrNull(style.focus) && !w.isFocused) {\n            wait(w.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (!isUndefinedOrNull(style.hidden)) {\n            const toBeVisible = !style.hidden;\n            wait(w.setVisible(toBeVisible));\n        }\n\n        if (!isUndefinedOrNull(style.onTop)) {\n            wait(w.setOnTop(style.onTop));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTooltip) || !isNullOrWhiteSpace((style as any).tabToolTip)) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(w.setTabTooltip(toolTip));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTitle)) {\n            wait(this.execute(\"setTabTitle\", { windowId: w.id, options: { tabTitle: style.tabTitle } }));\n        }\n\n        const {\n            maxWidth, maxHeight, minWidth, minHeight,\n            allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize\n        } = style;\n\n        wait(w.setSizeConstraints({ maxWidth, maxHeight, minWidth, minHeight }));\n        wait(w.resetButtons({ allowClose, allowCollapse, allowLockUnlock, allowMaximize, allowMinimize }));\n\n        await Promise.all(stylePromises);\n\n        return w;\n    }\n\n    public async setSizeConstraints(w: Glue42.Windows.GDWindow, constraints: Glue42.Windows.SizeConstraints): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setSizeConstraints\", { windowId: w.id, options: constraints });\n        return w;\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabTooltip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabTooltip } });\n        return w;\n    }\n\n    public async resetButtons(w: Glue42.Windows.GDWindow, buttonsConfig: Glue42.Windows.WindowButtons): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"resetButtons\", { windowId: w.id, options: buttonsConfig });\n        return w;\n    }\n\n    public async setOnTop(w: Glue42.Windows.GDWindow, onTop: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setOnTop\", { windowId: w.id, options: { onTop } });\n        return w;\n    }\n\n    public async setTitle(w: Glue42.Windows.GDWindow, newTitle: string): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                title: newTitle\n            }\n        };\n        await this.execute(\"setTitle\", options, \"TitleChanged\");\n        return w;\n    }\n\n    public async setSticky(w: Glue42.Windows.GDWindow, isSticky: boolean): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                isSticky\n            }\n        };\n        await this.execute(\"setSticky\", options);\n        return w;\n    }\n\n    public async moveResize(w: Glue42.Windows.GDWindow, bounds: Partial<Glue42.Windows.Bounds>): Promise<Glue42.Windows.GDWindow> {\n        if ((window.glueDesktop as any).versionNum < 31200) {\n            return new Promise(async (res, rej) => {\n                const resolveImmediately = this.areBoundsEqual(bounds, w);\n                let isDone = false;\n                const done = () => {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n\n                    if (unsubscribeBoundsChanged) {\n                        unsubscribeBoundsChanged();\n                        unsubscribeBoundsChanged = undefined;\n                    }\n                    res(w);\n                    if (resolveTimeout) {\n                        clearTimeout(resolveTimeout);\n                        resolveTimeout = undefined;\n                    }\n                };\n                let resolveTimeout: any;\n                let unsubscribeBoundsChanged: () => void;\n                if (!resolveImmediately) {\n                    unsubscribeBoundsChanged = w.onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                        if (!this.areBoundsEqual(bounds, win)) {\n                            return;\n                        }\n                        done();\n                    });\n                }\n\n                try {\n                    // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n                    await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n                } catch (error) {\n                    rej(error);\n                    return;\n                }\n\n                // if we're trying to resize with the bounds we already have\n                if (resolveImmediately) {\n                    done();\n                    return;\n                }\n\n                // if no bounds change in the next 1s resolve\n                resolveTimeout = setTimeout(() => {\n                    done();\n                }, 1000);\n            });\n        } else {\n            await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n        }\n        return w;\n    }\n\n    public async addFrameButton(w: Glue42.Windows.GDWindow, buttonInfo: Glue42.Windows.ButtonInfo): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"addButton\", { windowId: w.id, options: buttonInfo }, \"ButtonAdded\");\n        return w;\n    }\n\n    public async removeFrameButton(w: Glue42.Windows.GDWindow, buttonId: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"removeButton\", { windowId: w.id, options: buttonId }, \"ButtonRemoved\");\n        return w;\n    }\n\n    public async activate(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"activate\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async focus(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"focus\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async maximizeRestore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximizeRestore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async maximize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async restore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"restore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async minimize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"minimize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async collapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"collapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async expand(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"expand\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async toggleCollapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"toggleCollapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async snap(w: Glue42.Windows.GDWindow, targetWindow: Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection): Promise<Glue42.Windows.GDWindow> {\n        const args: any = {\n            targetWindowId: targetWindow.id\n        };\n\n        if (direction) {\n            args.snappingEdge = direction;\n        }\n        await this.execute(\"snap\", { windowId: w.id, options: args }, \"CompositionChanged\", `CompositionChanged-${targetWindow.id}`);\n        return w;\n    }\n\n    public async attachTab(w: Glue42.Windows.GDWindow, sourceWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.AttachOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"attachTab\", {\n            windowId: w.id,\n            options: {\n                index: options,\n                sourceWindowId: sourceWindow.id,\n                targetWindowId: w.id,\n            }\n        }, `WindowFrameAdded-${sourceWindow.id}`, `WindowFrameRemoved-${sourceWindow.id}`);\n        return w;\n    }\n\n    public async detachTab(w: Glue42.Windows.GDWindow, options: DetachTabOptions): Promise<Glue42.Windows.GDWindow> {\n        const eventKeys: string[] = [\"WindowFrameRemoved\", `WindowFrameAdded`];\n        if (!isUndefinedOrNull(options?.relativeTo)) {\n            eventKeys.push(`CompositionChanged`);\n            eventKeys.push(`CompositionChanged-${options.relativeTo}`);\n        } else {\n            eventKeys.push(\"BoundsChanged\");\n        }\n        await this.execute(\"detachTab\", { windowId: w.id, options }, ...eventKeys);\n        return w;\n    }\n\n    public async setVisible(w: Glue42.Windows.GDWindow, toBeVisible: boolean = true): Promise<Glue42.Windows.GDWindow> {\n        let command: string;\n        if (toBeVisible) {\n            command = \"show\";\n        } else {\n            command = \"hide\";\n        }\n\n        await this.execute(command, { windowId: w.id }, \"VisibilityChanged\");\n        return w;\n    }\n\n    public async showLoader(w: Glue42.Windows.GDWindow, loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showLoadingAnimation\", { windowId: w.id, options: loader });\n        return w;\n    }\n\n    public async hideLoader(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"hideLoadingAnimation\", { windowId: w.id });\n        return w;\n    }\n\n    public async updateContext(w: Glue42.Windows.GDWindow, context: any): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            // as undefined values do not go through interop, setting a prop to undefined will be lead to no change\n            // set this to null so it actually removes the prop\n            const contextWithoutUndefinedValues = this.swapUndefinedToNull(context);\n\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onContextUpdated(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"updateContext\", {\n                windowId: w.id, context: contextWithoutUndefinedValues, replace: Object.keys(w.context).length > 0 ? false : true\n            }), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async lock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: true } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async unlock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: false } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async getIcon(w: Glue42.Windows.GDWindow): Promise<string> {\n        const result = await this.execute(\"getIcon\", {\n            windowId: w.id,\n            options: {}\n        });\n        return result.icon;\n    }\n\n    public async setIcon(w: Glue42.Windows.GDWindow, base64Image: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setIcon\", {\n            windowId: w.id,\n            options: {\n                dataURL: base64Image\n            }\n        });\n        return w;\n    }\n\n    public async setFrameColor(w: Glue42.Windows.GDWindow, frameColor: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setFrameColor\", { windowId: w.id, options: { frameColor } }, \"FrameColorChanged\");\n        return w;\n    }\n\n    public async setTabHeaderVisible(w: Glue42.Windows.GDWindow, toBeTabHeaderVisible: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabHeaderVisible\", {\n            windowId: w.id,\n            options: {\n                toShow: toBeTabHeaderVisible\n            }\n        }, \"TabHeaderVisibilityChanged\");\n        return w;\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async configure(windowId: string, options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        return this.execute(\n            \"configure\",\n            { windowId, options: { ...options } }\n        );\n    }\n\n    public async print(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"print\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n        return resultWindow;\n    }\n\n    public async printToPDF(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        const filePath: string = (await this.execute(\n            \"printToPDF\",\n            { windowId: resultWindow.id, options: { ...options } }\n        )).filePath;\n\n        return filePath;\n    }\n\n    public async place(window: Glue42.Windows.GDWindow, options: Glue42.Windows.PlacementSettings): Promise<void> {\n        const copy = { ...options } as any;\n        if (!options.display || options.display === \"current\") {\n            copy.display = await window.getDisplay();\n        }\n        // Glue42.Displays.API works with zero based array of displays, which means that the first monitor has index 0\n        // whereas GD works with non zero based array of displays, which means that the first monitor has index 1\n        copy.display = copy.display.index + 1;\n        return this.execute(\n            \"place\",\n            { windowId: window.id, options: { ...copy } }\n        );\n    }\n\n    public async refresh(resultWindow: Glue42.Windows.GDWindow, ignoreCache: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"refresh\", { windowId: resultWindow.id, options: { ignoreCache } });\n        return resultWindow;\n    }\n\n    public async configureWindow(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.WindowConfiguration): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"configureWindow\", { windowId: resultWindow.id, options });\n        return resultWindow;\n    }\n\n    /**\n     * Invokes the container\n     * @param command\n     * @param options\n     * @param {...string} eventKeys which events types to be awaited before resolving - used only < GD 3.12\n     * @returns Invocation result\n     */\n    public async execute(command: string, options: any & { windowId: string }, ...eventKeys: string[]): Promise<any> {\n        const params = {\n            ...options,\n            command,\n        };\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            if ((window.glueDesktop as any).versionNum < 31200) {\n                return await this.executeWithoutToken(params, ...eventKeys);\n            } else {\n                return await this.executeWithToken(params);\n            }\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async ungroup(w: Glue42.Windows.GDWindow, options: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        const args = {\n            windowId: w.id,\n            options\n        };\n        await this.execute(\"ungroup\", args);\n        return w;\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addCloseHandler(callback, id);\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, id: string): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            return glue42gd.addRefreshHandler(callback, id);\n        }\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n\n    private executeWithoutToken(params: { windowId: string }, ...eventKeys: string[]) {\n        const uns: UnsubscribeFunction[] = [];\n        const executed = eventKeys?.filter((k) => !isUndefinedOrNull(k)).map((key) => {\n            return new Promise<void>((r) => {\n                const [type, windowId = params.windowId] = key.split(\"-\");\n                uns.push(this._registry.add(\"event\", (data: { windowId: string, type: string }) => {\n                    if (data.type === type && data.windowId === windowId) {\n                        r();\n                    }\n                }));\n            });\n        });\n        const action = new Promise<any>((resolve, reject) => {\n            this.agm.invoke<any>(\"T42.Wnd.Execute\", params, this.agmTarget)\n                .then((i) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((e) => reject(e));\n        });\n        return Promise.all([action, ...executed])\n            .then((r) => {\n                return r[0];\n            })\n            .finally(() => {\n                uns.forEach((un) => un());\n            });\n    }\n\n    private async executeWithToken(options: any) {\n        let un: UnsubscribeFunction;\n        try {\n            const token = shortid.generate();\n            const event = new Promise<void>((r) => {\n                un = this._registry.add(\"event\", (data: any) => {\n                    if (data.token === token) {\n                        r();\n                    }\n                });\n            });\n            const execute = new Promise<any>((resolve, reject) => {\n                options.token = token;\n                this.agm.invoke<any>(\"T42.Wnd.Execute\", options, this.agmTarget)\n                    .then((i) => {\n                        if (i.returned && i.returned.errorMsg) {\n                            reject(i);\n                        } else {\n                            resolve(i.returned);\n                        }\n                    })\n                    .catch((i) => {\n                        reject(i);\n                    });\n            });\n\n            const result = await Promise.all([execute, event]);\n            return result[0];\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    private areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, w: Glue42.Windows.GDWindow) {\n        const current = w.bounds;\n        const settings = w.settings;\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < settings.minHeight) {\n            height = settings.minHeight;\n        }\n        if (requested.height > settings.maxHeight) {\n            height = settings.maxHeight;\n        }\n        if (requested.width < settings.minWidth) {\n            width = settings.minWidth;\n        }\n        if (requested.width > settings.maxWidth) {\n            width = settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    private swapUndefinedToNull(context: any) {\n        try {\n            // swap top level undefined values to null-s\n            const copy: any = {};\n            for (const key of Object.keys(context)) {\n                let value = context[key];\n                if (typeof value === \"undefined\") {\n                    value = null;\n                }\n                copy[key] = value;\n            }\n            return copy;\n        } catch {\n            return context;\n        }\n    }\n}\n\nexport default new GDExecutor();\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string): WindowWrapper[] {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce((memo, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo.push(win);\n        }\n        return memo;\n    }, []);\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    EventWithResponseData,\n    ResponseTypes,\n    IsStickyChanged\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout: number = 10000;\n    private _agmInstance: Glue42Core.AGM.Instance | \"best\" | \"all\";\n    private _windowId: string;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n    private _displayAPIGetter: () => Glue42.Displays.API;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, instance?: Glue42Core.AGM.Instance, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._agmInstance = this.normalizeInstance(instance);\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n        this._displayAPIGetter = displayAPIGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            // if we don't have an Instance, thats means that we are running outside from any Tick42 Containers\n            // so our target is best\n            if (typeof this._agmInstance === \"undefined\") {\n                this._agmInstance = \"best\";\n            }\n\n            this._agm.registerAsync(\"T42.Wnd.OnEventWithResponse\", (args, caller, success, err) => {\n                this.respondToEvent(args as any).then(success).catch(err);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: this._agmInstance,\n                    onData: (streamData: any) => {\n                        this.updateWindow(streamData.data, resolve);\n                        executor.handleEvent(streamData.data);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = this.normalizeInstance(instance);\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((err: any) => {\n                    reject(\"Can not subscribe for stream T42.Wnd.OnEvent. Err: \" + err);\n                });\n            });\n        });\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any): Promise<Glue42.Windows.GDWindow> {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n\n        return this.executor.open(copyOptions);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: {}): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    // TODO revise it\n    private normalizeInstance(instance: Glue42Core.AGM.Instance) {\n        if (!instance) {\n            return undefined;\n        }\n        return {\n            application: instance.application,\n            machine: instance.machine,\n            user: instance.user,\n        };\n    }\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        }\n\n        return Promise.reject(`There isn't a handler for ${args.type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const existingWindow = windowStore.get(w.id);\n                if (existingWindow) {\n                    existingWindow.Events.handleUpdate(this.mapToWindowConstructorOptions(w));\n                } else {\n                    const win = this.createWindow(w.id, w);\n                    windowStore.markReadyToShow(win.API.id);\n                }\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n\n        // global event\n        if (windowInfo.type === \"CommandExecuted\") {\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo as StreamEvent);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo as StreamEvent).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle isSticky changed\n        if (windowInfo.type === \"IsStickyChanged\") {\n            const windowInfoIsStickyChangedChanged = (windowInfo as IsStickyChanged);\n            theWindowEvents.handleIsStickyChanged(windowInfoIsStickyChangedChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            theWindowEvents.handleAttached(windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n            theWindowEvents.handleDetached(winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"PlacementSettingsChanged\") {\n            theWindowEvents.handlePlacementSettingsChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const wrapper = windowStore.get(windowId);\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._displayAPIGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            placementSettings: args.placementSettings,\n            isSticky: args.isSticky,\n            tabIndex: args.tabIndex\n            // settings: windowStyleAttributes,\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            // some events (e.g. Snapshot) do not have windowIds\n            if (!streamEvent.windowId) {\n                return streamEvent;\n            }\n\n            // try to get the window, if not there return the original event\n            const window = windowStore.get(streamEvent.windowId);\n            if (!window) {\n                return streamEvent;\n            }\n\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: window.API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupInternal, GroupWrapper, WindowWrapper } from \"./types\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    //#region \"API functions\"\n\n    async function addWindow(winId: string): Promise<void> {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const win: WindowWrapper = windowStore.get(winId);\n            win.Events.handleGroupChanged(groupObject, undefined);\n            await executor.finished;\n            _registry.execute(\"window-added\", groupObject, win.API);\n        }\n    }\n\n    async function removeWindow(win: WindowWrapper): Promise<void> {\n        const index: number = _windowsId.indexOf(win.API.id);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            win.Events.handleGroupChanged(undefined, groupObject);\n            await executor.finished;\n            _registry.execute(\"window-removed\", groupObject, win.API);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else if (!isUndefinedOrNull(window)) {\n            winId = window.id;\n        }\n\n        const win = _mapToWindowObject(winId);\n        if (win) {\n            if (typeof success === \"function\") {\n                success(win);\n            }\n            return win;\n        } else {\n            if (typeof error === \"function\") {\n                error(`No window with ID: ${winId}`);\n            }\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    async function execute(command: string, options: any & { windowId: string }, ...keys: string[]): Promise<Glue42.Windows.Group> {\n        await executor.execute<Glue42.Windows.Group>(command, options, ...keys);\n        return groupObject;\n    }\n\n    //#endregion \"API functions\"\n\n    //#region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    //#endregion \"Stream function\"\n\n    //#region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    //#endregion \"Internal function\"\n\n    //#region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    //#endregion \"Events\"\n\n    //#region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        showHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: true } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        hideHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: false } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        getTitle: async () => {\n            const r = await executor.execute<{ title: string }>(\"getGroupTitle\", { windowId: _windowsId[0] });\n            return r.title;\n        },\n        setTitle: async (title: string) => {\n            if (isNullOrWhiteSpace(title)) {\n                throw new Error(\"`title` must not be null or undefined.\");\n            }\n            return execute(\"setGroupTitle\", { windowId: _windowsId[0], options: { title } });\n        },\n        capture: (captureOptions: Glue42.Windows.CaptureOptions) => {\n            return executor.captureGroup(_windowsId, captureOptions);\n        },\n        maximize: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"maximizeGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        restore: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"restoreGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n    };\n\n    const internal: GroupInternal = {\n        get windows() {\n            return _windowsId;\n        },\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    //#endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowWrapper\n} from \"./types\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter: number = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        const win = windows[k];\n        const groupId = win.API.groupId;\n        const winId = win.API.id;\n        // hidden windows doesn't have groupId\n        if (!isNullOrWhiteSpace(groupId)) {\n            addWindow(groupId, winId);\n        }\n    });\n\n    windowStore.onRemoved((w) => {\n        const group = findGroupWrapperByWindow(w.API);\n        removeWindow(group, w);\n    });\n\n    environment.onCompositionChanged((windowInfo: CompositionChangedData) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void, error?: (error: string) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        const result = Object.values(_groups).find((groupObj) => {\n            const group: Glue42.Windows.Group = groupObj.groupAPI;\n            const wins = group.windows.filter((w) => w.id === windowId);\n            return wins.length;\n        });\n        if (result) {\n            if (typeof success === \"function\") {\n                success(result.groupAPI);\n            }\n            return result.groupAPI;\n        } else {\n            if (typeof error === \"function\") {\n                error(`Cannot find the group of the window.`);\n            }\n        }\n    }\n\n    // Events\n    function onWindowMoved(callback?: (windowId: string, oldTabGroupId: string, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    // Private\n\n    function createOrGet(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n            const createdGroup: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroup;\n            return createdGroup;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteIfEmpty(group: GroupWrapper): void {\n        if (group.groupAPI.windows.length === 0) {\n            delete _groups[group.groupAPI.id];\n        }\n    }\n\n    // hidden window doesn't have a groupId\n    function addWindow(groupId: string, winId: string) {\n        const group = createOrGet(groupId);\n        group.groupInternal.addWindow(winId);\n        return group;\n    }\n\n    function removeWindow(group: GroupWrapper, win: WindowWrapper) {\n        if (!group) {\n            return;\n        }\n        group.groupInternal.removeWindow(win);\n        deleteIfEmpty(group);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        const groupId = state.groupId;\n        const windowId = state.windowId;\n        const win = windowStore.get(windowId);\n        if (!win) {\n            return;\n        }\n        const currentGroup = findGroupWrapperByWindow(win.API);\n        // if the window's visibility is changed to hidden, remove from the group\n        // or the window is closed.\n        if (isUndefinedOrNull(groupId)) {\n            removeWindow(currentGroup, win);\n            return;\n        }\n        // if the window's visibility is changed to visible, addOrCreate the group\n        if (isUndefinedOrNull(currentGroup) && !isUndefinedOrNull(groupId)) {\n            addWindow(groupId, win.API.id);\n            return;\n        }\n\n        if (currentGroup.groupAPI.id !== groupId) {\n            moveWindow(win, currentGroup.groupAPI.id, groupId);\n        }\n    }\n\n    function moveWindow(win: WindowWrapper, from: string, to: string) {\n        const winId = win.API.id;\n        const fromGroup = _groups[from];\n        removeWindow(fromGroup, win);\n        const toGroup = addWindow(to, winId);\n        win.Events.handleGroupChanged(toGroup.groupAPI, fromGroup.groupAPI);\n        _registry.execute(\"window-moved\", winId, from, to);\n    }\n\n    function findGroupWrapperByWindow(winId: string | Glue42.Windows.GDWindow): GroupWrapper {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        return Object.values(_groups).find((groupObj) => {\n            const groupInternal = groupObj.groupInternal;\n            const wins = groupInternal.windows.filter((id) => id === windowId);\n            return wins.length;\n        });\n    }\n\n    //#region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n    };\n\n    //#endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\nimport executor from \"./environment/gd/executor\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise<void>((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, displayAPIGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                resolve();\n            })\n            .catch((e) => {\n                const err = `Environment detector fails with: ${e}`;\n                _logger.error(err);\n                reject(err);\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(name)) {\n                throw new Error(\"The window name is missing.\");\n            }\n            if (util.isNullOrWhiteSpace(url)) {\n                throw new Error(\"The window URL is missing.\");\n            }\n\n            if (!util.isUndefinedOrNull(options)) {\n                const optionsAsAny = options as any;\n                for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\", \"width\", \"height\", \"top\", \"left\"]) {\n                    if (prop in optionsAsAny) {\n                        const value = optionsAsAny[prop];\n                        if (util.isUndefinedOrNull(value)) {\n                            delete optionsAsAny[prop];\n                            continue;\n                        }\n                        if (!util.isNumber(value)) {\n                            const errMessage = `${prop} must be a number`;\n                            throw new Error(errMessage);\n                        }\n                        if (optionsAsAny[prop] === \"width\" || optionsAsAny[prop] === \"height\") {\n                            if (value <= 0) {\n                                const errMessage = `${prop} must be a positive number`;\n                                throw new Error(errMessage);\n                            }\n                        }\n                    }\n                }\n            }\n            return environment.open(name, url, options);\n        }, success, error);\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window?.API?.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows).reduce((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function configure(options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        const win = my();\n        const winId = win ? win.id : \"\";\n        return executor.configure(winId, options);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabAttached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabDetached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowFrameColorChanged(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup,\n        configure\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    return new Promise((resolve, reject) => {\n        if (gdMajorVersion === 2) {\n            // We are running in HC\n            _logger.trace(\"running in HC\");\n            throw new Error(\"GD2 not supported\");\n        } else if (gdMajorVersion >= 3) {\n            // We are running in GD 3\n            // TODO expose instance in glu42gd\n            _logger.trace(\"running in GD 3\");\n            const gd = new GD(agm, _logger, appManagerGetter, displayAPIGetter, undefined, window.glue42gd.windowId);\n            gd.init()\n                .then(resolve)\n                .catch(reject);\n        } else {\n            // We are running in Browser or Node, we should check which stream is available\n            // But we need to pass the container as dependency\n            const gdPromise = new GD(agm, _logger, appManagerGetter, displayAPIGetter).init();\n            const wait = (ms: number) => new Promise((res, rej) => setTimeout(() => { rej(\"timeout waiting for streams\"); }, ms));\n            Promise.race([gdPromise, wait(10000)])\n                .then(resolve)\n                .catch(reject);\n        }\n    });\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry } from \"callback-registry\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare var htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private interop: Glue42.Interop.API;\n\n    constructor(private config: Glue42.Layouts.Configuration, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry, private logger: Glue42.Logger.API) {\n        this.interop = config.agm;\n        this.registerRequestMethods();\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse) {\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        // TODO - fix activities typings\n        return (myActivity.owner as any).id === (myWindow as any).id;\n    }\n\n    private registerRequestMethods() {\n        this.interop.register<Glue42.Layouts.SaveRequestContext>(SaveContextMethodName, (args) => {\n            const usersCbs = this.callbacks.execute(\"saveRequested\", args);\n            if (usersCbs?.length > 1) {\n                this.logger.warn(`Multiple subscriptions for \"glue.layouts.onSaveRequested\" - only the first one will be used`);\n            }\n            const requestResult = usersCbs[0] as Glue42.Layouts.SaveRequestResponse;\n            const autoSaveWindowContext = this.config.autoSaveWindowContext;\n\n            if (autoSaveWindowContext) {\n                return { autoSaveWindowContext };\n            }\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult?.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult?.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0].toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    /** Version of the layout */\n    public version: string;\n\n    /** Displays of the layout */\n    public displays: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n        this.version = data.version;\n        this.displays = data.displays;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreMessageContext, ACSRestoreMessageInstanceInfo, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n\n    constructor(private config: Glue42.Layouts.Configuration, private stream: LayoutsStream, private callbacks: CallbackRegistry, logger: Glue42.Logger.API) {\n        this.appManager = config.appManager;\n        this.onEvent = stream.onEvent;\n        this.provider = new ContextProvider(config, config.activityGetter, callbacks, logger);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.SelectDefaultLayout\", { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        await this.config.agm.invoke(\"T42.ACS.DeselectDefaultLayout\");\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetDefaultLayout\");\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (!layout.name) {\n                throw Error(\"layout.name argument is required\");\n            }\n\n            if (!layout.type) {\n                layout.type = \"Global\";\n            }\n\n            if (layout.activityId) {\n                layout.type = \"Activity\";\n            }\n\n            if (typeof layout.ignoreHidden === \"undefined\") {\n                layout.ignoreHidden = true; // default to true\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                actIds: [],\n                appIds: [],\n                type: layout.type,\n                context: layout.context,\n                metadata: layout.metadata || {},\n                options: { ignoreLayoutRestrictions: false },\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        throw new Error(\"Current application is not in activity. Can not save activity layout for it\");\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n\n                layoutObject.actIds.push(actId);\n                layoutObject.options = { ignoreLayoutRestrictions: true };\n            } else if (layout.type === \"Global\") {\n                if (this.config.gdMajorVersion === 2) {\n                    let instances: any[] = this.appManager.instances();\n\n                    if (layout.ignoreHidden) {\n                        instances = instances.filter((i) => this.isVisibleWindow(i));\n                    }\n\n                    if (layout.ignoreMyInstance && this.appManager.myInstance) {\n                        instances = instances.filter((i) => i.id !== this.appManager.myInstance.id);\n                    }\n\n                    instances.reduce((prev, current) => {\n                        if (!current.id) {\n                            return prev;\n                        }\n\n                        if (current.inActivity) {\n                            const actId = current.activityId;\n\n                            if (prev.actIds.indexOf(actId) === -1) {\n                                prev.actIds.push(actId);\n                            }\n                        } else {\n                            prev.appIds.push(current.id);\n                        }\n\n                        return prev;\n                    }, layoutObject);\n                } else {\n                    layoutObject.autoCollectApps = true;\n                }\n            } else {\n                throw new Error(\"layout type \" + layout.type + \" not supported\");\n            }\n\n            this.invokeMethodAndTrack(\"T42.ACS.SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (typeof options === \"undefined\") {\n                throw Error(\"options argument is required\");\n            }\n\n            if (!options.name) {\n                throw Error(\"options.name argument is required\");\n            }\n\n            if (!options.type) {\n                options.type = \"Global\";\n            }\n\n            if (options.activityIdToJoin) {\n                options.type = \"Activity\";\n            }\n\n            if (typeof options.restoreActivityOwner === \"undefined\") {\n                options.restoreActivityOwner = false;\n            }\n\n            if (typeof options.ignoreActivityWindowTypes === \"undefined\") {\n                options.ignoreActivityWindowTypes = [];\n            }\n\n            if (typeof options.setActivityContext === \"undefined\") {\n                options.setActivityContext = true;\n            }\n\n            // if no closeOwnRunning we set closeRunningInstance to true; if\n            if (typeof options.closeRunningInstance === \"undefined\") {\n                if (options.type === \"Global\") {\n                    options.closeRunningInstance = true;\n                } else if (options.type === \"Activity\") {\n                    // we don't close anything in case of activity layout type\n                    options.closeRunningInstance = false;\n                }\n            }\n\n            if (typeof options.reuseWindows === \"undefined\") {\n                options.reuseWindows = true;\n            }\n\n            options.context = options.context || {};\n\n            const t42: ACSRestoreMessageContext = {\n                restoreOptions: {\n                    activityToJoin: options.activityIdToJoin,\n                    setActivityContext: options.setActivityContext,\n                    ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                    restoreActivityOwner: options.restoreActivityOwner,\n                    closeOldWindows: options.closeRunningInstance,\n                    reuseExistingWindows: options.reuseWindows\n                }\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                toClose: [],\n                splash: options.splash\n            };\n\n            // getting instance for closing is necessary only for GD2\n            // G4E-2418 - A global layout including swimlane app can not be restored, when the activities configuration is set to false\n            if (this.config.gdMajorVersion === 2) {\n                if (options.closeRunningInstance) {\n                    arg.toClose = this.getInstancesToClose(options);\n                }\n            }\n\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            arg.context._t42 = t42;\n\n            this.invokeMethodAndTrack(\"T42.ACS.RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ImportLayouts\", msg, resolve, reject, true);\n        });\n    }\n\n    public export(layoutType?: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                let layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                if (layoutType) {\n                    layouts = layouts.filter((l) => l.type === layoutType);\n                }\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"T42.ACS.RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                throw Error(\"layout argument is required\");\n            }\n\n            if (!layout.name) {\n                throw Error(\"name argument is required\");\n            }\n\n            if (!layout.type) {\n                throw Error(\"type argument is required\");\n            }\n\n            if (!layout.metadata) {\n                throw Error(\"metadata argument is required\");\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(\"name cannot be empty\");\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const result = await this.config.agm.invoke(\"T42.ACS.GetCurrentLayout\", {}, \"best\", { methodResponseTimeoutMs: 120 * 1000 });\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void): () => void {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void): () => void {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                reject(\"context must be an object\");\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateLayoutComponentContext\", request, resolve, reject, true);\n        });\n    }\n\n    public updateDefaultContext(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                reject(\"context must be an object\");\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"T42.ACS.UpdateDefaultContext\", request, resolve, reject, true);\n        });\n    }\n\n    public get(name: string, type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout> {\n        const matching = this.list().find((l) => l.name === name && l.type === type);\n        if (!matching) {\n            return Promise.reject(`can not find layout with name=${name} and type=${type}`);\n        }\n        return Promise.resolve(matching);\n    }\n\n    public getAll(type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.LayoutSummary[]> {\n        const matching = this.list().filter((l) => type === l.type);\n        return Promise.resolve(matching);\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private isVisibleWindow(instance: Glue42.AppManager.Instance) {\n        // GD3\n        // allow exes to participate in layouts (TODO - check if the app is layouts aware (has the layouts methods) - if not treat it as not visible window)\n        if (instance.application.type === \"exe\" || instance.application.type === \"node\") {\n            return true;\n        }\n        // allow activities to participate in layouts\n        if (instance.application.type === \"activity\") {\n            return true;\n        }\n\n        if (!instance || !instance.window) {\n            return false;\n        }\n\n        return instance.window.isVisible;\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<any>) => {\n            if (!result.returned) {\n                reject(\"No result from method \" + methodName);\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                reject(result.returned);\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n\n        this.config.agm.invoke(methodName, args, \"best\", { methodResponseTimeoutMs: 120 * 1000 })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private getInstancesToClose(options: Glue42.Layouts.RestoreOptions) {\n        const instances: ACSRestoreMessageInstanceInfo[] = [];\n        const shellApp = this.appManager.applications().filter((a: any) => a.isShell)[0];\n        const shellApplicationName = shellApp ? shellApp.name : \"AppManager\";\n\n        this.appManager.instances().forEach((i: any) => {\n\n            // ignore my instance\n            if (this.appManager.myInstance && i.id === this.appManager.myInstance.id) {\n                return;\n            }\n\n            // ignore shell app\n            if (i.application.name === shellApplicationName) {\n                return;\n            }\n\n            // ignore hidden windows\n            if (!this.isVisibleWindow(i)) {\n                return;\n            }\n\n            // if activity layout stop only the instances\n            // running in the same activity\n            if (options.type === \"Activity\") {\n                if (i.activityId !== options.activityIdToJoin) {\n                    return;\n                }\n            }\n            instances.push({ application: i.application.name, instance: i.id });\n        });\n\n        return instances;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(\"T42.ACS.OnLayoutEvent\", { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n\n                        this.addLayouts(transform(data.OnLayoutAdded));\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = \"can not subscribe to T42.ACS.OnLayoutEvent \" + err;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = \"Error subscribing for T42.ACS.OnLayoutEvent stream. Err: \" + err;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 10000; // default timeout is 10 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(\"T42.ACS.OnLayoutEvent\") !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[]) {\n        if (!layoutsData) {\n            return;\n        }\n\n        layoutsData.forEach((layoutData) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                throw Error(\"received rename event for unknown layout with type \" + renamedLayout.type + \" and name \" + renamedLayout.oldName);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import Layouts from \"./layouts\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport { Glue42 } from \"../../glue\";\nimport { LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport default function(config: Glue42.Layouts.Configuration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks, logger);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, { id });\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public getByWindowId(id: string): Promise<Glue42.Displays.Display> {\n        const current = this.callGD<Glue42.Displays.Display>(DisplayCommand.GetByWindowId, { id });\n        return current;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targetting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: { ...options }, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        return {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n    }\n}\n\ntype SizeOptions = Glue42.Displays.ScaleOptions | Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetByWindowId = \"getByWindowId\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\n\nexport async function setupAGM(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register(\"T42.Channels.Command\", (args: any) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    /** Unsubscribes from the current shared context, and subscribe to the passed one */\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        return new Promise((resolve, reject) => {\n            if (!this.isChannel(name)) {\n                return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            const contextName = this.createContextName(name);\n\n            this.contexts.subscribe(contextName, (data) => {\n                resolve(data);\n            }).then((unsubscribeFunc) => unsubscribeFunc());\n        });\n    }\n\n    public updateChannel(name: string, data: { name: string, meta: any, data: any }): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    public updateData(name: string, data: any) {\n        const contextName = this.createContextName(name);\n        if (this.contexts.setPathSupported) {\n            const pathValues: Glue42.Contexts.PathValue[] = Object.keys(data).map((key) => {\n                return {\n                    path: `data.` + key,\n                    value: data[key]\n                };\n            });\n            return this.contexts.setPaths(contextName, pathValues);\n        } else {\n            // pre 3.10, note that we update the data property only\n            return this.contexts.update(contextName, { data });\n        }\n    }\n\n    public isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { switchChannel } from \"./agm\";\n\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n    private isInitialJoin = true;\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n\n    constructor(private shared: SharedContextSubscriber, private interop: Glue42.Interop.API, private getWindows: () => Glue42.Windows.API, private logger: Glue42.Logger.API) {\n        this.shared.subscribe(this.handler.bind(this));\n\n        if (typeof window !== \"undefined\") {\n            this.currentContext = (window.glue42gd as any).initialChannel;\n            if (this.currentContext) {\n                this.joinNoSelectorSwitch(this.currentContext);\n            }\n        }\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        return this.registry.add(this.subsKey, callback);\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            if (!this.shared.isChannel(name)) {\n                return Promise.reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            return this.shared.updateData(name, data);\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.updateData(this.currentContext, data);\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    /* Returns info about my channel */\n    public getMy(): Promise<Glue42.Channels.ChannelContext> {\n        if (!this.currentContext) {\n            return Promise.resolve(undefined);\n        }\n        return this.get(this.currentContext);\n    }\n\n    public async join(name: string): Promise<void> {\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave() {\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.updateChannel(info.name, context);\n\n        return context;\n    }\n\n    public async getWindowsOnChannel(channel: string): Promise<Glue42.Windows.GDWindow[]> {\n        const windowInfos = await this.getWindowsWithChannels({ channels: [channel] });\n        return windowInfos.map((w) => w.window);\n    }\n\n    public async getWindowsWithChannels(filter: Glue42.Channels.WindowWithChannelFilter): Promise<Glue42.Channels.WindowOnChannelInfo[]> {\n        try {\n            const info = await this.interop.invoke<{ windows: Array<{ windowId: string, channel: string, application: string }> }>(\"T42.Channels.Announce\", { command: \"getChannelsInfo\", data: { filter } });\n            const windows = this.getWindows();\n            if (info?.returned?.windows) {\n                return info.returned.windows.map((windowInfo) => {\n                    const window = windows.findById(windowInfo.windowId);\n                    return {\n                        window,\n                        channel: windowInfo.channel,\n                        application: windowInfo.application\n                    };\n                });\n            }\n        } catch (er) {\n            this.logger.error(`Error getting all channel enabled windows. This method is available since Glue42 3.12`, er);\n        }\n        return [];\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector: boolean = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (!this.isInitialJoin && name === this.currentContext) {\n            // ignore joining the channel that we're already on, except when this is the very first call\n            return;\n        }\n        this.isInitialJoin = false;\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise<void>((resolve, reject) => {\n                let timeoutId: NodeJS.Timeout;\n\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        this.currentContext = name;\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.unsubscribe();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupAGM } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API, getWindows: () => Glue42.Windows.API, logger: Glue42.Logger.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts, agm, getWindows, logger);\n\n    setupAGM(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        // @ignore-ed as currently not entirely supported by the framework.\n        add: channels.add.bind(channels),\n        getWindowsOnChannel: channels.getWindowsOnChannel.bind(channels),\n        getWindowsWithChannels: channels.getWindowsWithChannels.bind(channels),\n        getMy: channels.getMy.bind(channels),\n        ready: () => (contexts as any).ready()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod(): void {\r\n        this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig } from \"./types\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject>(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode) + \"\";\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else {\n                return defaultMode + \"\";\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return ((trueMode === undefined) ? defaultMode : trueMode) + \"\";\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value + \"\";\n    }\n\n    const appDefaultMode = false;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n\n    return {\n        layouts: getLibConfig<LibConfigObject>(options.layouts, layoutsDefaultMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode),\n        appManager: getLibConfig<LibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject>(options.windows, true),\n        channels: getLibConfig<LibConfigObject>(options.channels || false, false),\n        displays: getLibConfig<LibConfigObject>(options.displays, true)\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    public onclick: ((this: Notification, ev: Event) => any) | null;\n    public onclose: ((this: Notification, ev: Event) => any) | null;\n    public onerror: ((this: Notification, ev: Event) => any) | null;\n    public onshow: ((this: Notification, ev: Event) => any) | null;\n    public onaction: ((this: Notification, ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { Glue42 } from \"../../glue\";\n\nexport class PanelAPI implements Glue42.Notifications.NotificationPanelAPI {\n    constructor(private interop: Glue42.Interop.API) {\n    }\n\n    public toggle(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\");\n    }\n    public show(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\", { show: true });\n    }\n    public hide(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Hide\");\n    }\n    public isVisible(): Promise<boolean> {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload } from \"./types\";\nimport generate from \"shortid\";\nimport { PanelAPI } from \"./panel\";\nconst STARTING_INDEX = 0;\n\nexport class Notifications implements Glue42.Notifications.API {\n    public panel: PanelAPI;\n\n    private methodsRegistered: boolean = false;\n    private readonly methodNameRoot = \"T42.Notifications.Handler-\" + generate();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n\n    constructor(private interop: Glue42.Interop.API) {\n        this.panel = new PanelAPI(interop);\n    }\n\n    public get maxActions(): number {\n        return 2;\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (!this.methodsRegistered) {\n            const bunchOfPromises = [];\n            for (let index = STARTING_INDEX; index < this.maxActions; index++) {\n                bunchOfPromises.push(\n                    this.interop.register(this.methodNameRoot + \"_\" + index, this.handleNotificationAction.bind(this))\n                );\n            }\n\n            await Promise.all(bunchOfPromises);\n            this.methodsRegistered = true;\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const type = options.type ?? \"Notification\";\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            type,\n            severity: options.severity ?? \"None\",\n            description: options.body,\n            glueRoutingDetailMethodName: this.methodNameRoot + \"_\" + STARTING_INDEX,\n            actions: [],\n            sourceId: id,\n            source: options.source\n        };\n\n        if (options.actions) {\n            const validActions = options.actions.slice(0, this.maxActions);\n\n            let index = STARTING_INDEX;\n            for (const action of validActions) {\n                const args: GnsNotificationActionPayload = { // this should include user arguments (action.interop?.arguments)\n                    g42notificationId: id,\n                    g42action: action.action,\n                    g42interopMethod: action.interop?.method,\n                    g42interopTarget: action.interop?.target,\n                };\n                // TODO, properly convert between args and GNS value\n                const parameters = Object.keys(args).map((key) => {\n                    const value = (args as any)[key];\n                    return {\n                        name: key,\n                        value: {\n                            stringValue: value\n                        }\n                    };\n                });\n\n                const glueAction: GnsNotificationActionSettings = {\n                    name: this.methodNameRoot + \"_\" + index,\n                    description: action.title,\n                    displayName: action.title,\n                    parameters\n                };\n\n                notification.actions.push(glueAction);\n                index++;\n            }\n        }\n\n        if (options.icon) {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"icon\", value: { stringValue: options.icon } }\n            );\n        }\n\n        if (options.data) {\n            notification.attributes = notification.attributes || [];\n            const dataAsString = JSON.stringify(options.data);\n            notification.attributes.push(\n                { key: \"data\", value: { stringValue: dataAsString } }\n            );\n        }\n\n        await this.interop.invoke(\"T42.GNS.Publish.RaiseNotification\", { notification });\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n        return g42notification;\n    }\n\n    public async setFilter(filter: Glue42.Notifications.NotificationFilter): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\", filter);\n        return result.returned;\n    }\n\n    public async getFilter(): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\");\n        return result.returned;\n    }\n\n    private handleNotificationAction(args: any) {\n        if (args.g42notificationId) {\n            // action click\n            const payload: GnsNotificationActionPayload = args as GnsNotificationActionPayload;\n            const id = payload.g42notificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onaction\");\n            (event as Glue42.Notifications.ActionEvent).action = payload.g42action;\n            if (notification.onaction) {\n                notification.onaction(event as Glue42.Notifications.ActionEvent);\n            }\n\n            // interop\n            const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n            const actionInterop = actionDefinition.interop;\n            if (actionInterop) {\n                this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        } else if (args.notification && args.notification.sourceNotificationId) {\n            // notification click\n            const id = args.notification.sourceNotificationId;\n            const notification = this.notifications[id];\n            if (!notification) {\n                return;\n            }\n\n            // user event\n            const event = new Event(\"onclick\");\n            if (notification.onclick) {\n                notification.onclick(event);\n            }\n\n            // interop call\n            const clickInterop = notification.options.clickInterop;\n            if (clickInterop) {\n                this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n            }\n\n            // dispatch\n            notification.dispatchEvent(event);\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n    private isSubscribed = false;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        if (this.isSubscribed) {\r\n            return;\r\n        }\r\n        this.isSubscribed = true;\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport { AppDefinition, GetWindowsInfoResult, GetWindowsInfoResultItem, IntentInfo } from \"./types\";\n\nconst GLUE42_FDC3_INTENTS_METHOD_PREFIX = \"Tick42.FDC3.Intents.\";\n\nexport class Intents implements Glue42.Intents.API {\n    constructor(private interop: Glue42.Interop.API, private windows: Glue42.Windows.API, private logger: Glue42.Logger.API) {\n    }\n\n    public async find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent[]> {\n        let intents = await this.all();\n        if (typeof intentFilter === \"undefined\") {\n            return intents;\n        }\n\n        if (typeof intentFilter === \"string\") {\n            return intents.filter((intent) => intent.name === intentFilter);\n        }\n\n        if (typeof intentFilter !== \"object\") {\n            throw new Error(\"Please provide the intentFilter as a string or an object!\");\n        }\n\n        if (intentFilter.contextType) {\n            const ctToLower = intentFilter.contextType.toLowerCase();\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.contextTypes?.some((ct) => ct.toLowerCase() === ctToLower)));\n        }\n\n        if (intentFilter.name) {\n            intents = intents.filter((intent) => intent.name === intentFilter.name);\n        }\n\n        return intents;\n    }\n\n    public async raise(intent: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n\n        if (typeof intent === \"string\") {\n            intent = {\n                intent\n            };\n        }\n\n        const intentName = intent.intent;\n        const intentDef = await this.get(intentName);\n\n        if (typeof intentDef === \"undefined\") {\n            throw new Error(`Intent ${intentName} not found.`);\n        }\n\n        const isDynamicIntent = !intentDef.handlers.some((intentDefHandler) => intentDefHandler.type === \"app\");\n\n        // Default to \"reuse\" in the case of a dynamic intent and to \"startNew\" if target isn't provided.\n        const target = intent.target || (isDynamicIntent ? \"reuse\" : \"startNew\");\n        // The handler that will execute the intent.\n        let handler: Glue42.Intents.IntentHandler;\n        const anAppHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\");\n        if (target === \"startNew\") {\n            handler = anAppHandler;\n        } else if (target === \"reuse\") {\n            const anInstanceHandler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\");\n            handler = anInstanceHandler || anAppHandler;\n        } else if (target.instance) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"instance\" && intentHandler.instanceId === target.instance);\n        } else if (target.app) {\n            handler = intentDef.handlers.find((intentHandler) => intentHandler.type === \"app\" && intentHandler.applicationName === target.app);\n        } else {\n            throw new Error(`Invalid intent target: ${JSON.stringify(target)}`);\n        }\n\n        if (!handler) {\n            throw new Error(`Can not raise intent for request ${JSON.stringify(intent)} - can not find intent handler.`);\n        }\n\n        let instanceId = handler.instanceId;\n        if (handler.type === \"app\") {\n            instanceId = await this.startApp(handler.applicationName, intent.options);\n        }\n\n        const result: Partial<Glue42.Intents.IntentResult> = await this.raiseIntentToInstance(instanceId, intentName, intent.context);\n        result.request = intent;\n        result.handler = handler;\n\n        return result as Glue42.Intents.IntentResult;\n    }\n\n    public async all(): Promise<Glue42.Intents.Intent[]> {\n        // Gathers all intents from:\n        // 1. Application definitions\n        // 2. Running instances (application can register dynamic intents by calling `addIntentListener()` that aren't predefined inside of their application definitions)\n        // It also populates intent handlers (actual entities that can handle the intent).\n        let apps: AppDefinition[];\n        try {\n            const result = await this.interop.invoke<{ applications: AppDefinition[] }>(\"T42.ACS.GetApplications\", { withIntentsInfo: true });\n            apps = result.returned.applications;\n        } catch (e) {\n            this.logger.error(`Failed to get the applications!`, e);\n            return [];\n        }\n        const intents: { [key: string]: Glue42.Intents.Intent } = {};\n        const appsWithIntents = apps.filter((app) => app.intents && app.intents.length > 0);\n        //  Gather app handlers from application definitions.\n        for (const app of appsWithIntents) {\n            for (const intentDef of app.intents) {\n                let intent = intents[intentDef.name];\n                if (!intent) {\n                    intent = {\n                        name: intentDef.name,\n                        handlers: [],\n                    };\n                    intents[intentDef.name] = intent;\n                }\n\n                const handler: Glue42.Intents.IntentHandler = {\n                    applicationName: app.name,\n                    applicationTitle: app.title || \"\",\n                    applicationDescription: app.caption,\n                    displayName: intentDef.displayName,\n                    contextTypes: intentDef.contexts,\n                    applicationIcon: app.icon,\n                    type: \"app\"\n                };\n\n                intent.handlers.push(handler);\n            }\n        }\n\n        const servers = this.interop.servers();\n        const serverWindowIds = servers.map((server) => server.windowId).filter((serverWindowId) => typeof serverWindowId !== \"undefined\");\n\n        const T42WndGetInfo = \"T42.Wnd.GetInfo\";\n        const isT42WndGetInfoMethodRegistered = this.interop.methods().some((method) => method.name === T42WndGetInfo);\n\n        let windowsInfos: GetWindowsInfoResultItem[];\n        // For backwards compatibility with previous versions of Glue Desktop, the windows' titles will be attempted to be obtained using the Windows API.\n        if (isT42WndGetInfoMethodRegistered) {\n            try {\n                const result = await this.interop.invoke<GetWindowsInfoResult>(T42WndGetInfo, { ids: serverWindowIds });\n                windowsInfos = result.returned.windows;\n            } catch (e) {\n                // Swallow the error. The windows' titles will be attempted to be obtained using the Windows API.\n            }\n        }\n\n        // Discover all running instances that provide intents, and add them to the corresponding intent.\n        for (const server of servers) {\n            await Promise.all(server.getMethods()\n                .filter((method) => method.name.startsWith(GLUE42_FDC3_INTENTS_METHOD_PREFIX))\n                .map(async (method) => {\n                    const intentName = method.name.replace(GLUE42_FDC3_INTENTS_METHOD_PREFIX, \"\");\n                    let intent = intents[intentName];\n                    if (!intent) {\n                        intent = {\n                            name: intentName,\n                            handlers: [],\n                        };\n                        intents[intentName] = intent;\n                    }\n                    const info = method.flags.intent as Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\">;\n\n                    const app = apps.find((appWithIntents) => appWithIntents.name === server.application);\n                    let appIntent: IntentInfo | undefined;\n                    if (app && app.intents) {\n                        appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);\n                    }\n\n                    const title = await this.windowsIdToTitle(server.windowId, windowsInfos);\n                    const handler: Glue42.Intents.IntentHandler = {\n                        instanceId: server.instance,\n                        applicationName: server.application,\n                        applicationIcon: info.icon || app?.icon,\n                        applicationTitle: app?.title || \"\",\n                        applicationDescription: info.description || app?.caption,\n                        displayName: info.displayName || appIntent?.displayName,\n                        contextTypes: info.contextTypes || appIntent?.contexts,\n                        instanceTitle: title,\n                        type: \"instance\"\n                    };\n                    intent.handlers.push(handler);\n                }));\n        }\n\n        return Object.values(intents);\n    }\n\n    public addIntentListener(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): { unsubscribe: () => void } {\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\n        }\n        if (typeof handler !== \"function\") {\n            throw new Error(\"Please provide the handler as a function!\");\n        }\n\n        // `addIntentListener()` is sync.\n        // tslint:disable-next-line:no-console\n        const result: { unsubscribe: () => void } = { unsubscribe: () => console.log(\"Could not unsubscribe!\") };\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\n        let intentFlag: Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\"> = {};\n\n        if (typeof intent === \"object\") {\n            const { intent: removed, ...rest } = intent;\n            intentFlag = rest;\n        }\n\n        this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args: Glue42.Intents.IntentContext) => {\n            return handler(args);\n        }).then(() => {\n            result.unsubscribe = () => {\n                this.interop.unregister(methodName);\n            };\n        });\n\n        return result;\n    }\n\n    private async get(intent: string): Promise<Glue42.Intents.Intent> {\n        return (await this.all()).find((registeredIntent) => registeredIntent.name === intent);\n    }\n\n    private async startApp(application: string, options?: Glue42.AppManager.ApplicationStartOptions) {\n        const result = await this.interop.invoke<{ Name: string, Id: string }>(\"T42.ACS.StartApplication\", { Name: application, options });\n        return result.returned.Id;\n    }\n\n    private async raiseIntentToInstance(instanceId: string, intent: string, context?: Glue42.Intents.IntentContext): Promise<{ result: any }> {\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intent}`;\n        let interopServer = this.interop.servers().find((server) => server.instance === instanceId);\n        if (!interopServer) {\n            // Wait 30 sec for the server to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.serverAdded((server) => {\n                    if (server.instance === instanceId) {\n                        interopServer = server;\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop server for instance ${instanceId}`));\n                }, 30 * 1000);\n            }));\n        }\n\n        const method = interopServer.getMethods().find((registeredMethod) => registeredMethod.name === methodName);\n        if (!method) {\n            // Wait 10 sec for the method to appear.\n            await (new Promise((resolve, reject) => {\n                let timeoutId: any;\n\n                const unsub = this.interop.methodAdded((addedMethod) => {\n                    if (addedMethod.name === methodName) {\n                        resolve();\n                        clearTimeout(timeoutId);\n                        unsub();\n                    }\n                });\n\n                timeoutId = setTimeout(() => {\n                    unsub();\n                    reject(new Error(`Can not find interop method ${methodName} for instance ${instanceId}`));\n                }, 10 * 1000);\n            }));\n        }\n\n        const result = await this.interop.invoke(methodName, context, { instance: instanceId });\n\n        return {\n            result: result.returned\n        };\n    }\n\n    private async windowsIdToTitle(id: string, windowsInfos?: GetWindowsInfoResultItem[]): Promise<string> {\n        if (typeof windowsInfos !== \"undefined\") {\n            return windowsInfos.find((windowsInfo) => windowsInfo.id === id)?.title;\n        }\n\n        // The Windows API could be undefined e.g. when running inside of a node environment.\n        const window = this.windows?.findById(id);\n        const title = await window?.getTitle();\n        return title;\n    }\n}\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\nimport { Intents } from \"./intents/intents\";\nimport { InitInfo } from \"./initInfo\";\nimport { Prefs } from \"./prefs/index\";\n\nlet initInfo: InitInfo;\nconst factory = async (options: Glue42.Config): Promise<Glue42.Glue> => {\n    // if running in GD, do not allow creating multiple instance of this API in the same page\n    const glue42gd: Glue42.GDObject = typeof window !== \"undefined\" && window.glue42gd;\n    if (glue42gd) {\n        if (initInfo) {\n            return initInfo.getPromise();\n        } else {\n            initInfo = new InitInfo();\n        }\n    }\n    const g = await factoryCore(options, glue42gd);\n    initInfo?.resolve(g);\n    return g;\n};\n\nconst factoryCore = async (options: Glue42.Config, glue42gd: Glue42.GDObject): Promise<Glue42.Glue> => {\n\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                () => {\n                    return _displays;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"exit\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: glue42gd?.activityInfo?.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode as Glue42.AppManager.Mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const layoutsConfig = glueConfig.layouts as Glue42.Layouts.Configuration;\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: layoutsConfig.mode,\n            autoSaveWindowContext: layoutsConfig.autoSaveWindowContext ?? false,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const logger = getLibLogger(\"channels\", core.logger, glueConfig.channels);\n\n        const channelsAPI = channels(core.contexts, core.agm, () => _windows, logger);\n\n        debugLog(channelsAPI);\n        return channelsAPI;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = new Intents(core.agm, _windows, core.logger.subLogger(\"intents\"));\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop);\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function createPrefs(core: Glue42Core.GlueCore) {\n        const appName = options.application ?? glue42gd?.application ?? core.interop.instance.application;\n        const prefs = new Prefs(appName, core.interop);\n\n        debugLog(prefs);\n        return prefs;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes },\n            { name: \"prefs\", create: createPrefs }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    const glueApi = (await CoreFactory(options, ext)) as Glue42.Glue;\n\n    // Decorate the ready glue object with extra functionalities coming from the user-defined libraries.\n    if (Array.isArray(options?.libraries) && options.libraries.length) {\n        await Promise.all(options.libraries.map((lib) => lib(glueApi, options)));\n    }\n\n    return glueApi;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\nfactory.initInfo = initInfo;\n\nexport default factory;\n","import { Glue42 } from \"../glue\";\n\nexport class InitInfo {\n\n    public reject: (reason?: any) => void;\n    public resolve: (value: Glue42.Glue | PromiseLike<Glue42.Glue>) => void;\n    public numberOfCalls: number = 0;\n\n    private promise: Promise<Glue42.Glue>;\n\n    constructor() {\n        this.numberOfCalls = 1;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    public getPromise() {\n        this.numberOfCalls++;\n        return this.promise;\n    }\n\n    public done(g: Glue42.Glue) {\n        this.resolve(g);\n    }\n\n    public error(e: Error) {\n        this.reject(e);\n    }\n}\n","import { Glue42 } from \"../../glue\";\n\nexport interface AppPreferences {\n    app: string;\n    data: any;\n    lastUpdate: Date;\n}\n\nexport class Prefs {\n\n    constructor(private appName: string, private interop: Glue42.Interop.API) {\n    }\n\n    public async get(app?: string): Promise<AppPreferences | undefined> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\", { app: app ?? this.appName }));\n        return data.returned;\n    }\n\n    public async set(data: any, options?: { app: string }): Promise<void> {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: false });\n    }\n\n    public async update(data: any, options?: { app: string }) {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: true });\n    }\n\n    public async clear(app?: string) {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: app ?? this.appName, clear: true });\n    }\n\n    public async getAll(): Promise<AppPreferences[]> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\"));\n        return data.returned;\n    }\n\n    public async clearAll() {\n        await this.interop.invoke(\"T42.Prefs.Set\", { clear: true });\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","MetricTypes","getMetricTypeByValue","metric","type","getTypeByValue","Date","serializeMetric","serializedMetrics","values","keys","reduce","memo","key","innerType","composite","defineNestedComposite","description","context","name","normalizeMetricName","path","join","getMetricValueByType","now","publishNestedComposite","getTime","Boolean","toString","composeMsgForRootStateMetric","system","merged","flatten","arr","flat","toFlatten","concat","isArray","root","getAggregateState","highestState","sort","state","msg","forEach","m","idx","slice","aggregateDescription","Helpers","definition","parent","transport","Error","BaseMetric","createMetric","defineProperty","get","_a","repo","enumerable","configurable","update","newValue","updateMetric","NumberMetric","_super","incrementBy","num","increment","decrement","decrementBy","ObjectMetric","mergeValues","_this","StringMetric","TimestampMetric","Repository","options","protocol","init","separator","_transport","_name","_description","_repo","_parent","_path","_buildPath","shadowedSystem","_state","id","_subSystems","_metrics","_getOrCreateMetric","metricObject","expectedType","metricDef","matching","filter","shadowedMetric","existing","catch","me","subSystems","metrics","subSystem","nameSystem","descriptionSystem","match","_system","getState","setState","stateDescription","updateSystem","stringMetric","timestampMetric","objectMetric","numberMetric","aggState","shadowedSubSystem","createSystem","addSystemMetrics","clickStream","undefined","rootSystem","useClickStream","navigator","userAgent","document","clickStream_1","documentClickHandler","target","timestamp","className","tagName","toLowerCase","href","title","page","window","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","glue42gd","appName","NullProtocol","PerfTracker","api","initialPublishTimeout","publishInterval","lastCount","scheduleCollection","setTimeout","collect","setInterval","collectMemory","collectEntries","memory","performance","JSON","stringify","totalJSHeapSize","usedJSHeapSize","allEntries","getEntries","jsonfiedEntries","map","toJSON","connection","config","joinPromise","session","replayRepo","replaySystem","ss","createMetricsMsg","Description","Value","send","metricClone","cloneMetric","updateMetricCore","canUpdate","publishMetricsMsg","sendFireAndForget","canUpdateMetric","_b","resolveReadyPromise","domain","onJoined","reconnect","defineRootMetricsMsg","service","instance","shadowedUpdateMetric","stateObj","rootMetric","peer_id","peerId","gw3","disableAutoAppSystem","featureMetric","reportingSystem","def","featureMetricFunc","action","payload","addFAVSupport","perfConfig","pagePerformanceMetrics","enabled","initPerf","createRegistry","errorHandling","_userErrorHandler","callbacks","_handleError","exceptionArtifact","errParam","stack","console","error","add","callback","replayArgumentsArr","callbacksForKey","replayArgument","includes","err","allForKey","acc","element","index","execute","argumentsArr","_i","results","clear","clearKey","default","lib","InProcTransport","settings","logger","registry","gw","facade","connect","_client","message","messageHandler","client","sendObject","_msg","onMessage","onConnectedChanged","close","open","SharedWorkerTransport","workerFile","worker","SharedWorker","port","onmessage","data","postMessage","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNaN","isNode","_isNode","global","process","PromiseWrapper","resolved","promise","delay","time","timers","timer","timerName","marks","endTime","period","startTime","mark","currentTime","diff","timerObj","stop","WebSocketConstructor","WebSocket","WS","startupTimer","_running","_registry","wsRequests","ws","waitForSocketConnection","info","pw","failed","readyState","openSocket","retryInterval","retriesLeft","reconnectInterval","notifyForSocketState","debug","initiateSocket","retries","onerror","reason","seen_1","WeakSet","has","notifyStatusChanged","onclose","onopen","identity","application","wsRequest","status","seed","alphabet","previousSeed","shuffled","randomFromSeed","nextValue","_seed_","ORIGINAL","reset","setCharacters","_alphabet_","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","Math","floor","splice","shuffle","alphabet_1","characters","lookup","crypto","msCrypto","randomByteBrowser","getRandomValues","random","dest","Uint8Array","encode_1","number","loopCounter","str","pow","decode_1","indexOf","isValid","len","lib$1","fn","module","exports","createCommonjsModule","counter","previousSeconds","clusterWorkerId","generate","seconds","seedValue","workerId","newCharacters","decode","shortid","domainSession","successMessages","errorMessages","_latestOptions","isJoined","tryReconnecting","_connectionOn","disconnected","loggedIn","on","handleSuccessMessage","handleErrorMessage","sm","requestsMap","destination","wasReconnect","handleJoined","requestId","request_id","entry","success","getNextRequestId","tag","skipPeerId","successMsg","_tag","errorMsg","warn","leave","onLeft","connected","GW3ProtocolImpl","protocolVersion","datePrefix","datePrefixLen","dateMinLen","datePrefixFirstChar","_isLoggedIn","shouldTryLogin","initialLogin","initialLoginAttempts","sessions","handleDisconnected","ping","processStringMessage","parse","substring","milliseconds","parseInt","ex","msgType","createStringMessage","oldToJson","datePrefix_1","processObjectMessage","createObjectMessage","login","authentication","e_1","helloMsg","sendOptions","welcomeMsg","token","err_1","_c","loginConfig","username","password","gatewayToken","getNewGWToken","method","flowName","provider","flowCallback","sessionId","secret","globalDomain","subLogger","maxRetries","reconnectAttempts","Buffer","from","resolvedIdentity","resolved_identity","availableDomains","available_domains","access_token","setLoggedIn","logout","promises","pingTimer","clearTimeout","all","domainName","domainLogger","bind","authToken","res","getGWToken","MessageReplayerImpl","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","_loop_1","refCount","this_1","sub","processMessage","types","isDone","name_2","drain","off","PromisePlus","executor","timeoutMilliseconds","timeoutMessage","timeout","WebPlatformTransport","parentReady","iAmConnected","children","parentPingTimeout","connectionRequestTimeout","defaultTargetString","connectionAccepted","handle","handleConnectionAccepted","connectionRejected","handleConnectionRejected","connectionRequest","handleConnectionRequest","handleParentReady","parentPing","handleParentPing","platformPing","handlePlatformPing","platformUnload","handlePlatformUnload","platformReady","handlePlatformReady","clientUnload","handleClientUnload","manualUnload","handleManualUnload","setUpMessageListener","setUpUnload","opener","top","parentType","publicWindowId","windowId","event","waitParent","initiateRemoteConnection","connectionResolve","connectionReject","myClientId","bridgeInstanceId","request","glue42core","clientId","clientType","parentPingResolve","checkMessageTypeValid","messageType","ownWindowId","handleAcceptanceOfMyRequest","handleAcceptanceOfGrandChildRequest","parentWindowId","applicationName","child","find","c","grandChildId","source","origin","rejectConnectionRequest","typeToValidate","rejection","Connection","messageHandlers","ids","_connected","isTrace","inproc","sharedWorker","webPlatform","canPublish","handleConnectionChanged","handleTransportMessage","replaySpecs","replayer","isObjectBasedTransport","trace","strMessage","isLoggedIn","authRequest","distributeMessage","handlers","handlerId","handler","loggerError","log","msgObj","order","Logger","logFn","subLoggers","customLogFn","loggerFullName","includeTimeAndLevel","existingSub","publishLevel","level","_publishLevel","consoleLevel","_consoleLevel","publishMessage","compareWith","loggerName","interop","Interop","methods","InteropMethodName","invoke","prefix","date","getHours","getMinutes","getSeconds","getMilliseconds","toPrint","GW_MESSAGE_CREATE_CONTEXT","GW_MESSAGE_ACTIVITY_CREATED","GW_MESSAGE_ACTIVITY_DESTROYED","GW_MESSAGE_CONTEXT_CREATED","GW_MESSAGE_CONTEXT_ADDED","GW_MESSAGE_SUBSCRIBE_CONTEXT","GW_MESSAGE_SUBSCRIBED_CONTEXT","GW_MESSAGE_UNSUBSCRIBE_CONTEXT","GW_MESSAGE_DESTROY_CONTEXT","GW_MESSAGE_CONTEXT_DESTROYED","GW_MESSAGE_UPDATE_CONTEXT","GW_MESSAGE_CONTEXT_UPDATED","GW_MESSAGE_JOINED_ACTIVITY","ContextMessageReplaySpec","GW3ContextData","contextId","isAnnounced","activityId","updateCallbacks","hasCallbacks","applyContextDelta","delta","deepClone","commands","command","deletePath","setValueToPath","added_1","added","updated_1","updated","removed","mergeObjectsProperties","obj","hash","WeakMap","Set","RegExp","flags","set","Map","val","what","withWhat","right","left","deepEqual","x","pathArr","InvokeStatus","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_protocolVersion","_connection","_logger","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","contextsDomainInfo","uri","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","currentContext","calculatedDelta","calculateContextDeltaV2","calculateContextDeltaV1","gwResponse","handleUpdated","updaterId","setPath","setPathSupported","setPaths","pathValues","pathValues_1","pathValue","pathValues_2","subscribe","_d","_r","un","unsubscribe","thisCallbackSubscriptionNumber","clone","hadCallbacks","joinedActivity","sentExplicitSubscription","sendSubscribe","subscriptionKey","sendUnsubscribe","destroy","extraData","oldContext","invokeUpdateCallbacks","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","ContextsModule","_bridge","checkName","checkData","checkPath","paths","paths_1","ready","promisify","successCallback","errorCallback","rejectAfter","ms","clearTimeoutIfThere","Client","configuration","callProtocolSubscribe","targetServers","stream","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","servers","methodFilter","filterCopy","getServers","serverMethodMap","server","getMethods","methodsForInstance","getMethodsForInstance","methodAdded","onMethodAdded","methodRemoved","onMethodRemoved","serverAdded","onServerAdded","serverRemoved","onServerRemoved","serverMethodAdded","onServerMethodAdded","serverMethodRemoved","onServerMethodRemoved","argumentObj","additionalOptions","methodDefinition","serversMethodMap","errorObj","additionalOptionsCopy","invokePromises","invocationMessages","methodResponseTimeoutMs","tryToAwaitForMethods","supportsStreaming","objectTypes","metadata","called_with","executed_by","returned","serversMethodPair","invId","invokePromise","race","invocationId","getInvocationResultObj","every","getInvokePromise","invocationResults","calledWith","all_return_values","invokeMessage","Success","allValues","currentValue","all_errors","allErrors","currError","invResult","interval","clearInterval","filterByTarget","matches","myMatches","serverMethodPair","instanceMatch","localMachine","isLocal","instanceFilter","instanceDefinition","containsProps","methodMatch","repoMethod","prop","isMatch","filterValue","repoMethodValue","filterValueEl","isSubset","superObj","subObj","ele","String","matchingServers","resultMethodsObject","methodKey","identifier","prev","current","matchingMethods","ServerSubscription","subscription","branchKey","closeSingleSubscription","pushDataToSingle","Request","requestContext","accept","acceptRequestOnBranch","acceptOnBranch","branch","rejectRequest","ServerStreaming","onSubRequest","rc","rm","handleSubRequest","onSubAdded","handleSubAdded","onSubRemoved","handleSubRemoved","streamCallbacks","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","ServerBranch","subscriptions","getSubscriptionList","closeAllSubscriptions","pushData","ServerStream","_protocol","_repoMethod","_server","branches","bList","getBranchList","def2","accepts","displayName","returns","unregister","updateRepoMethod","Server","serverRepository","invocations","currentlyUnregistering","streaming","onInvoked","onMethodInvoked","createStream","streamDef","existingStream","streamMethodDefinition","getList","some","serverMethod","protocolState","streamUserObject","repoId","remove","register","wrappedCallbackFunction","resultCallback","resultValue","args","userCallback","registerCore","registerAsync","wrappedCallback","resultCalled_1","methodResult","userCallbackAsync","forStream","methodToBeRemoved","unregisterWithPredicate","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","methodsToRemove","methodUnregPromises","addAsCurrentlyUnregistering","methodName","theFunction","unregisterInProgress","methodToExecute","invocationArgs","unStrException","_value","methodInvocationResult","InstanceWrapper","API","wrapped","getStreams","refreshWrappedObject","refresh","unwrap","user","pid","machine","environment","region","hideMethodSystemFlags","ClientRepository","methodsCount","myServer","wrapper","unwrappedInstance","addServer","serverId","serverEntry","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodIdentifier","that","gatewayId","display_name","object_types","input_signature","result_signature","getServersByMethod","clientMethodDefinition","extractMethodsFromServers","hideServerMethodSystemFlags","unsubscribeFunc","serversWithMethodsToReplay","returnUnsubWithDelayedReplay","methodsToReplay","unsubCalled","getServerById","methodInfo","allServers","collectionToReplay","clientMethods","entries","ServerRepository","nextId","getById","SUBSCRIPTION_REQUEST","SUBSCRIPTION_ADDED","SUBSCRIPTION_REMOVED","ServerStreaming$1","repository","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","streamingMethod","subscriptionsMap","branchKeyToStreamIdMap","streamId","getStreamId","subscription_id","subscribeMsg","stream_id","sendSubscriptionFailed","br","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","method_id","eventName","handlerFunc","getNextStreamId","caller_id","arguments_kv","subscriptionId","errorMessage","reason_uri","needleBranch","ServerProtocol","clientRepository","handleInvokeMessage","isStreaming","registerMsg","restrictions","invocation_id","callerId","UserSubscription","subscriptionData","params","trackedServers","pair","onData","dataCallback","queued","dataItem","onClosed","closedCallback","onFailed","onConnected","setNewSubscription","newSub","STATUS_AWAITING_ACCEPT","STATUS_SUBSCRIBED","ERR_MSG_SUB_FAILED","ON_CLOSE_MSG_CLIENT_INIT","ClientStreaming","subscriptionsList","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","subLocalKey","pendingSub","timeoutId","callArgs","callOnClosedHandlers","handleSubscribed","acceptingServer","isFirstResponse","serverInstance","handleEventData","trackedServersFound","isPrivateData","oob","sendingServerId","receivedStreamData","requestArguments","private","onDataHandlers","queuedData","handleSubscriptionCancelled","expectedNewLength","closers","getNextSubscriptionLocalKey","registerSubscription","server_id","drainSubscriptions","subsInfo","localKey","closeSubscription","closingServer","closersCount","closingServerId","ClientProtocol","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","meta","local","serverInfo","removedPeerId","removed_id","methodIdList","gW3ProtocolFactory","libConfig","readyPromise","existingSubscriptions_1","registeredMethods","registeredMethods_1","handleReconnect","protocolPromise","waitForMethod","MessageBus","publish","topic","routingKey","removeEmptyValues","routing_key","target_identity","response","watchOnEvent","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","GlueCore","userConfig","ext","gdVersion","preloadPromise","gdPreloadPromise","_interop","_contexts","_bus","_allowTrace","glueInitTimer","internalConfig","_e","nodeStartingContext","startingContextString","env","_GD_STARTING_CONTEXT_","_f","getApplication","uid","applicationConfig","instanceId","gwConfig","gateway","gwURL","uniqueAppName","appInstanceId","getConnection","windowAsAny","containerApplication","htmlContainer","containerName","bus","auth","gwToken","getAuth","gdConsoleLevel","defaultLevel","consoleLogLevel","getLogger","contexts","libs","customLogger","prepareConfig","registerLib","inner","initTime","initEndTime","initStartTime","setupInterop","initTimer","agmConfig","setupContexts","hasActivities","activities","setupBus","setupExternalLibs","externalLibs","createCallback","setupExternalLib","authPromise","authConfig","metricsPublishingEnabledFunc","getMetricsPublishingEnabled","libsReadyPromises","coreVersion","glue","feedback","feedbackInfo","agm","glueVer","glueConfig","browser","timing","initTimes","duration","extOptions","enrichGlue","updatePerfData","deprecatedDecorator","wrong","proper","agmAny","method_added","method_removed","server_added","server_method_aded","server_method_removed","_id","ActivityEntity","other","_updateCore","isNumber","arg","isString","isUndefined","isUndefinedOrNull","isNullOrWhiteSpace","test","isFunction","ifNotUndefined","doWithIt","ownerWindow","helperWindows","_ownerWindow","_helperWindows","ActivityType","hw","covertToWindowDef","_manager","initiate","windowType","appByWindowTypeGetter","_appByWindowTypeGetter","WindowType","getWindows","activity","isIndependent","createWindow","entitiy","entity","eventType","newStatus","oldStatus","EntityEventType","StatusChange","EntityEventContext","ActivityContextChange","ActivityState","_activity","ActivityAGM","_ensureHasAgm","AGM","util.isUndefinedOrNull","windows","w","methodNames","methodsForWindow","currentWindowMethod","activityServers","util.isString","potentialTargets","util.isArray","firstElem","_isInstance","_isActivityWindow","win","parameters","manager","ownerActivityId","_ownerActivityId","AttachedActivityDescriptor","ownerId","windowIds","frameColor","descriptor","detachActivities","nextTick","cb","nodeify","util.isFunction","resp","actType","_actType","_status","_context","_ownerId","_agm","Activity","getActivityType","addWindowToActivity","windowTypes","createStackedWindows","leaveWindowFromActivity","setActivityContext","updateActivityContext","subscribeActivityEvents","ns","os","subscribeWindowEvents","subscribeActivityContextChanged","act","stopActivity","attachActivities","subscribeActivitiesAttached","newActId","oldActId","subscribeActivitiesDetached","newAct","originalActivity","allStates","_attached","color","callbacksToWait","underlyingWindow","setFrameColor","LogLevel","GlueLogger","_glueLogger","owner","GetTypeName","Level","Trace","_getMessage","Debug","Info","Warn","object","exec","windowGetter","hcWindowId","Get","_type","_activityId","_instance","_isIndependent","_windowGetter","_hcWindowId","ActivityWindow","getWindowBounds","getWindowType","util.isUndefined","getActivityById","isVisible","setWindowVisibility","focus","activateWindow","bounds","setWindowBounds","closeWindow","_subscribeForActivityWindowEvent","ActivityWindowJoinedActivity","ActivityWindowLeftActivity","ActivityStatus","gwMmessageError","gwMessageAddActivityTypes","gwMessageActivityCreated","gwMessageActivityDestroyed","gwMessageActivityInitiated","gwMessageJoinedActivity","gwMessageActivityJoined","gwMessageActivityLeft","gwMessageOwnerChanged","gwMessageAddPeerFactories","gwMessagePeerFactoriesAdded","gwMessagePeerFactoriesRemoved","gwMessagePeerCreated","_config","_windows","_sessionJoinedPromise","_sessionJoinedPromiseResolve","_activityJoinedPromise","_activityJoinedPromiseResolve","glue42gd_1","addRefreshHandler","setGWToken","nameToWindowType","windowName","owner_type","helper_types","peer_type","owner_id","activity_type","EntityEvent","ActivityStatusChangeEventContext","forwardActivityTypeMessagesToStatusEventHandlers","handleActivityCreatedMessage","handleActivityDestroyedMessage","forwardActivityMessagesToStatusEventHandlers","forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers","forwardPeerFactoryMessagesToStatusEventHandlers","forwardPeerFactoryMessagesToPeerFactoryRequests","handlePeerFactoriesAdded","handlePeerFactoriesRemoved","forwardActivityWindowMessagesToEventHandlers","disposeRequestHandling","my","exit","mode","activity_types","typesToTrack","_activityTypeStatusChangeCallbacks","activityTypeName","toActivityPeerConfig","windowDefinition","activityType","activityTypeGwMessageEntityToActivityType","invokeCallbacks","Added","Removed","_windowTypeStatusChangeCallbacks","factory","_peerFactoriesRegisteredByUs","factories","peerFactoryGwMessageEntityToWindowType","factory_ids","_activityChangeCallbacks","initiateMsg","initial_context","isOverrideTypeDefinition","types_override","helpers","wd","sendCreateAndMapResultingMessagesToPromise","initMsg","_activityTypesInitiatedFromMe","fullReplace","removedKeys","removedKeys_1","activityWindowId","independent","shouldSendReady","activityInfo","_activityWindowChangeCallbacks","getAgmInstance","generateWindowGetter","layout","width","height","cellSize","joinPeer","joinActivity","peer_name","created_id","destroy_peer_id","announcementInfo","activityWindowType","activityWindowIndependent","activityWindowName","search","URLSearchParams","searchParams","maybeName","target_id","Updated","windowDefinitions","visible","cloneOptions","into","merge","newActivityInfo","addedMessageType","removedMessageType","mapper","getGetEntityEvent","isAdded","forwardMessageToEventHandler","getEntityEvent","ent","h","initiatedMessageType","initiatedMessageFilter","createdMessageFilter","cancelledMessageType","cancelledMessageFilter","createdMessageToPromiseResolution","listenForRecreates","resolveCreatedPromise","rejectCreatedPromise","initiatedSubscription","createdSubscription","cancelledSubscription","errorSubscription","reqId","getRandomRequestId","createdPromise","initiatedMessageAck","dropSubscriptions","dropSubscription","msg4","recreated","msg1","msg2","msg3","toReturn","factoryId","peerType","_peerIdAndFactoryIdToPeerType","_contextSubscriptions","subscribeToContext","ActivityContextChangedEventContext","unsubscribeContext","forwardAddedAndRemovedMessagesToEventHandler","activityCreatedMessage","participants","createdMessage","activityGwMessageToActivity","activityToActivityStatusChangeEvent","peerFactoryIdAndOwnerIdToWindowType","peer_factory","gateway_token","joinedMessage","joinedId","joined_id","joinedType","joined_type","joinedName","joined_name","left_id","list","_m","am","_subscribeMyContextChanged","_subscribeMyWindowEvent","_subscribeActivitiesAttached","_subscribeActivitiesDetached","onWindowFrameColorChanged","_subscribeWindowFrameColorChanged","ActivityMy","_w","announcedWindows","myWin","updateContext","setContext","_myActivityJoinedCallbacks","_myActivityRemovedCallbacks","_myContextUpdateCallbacks","_myAttached","_myDetached","_myAttachedTo","_myDetachedFrom","attached","getFrameColor","_myActivityFrameColorChanged","myActivity","_notifyMyContextChanged","_notifyMyWindowEvent","callbackStore","detached","_notifyAttachedTo","_notifyAttached","oldAct","_notifyDetached","_notifyDetachedFrom","signalsToWait","_signals","_callbacks","ReadyMarker","isSet","isError","_error","processNew","_processNew","EntityObservableCollection","items","_items","internalEntity","_updateInternalCollections","_notifyListeners","entityAddedHandler","getByName","_listeners","listener","entityAsAny","isActivityDestroy","Destroyed","isWindowClose","Closed","oldEntity","_beforeDelete","_update","bridge","autoAnnounce","_activityTypes","_grabEntity","_windowTypes","_activities","_dataReadyMarker","_descriptorsMarker","_readyMarker","setCallback","dataErr","announceWindow","_announcedWindows","signal","errCatch","refreshDescriptors","onActivitiesAttached","_handleActivitiesAttached","onActivitiesDetached","_handleActivitiesDetached","onActivityAttachedDescriptorsRefreshed","_handleActivityDescriptorsRefreshed","_handleWindowFrameColorChanged","_subscribeForData","initReady","aw","_getInitialData","ActivityManager","bridgeType","getError","ownerWindowType","helperWindowTypes","ownerDefinition","helperDefinitions","relativeTo","relativeDirection","windowStyleAttributes","registerActivityType","unregisterActivityType","initiateActivity","actId","getOrWait","at","factoryMethod","getName","registerWindowFactory","unregisterWindowFactory","array","predicate","util.some","getAnnouncementInfo","registerWindow","currentWindow","windowEventHandler_1","unsubscribeWindowEvents","wt","window_1","wrappingHandler","_windowHandlers","found","windowTypeOrConfiguration","relativeToWindow","invalidKeys_1","filteredWindowTypeOrConfiguration_1","wid","relativeWindowTypes","stackedWindow","tasks","leaveActivity","removedKey","cloneActivity","descriptors","_updateDescriptors","stateWrapped","u","_attachedCallbacks","_detachedCallbacks","_frameColorChangesCallbacks","getActivityTypes","getWindowTypes","getActivities","ac","getActivityWindows","onActivityTypeStatusChange","onWindowTypeStatusChange","onActivityWindowChange","onActivityStatusChange","descriptorAsObjectFromAPI","oldActivityId","newActivityId","getAttachedDescriptors","_my","activityTypes","_getActivityTypesWrapper","subscribeActivityTypeEvents","_getWindowTypesWrapper","registerFactory","unregisterFactory","subscribeWindowTypeEvents","announce","instances","ActivityManagementAPI","subscribeActivityFrameColorChanged","_mgr","ActivityAPI","aware","inActivity","logLevel","_isUsingHCImplementation","gdMajorVersion","_isUsingGW3Implementation","ActivityModule","checkIsUsingGW3Implementation","activityManager","disableAutoAnnounce","My","_api","_readyPromise","GetFunctionalEntitlementMethodName","CanIMethodName","OnEventMethodName","objectValues","objectClone","_appManager","CallbackRegistryFactory","onInstanceStarted","onInstanceStopped","onAppRemoved","app","onAppChanged","onAppAvailable","onAppUnavailable","ApplicationImpl","_props","Title","Version","AutoStart","IsShell","Caption","IsHidden","ApplicationName","ActivityWindowType","Arguments","AllowMultiple","IsReady","Icon","IconUrl","SortOrder","UserProperties","autoStart","caption","hidden","container","allowMultiple","Type","Mode","isActivity","styleAttributes","WindowStyleAttributes","searchFor","modeIndex","startModeIndex","stopModeIndex","style","props","Name","waitForAGMInstance","waitForAGMReady","Context","Options","acsResult","Instance_0","Id","handleInstanceStarted","unsub","check","filtered","isActivityInstance","waitFunc","onInstanceAgmServerReady","waitForApplicationInstance","_appName","startFailed","_addToRegistry","_unsubscribeInstanceStopped","_unsubscribeInstanceAgmServerReady","InstanceImpl","activityInstance","_isActivityOwner","activityInstances","inst","isActivityOwner","activityOwnerInstance","_startUpContext","_title","_isActivityInstance","_inActivity","_agmInstance","onWindowAdded","ActivityId","IsActivityOwner","updateAgmInstanceFromProps","AgmServers","GD3","agmInstances","gdAgmServers","propsAgmServer","propsAgm","machineName","userName","handleInstanceStopped","_gdMajorVersion","_apps","_instances","instanceId_1","_getAppId","_updateAppFromProps","_getAppOrThrow","updateFromProps","available","_getInstanceId","_getInstanceAppName","_updateInstanceFromProps","_getInstanceOrThrow","_matchInstance","AppManagerImpl","_getInstanceByIdAndName","_agmInvoke","Region","Branches","Branch","ResultMessage","funct","AgmNames.GetFunctionalEntitlementMethodName","Entitlement","Function","func","AgmNames.CanIMethodName","Result","registerMethod","transformFunction","EntitlementsImpl","_isMethodRegistered","InMemoryStoreCommandMethodName","InMemoryStore","apps","url","details","START_ONLY","SKIP_ICONS","appManager","entitlements","skipIcon","applications","handleAppAdded","snapshot","skipIcons","start","resolveFunc","rejectFunc","resultPromise","AgmNames.OnEventMethodName","streamData","events","handleAppUpdated","handleAppRemoved","handleAppReady","handleInstanceStartFailed","handleInstanceUpdated","handleInstanceAgmServerReady","handleBranchModified","handleBranchesModified","subscriptionFactory","onAppAdded","myInstance","getMyInstance","onInstanceUpdated","onInstanceStartFailed","getRegion","getBranches","getCurrentBranch","getFunctionalEntitlement","getFunctionalEntitlementBranch","setCurrentBranch","setRegion","currentUser","canI","canIBranch","onBranchesChanged","restart","onShuttingDown","inMemory","CallbackFactory","WindowStore","_pendingWindows","remote","_pendingWindowsStates","urlChanged","targetWindowState","markReadyToShow","waitForTimeoutInMilliseconds","onReadyWindow","fail","displays","monitor","totalOverlap","calculateTotalOverlap","display","max","workingAreaWidth","workingAreaHeight","r1","r2","r1x","r1y","r1xMax","r1yMax","r2x","r2y","r2xMax","r2yMax","min","appManagerGetter","displayAPIGetter","resultWindow","_group","_mode","_bounds","_url","_frameColor","_focus","_neighbours","neighbours","_groupId","groupId","_isGroupHeaderVisible","isGroupHeaderVisible","_isTabHeaderVisible","isTabHeaderVisible","_isTabSelected","isTabSelected","_settings","_isVisible","_isSticky","isSticky","_isCollapsed","isCollapsed","_windowState","_tabGroupId","tabGroupId","_tabIndex","tabIndex","_isLocked","isLocked","_frameButtons","_zoomFactor","zoomFactor","_placementSettings","placementSettings","moveResize","utils","callbackifyPromise","setVisible","toBeVisible","onGroupChanged","onEventCore","replayArguments","getNeighboursByDirection","direction","winId","windowStore","getApplicationName","_APPLICATION_NAME","_t42","getWindowInfo","hostInstance","agmInstance","frameButtons","minHeight","maxHeight","minWidth","maxWidth","isFocused","opened","group","topNeighbours","leftNeighbours","rightNeighbours","bottomNeighbours","screen","getMonitor","monitors","maximize","restore","minimize","maximizeRestore","collapse","expand","toggleCollapse","activate","setTitle","newTitle","setStyle","styleAsAny","util.isNumber","setOnTop","onTop","resetButtons","buttons","setSizeConstraints","constraints","navigate","newUrl","util.isNullOrWhiteSpace","addFrameButton","buttonInfo","buttonId","imageBase64","removeFrameButton","show","hide","center","getDisplayCenterOfScreen","snap","showLoader","loader","hideLoader","lock","unlock","getIcon","setIcon","base64Image","setTabTooltip","tooltip","attachTab","tab","opt","sourceWindow","attachOptions","selected","detachTab","argsForSend","hideTabHeader","setTabHeaderVisible","toBeTabHeaderVisible","showPopup","createFlydown","setModalState","isModal","setZoomFactor","zoomIn","zoomOut","showDevTools","capture","captureOptions","flash","suppliedOptions","flashOptions","shouldFlash","setSticky","print","printOptions","printToPDF","printToPDFOptions","place","ungroup","ungroupOptions","unGroupChanged","newGroup","oldGroup","ignoreCache","configure","configureWindow","onClose","onUrlChanged","onTitleChanged","onFrameButtonAdded","onFrameButtonRemoved","onFrameButtonClicked","onCollapsed","onExpanded","onMinimized","onMaximized","onNormal","onAttached","onDetached","onVisibilityChanged","onContextUpdated","onLockingChanged","onBoundsChanged","onFrameColorChanged","onFocusChanged","onStickyChanged","onWindowAttached","onWindowDetached","onTabSelectionChanged","onTabHeaderVisibilityChanged","onClosing","onRefreshing","prevent","onZoomFactorChanged","onPlacementSettingsChanged","onNeighboursChanged","tabs","allWindows","w1","w2","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getURL","getTitle","getBounds","getContext","getDisplay","getByWindowId","resizeTo","moveTo","getParentWindow","myParentId","parentInstanceId","getChildWindows","Events","handleUpdate","handleWindowClose","handleWindowChangeState","finished","handleTitleChanged","finally","handleVisibilityChanged","handleUrlChanged","handleWindowSettingsChanged","handleContextUpdated","handleFrameIsLockedChanged","handleBoundsChanged","handleFocusChanged","handleFrameButtonAdded","frameButton","buttonObj","btn","handleFrameButtonRemoved","frameButtonId","button","handleFrameButtonClicked","handleFrameColorChanged","handleFrameAttached","handleFrameSelectionChanged","newWindow","prevWindow","selectedWindow","previousWindow","handleCompositionChanged","neighbors","handleGroupHeaderVisibilityChanged","handleTabHeaderVisibilityChanged","handleGroupChanged","handleAttached","newTabGroupId","tabHeaderVisible","winsToBeNotified","handleWindowAttached","handleDetached","handleWindowDetached","handleZoomFactorChanged","handleIsStickyChanged","handlePlacementSettingsChanged","copy","displayAPI_1","index_1","randomByte","encode","build","require$$0","GDExecutor","agmTarget","_finished","finishedResolve","waitFor","win_1","stylePromises","wait","tabTooltip","tabToolTip","toolTip","tabTitle","allowClose","allowCollapse","allowLockUnlock","allowMaximize","allowMinimize","buttonsConfig","versionNum","rej","resolveImmediately","areBoundsEqual","unsubscribeBoundsChanged","resolveTimeout","error_2","targetWindow","targetWindowId","snappingEdge","sourceWindowId","eventKeys","contextWithoutUndefinedValues","swapUndefinedToNull","replace","icon","dataURL","toShow","optionsCopy","targetLocation","reformatedOptions","popupBounds","size","targetId","popupId","horizontalOffset","verticalOffset","fullOptions","reformatFlydownOptions","zoneIds","zones","z","flydownSize","cancel","clearFlydownArea","cancelCallback","callbackData","zoneId","flydownId","flydownWindowBounds","flydownWindowId","responses","defaultResponse","groupWindowIds","filePath","executeWithoutToken","executeWithToken","addCloseHandler","assignGeneralIfUnassigned","zone","valueFromOptions","flydownBounds","flydownActiveArea","activeArea","areaIds","uns","executed","token_1","event_1","requested","areHeightsEqual","areWidthsEqual","areLeftsEqual","areTopsEqual","getWindowsByTabGroupId","wndId","normalizeInstance","_windowId","_appManagerGetter","_displayAPIGetter","GDEnvironment","caller","respondToEvent","streamResolve","streamReject","_waitTimeout","updateWindow","handleEvent","copyOptions","windowState","handleFlydownBoundsRequested","windowInfo","readyResolve","extendedStreamEvent","getExtendedStreamEvent","existingWindow","mapToWindowConstructorOptions","windowInfoCreatedEvent","setReadyState","windowObjectAndEvents","theWindow","theWindowEvents","windowInfoBoundsChangedEvent","windowInfoUrlChangedEvent","setUrlChangedState","windowInfoTitleChanged","windowInfoIsStickyChangedChanged","windowInfoCompositionChanged","groupHeaderVisible","windowInfoFocusChanged","focusChanged","frameId","winsToBeNotified_1","oldTabGroupId","winsToBeNotified_2","newWindowId","prevWindowId","windowObjAndEvents","windowFactory","isActiveTab","streamEvent","charAt","toUpperCase","callbackRegistry","_windowsId","groupObject","_mapToWindowObjects","winObjects","windowObject","_mapToWindowObject","mappedWindows","isHeaderVisible","showHeader","hideHeader","captureGroup","onHeaderVisibilityChanged","onWindowRemoved","groupAPI","groupInternal","addWindow","removeWindow","_groups","heardForWindowsCounter","findGroupByWindow","groupObj","createdGroup","groupFactory","createOrGet","deleteIfEmpty","findGroupWrapperByWindow","onRemoved","onCompositionChanged","currentGroup","fromGroup","toGroup","moveWindow","onGroupHeaderVisibilityChanged","groupEvents","groupsAPI","groupsEvents","onWindowMoved","groups","isReady","GD","gdPromise","envDetector","groupsFactory","myWindow","getIfReady","windowAdded","windowRemoved","optionsAsAny","errMessage","windowsForListing","findById","onTabAttached","unsubFunc","unsubscribed","tabAttached","onTabDetached","tabDetached","onWindowGotFocus","onWindowLostFocus","onEvent","LayoutStore","condition","layouts","where","activitiesGetter","registerRequestMethods","ContextProvider","context_1","activityIsOwner","usersCbs","requestResult","autoSaveWindowContext","windowContext","activityContext","transformACSLayout","something","accumulator","convertedValue","components","activityGetter","LayoutsAPIImpl","isSlimMode","l","gotSnapshot","verifyNotSlimMode","ignoreHidden","layoutObject","actIds","appIds","ignoreLayoutRestrictions","isVisibleWindow","ignoreMyInstance","autoCollectApps","invokeMethodAndTrack","activityIdToJoin","restoreActivityOwner","ignoreActivityWindowTypes","closeRunningInstance","reuseWindows","t42","restoreOptions","activityToJoin","closeOldWindows","reuseExistingWindows","toClose","splash","getInstancesToClose","store","layoutType","getObjectValues","Layouts","LayoutImpl","newName","oldName","onSaveRequested","skipStreamEvent","agmResult","streamEventReceived","handleResult","shellApp","isShell","shellApplicationName","resolveReady","rejectReady","resolveGotSnapshot","rejectGotSnapshot","ACSStream","noRetry","transform","checkForLayoutEventMethod","IsSnapshot","addLayouts","OnLayoutAdded","removeLayouts","OnLayoutRemoved","changeLayouts","OnLayoutChanged","renameLayouts","OnLayoutRenamed","restoredLayout","OnLayoutRestored","Token","layoutsData","layoutData","removedLayouts","removedLayout","removeWhere","existingLayout","compareLayouts","changedLayouts","changedLayout","renamedLayouts","renamedLayout","first","layout1","layout2","restoredLayouts","acsStream","DisplayCommand","callGD","GetAll","decorateDisplay","isPrimary","Capture","CaptureAll","GetMousePosition","original","DisplayManager","GetByWindowId","switchChannel","channel","swId","newChannel","CONTEXT_PREFIX","SharedContextSubscriber","isChannel","createContextName","___","startsWith","channelContextName","channelName","shared","initialChannel","joinNoSelectorSwitch","ChannelsImpl","subsKey","subscribeFor","updateData","channelNames","getContextData","joinCore","leaveCore","changedKey","changed","updateChannel","getWindowsWithChannels","channels","windows_1","er_1","changeSelector","isInitialJoin","doesChannelExist","intervalId","sharedContexts","interopLib","leaveNoSelectorSwitch","setupAGM","onChanged","getWindowsOnChannel","getMy","CommandMethod","HotkeysImpl","hotkey","hkToLower","formatHotkey","hotkeys","firstHotkey","registerInvokeAGMMethod","delete","getLibConfig","defaultMode","trueMode","getModeAsString","actions","badge","dir","image","lang","renotify","requireInteraction","silent","Glue42Notification","PanelAPI","panel","Notifications","methodsRegistered","bunchOfPromises","maxActions","methodNameRoot","handleNotificationAction","notification","severity","glueRoutingDetailMethodName","sourceId","validActions","g42notificationId","g42action","g42interopMethod","g42interopTarget","stringValue","glueAction","validActions_1","attributes","dataAsString","g42notification","notifications","payload_1","Event","onaction","actionInterop","dispatchEvent","sourceNotificationId","event_2","onclick","clickInterop","core","getConfiguration","ThemesImpl","getMethodName","getAll","theme","setMethodName","sharedContextName","getThemesMethodName","setThemesMethodName","isSubscribed","initInfo","GLUE42_FDC3_INTENTS_METHOD_PREFIX","Intents","intentFilter","intents","intent","contextType","ctToLower_1","contextTypes","ct","intentName","intentDef","isDynamicIntent","intentDefHandler","anAppHandler","intentHandler","anInstanceHandler","startApp","raiseIntentToInstance","withIntentsInfo","appsWithIntents","appsWithIntents_1","applicationTitle","applicationDescription","applicationIcon","serverWindowIds","serverWindowId","T42WndGetInfo","windowsInfos","appWithIntents","appIntent","appDefIntent","windowsIdToTitle","instanceTitle","servers_1","intentFlag","registeredIntent","interopServer","registeredMethod","addedMethod","windowsInfo","numberOfCalls","InitInfo","Prefs","getPromise","factoryCore","createWindows","windowsLogger","getLibLogger","debugLog","WindowsFactory","_displays","createActivities","activityLogger","createAppManager","AppManagerFactory","createLayouts","layoutsConfig","lay","LayoutsFactory","createChannels","channelsAPI","createHotkeys","hotkeysAPI","unregisterAll","isRegistered","createIntents","intentsAPI","createNotifications","notificationsAPI","createDisplaysApi","displaysLogger","createThemes","themesAPI","themes","getCurrent","select","createPrefs","prefs","newLogger","loggerConfig","currentLog","glueFactoryLog","CoreFactory","glueApi","libraries","whatToExpose","CreateGlue","shouldSetToWindow","autoInjected","Glue"],"mappings":"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"}