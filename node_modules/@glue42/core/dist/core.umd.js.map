{"version":3,"file":"core.umd.js","sources":["../src/metrics/const/metric-types.ts","../src/metrics/protocols/gw3/serializer.ts","../src/metrics/protocols/gw3/gw3.ts","../src/metrics/helpers.ts","../src/metrics/metrics/base.ts","../src/metrics/metrics/number.ts","../src/metrics/metrics/object.ts","../src/metrics/metrics/string.ts","../src/metrics/metrics/timestamp.ts","../src/metrics/system.ts","../src/metrics/repository.ts","../src/metrics/protocols/null/null.ts","../src/metrics/pertTracker.ts","../src/metrics/main.ts","../node_modules/callback-registry/lib/index.js","../src/connection/transports/inProc.ts","../src/connection/transports/worker.ts","../src/utils/utils.ts","../src/utils/pw.ts","../src/utils/timer.ts","../src/connection/transports/ws.ts","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/encode.js","../node_modules/shortid/lib/decode.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../src/connection/protocols/gw3Domain.ts","../src/connection/protocols/gw3.ts","../src/connection/replayer.ts","../src/utils/promise-plus.ts","../src/connection/transports/webPlatform.ts","../src/connection/connection.ts","../src/logger/logger.ts","../src/contexts/bridges/gw3/messages.ts","../src/contexts/contextMessageReplaySpec.ts","../src/config.ts","../src/contexts/bridges/gw3/contextData.ts","../src/contexts/helpers.ts","../src/contexts/bridges/gw3/bridge.ts","../src/contexts/contextsModule.ts","../src/interop/helpers/promisify.ts","../src/interop/helpers/promiseHelpers.ts","../src/interop/client/client.ts","../src/interop/server/subscription.ts","../src/interop/server/request.ts","../src/interop/server/streaming.ts","../src/interop/server/branch.ts","../src/interop/server/stream.ts","../src/interop/server/server.ts","../src/interop/instance.ts","../src/interop/client/repository.ts","../src/interop/server/repository.ts","../src/interop/protocols/gw3/server-streaming.ts","../src/interop/protocols/gw3/server.ts","../src/interop/protocols/gw3/subscription.ts","../src/interop/protocols/gw3/client-streaming.ts","../src/interop/protocols/gw3/client.ts","../src/interop/protocols/gw3/factory.ts","../src/interop/interop.ts","../src/bus/main.ts","../src/index.ts"],"sourcesContent":["export default {\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    TIMESTAMP: 3,\r\n    OBJECT: 4\r\n};\r\n","import { Glue42Core } from \"../../../../glue\";\r\nimport MetricTypes from \"../../const/metric-types\";\r\n\r\nfunction getMetricTypeByValue(metric: Glue42Core.Metrics.Metric): string {\r\n\r\n    if (metric.type === MetricTypes.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    } else if (metric.type === MetricTypes.NUMBER) {\r\n        return \"number\";\r\n    } else if (metric.type === MetricTypes.STRING) {\r\n        return \"string\";\r\n    } else if (metric.type === MetricTypes.OBJECT) {\r\n        return \"object\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n\r\nfunction getTypeByValue(value: any): string {\r\n\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    } else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    } else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    } else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    } else {\r\n        return \"string\";\r\n    }\r\n}\r\n\r\nfunction serializeMetric(metric: Glue42Core.Metrics.Metric): any {\r\n\r\n    const serializedMetrics: any = {};\r\n    const type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        const values = Object.keys(metric.value).reduce((memo: any, key: any) => {\r\n            const innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                const composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite,\r\n                };\r\n            } else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n\r\n            return memo;\r\n        }, {});\r\n\r\n        serializedMetrics.composite = values;\r\n    }\r\n\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n\r\n    return serializedMetrics;\r\n}\r\n\r\nfunction defineNestedComposite(values: any): any {\r\n    return Object.keys(values).reduce((memo: any, key: any) => {\r\n        const type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        } else {\r\n            memo[key] = {\r\n                type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n\r\n        return memo;\r\n    }, {});\r\n}\r\n\r\nfunction normalizeMetricName(name: string): string {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    } else {\r\n        return name;\r\n    }\r\n}\r\n\r\nfunction getMetricValueByType(metric: Glue42Core.Metrics.Metric) {\r\n    const type: string = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    } else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\n\r\nfunction publishNestedComposite(values: any) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce((memo: any, key: any) => {\r\n        const value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        } else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        } else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        } else {\r\n            memo[key] = value;\r\n        }\r\n\r\n        return memo;\r\n    }, {});\r\n}\r\n\r\nfunction flatten(arr: any[]): Glue42Core.Metrics.SystemStateInfo[] {\r\n    return arr.reduce((flat: Glue42Core.Metrics.SystemStateInfo[], toFlatten: Glue42Core.Metrics.SystemStateInfo | Glue42Core.Metrics.SystemStateInfo[]): Glue42Core.Metrics.SystemStateInfo[] => {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\n\r\nfunction getHighestState(arr: Glue42Core.Metrics.SystemStateInfo[]): Glue42Core.Metrics.SystemStateInfo {\r\n    return arr.sort((a, b) => {\r\n        if (!a.state) { return 1; }\r\n        if (!b.state) { return -1; }\r\n\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\n\r\nfunction aggregateDescription(arr: Glue42Core.Metrics.SystemStateInfo[]): string {\r\n    let msg = \"\";\r\n    arr.forEach((m: any, idx: number, a: any[]) => {\r\n        const path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        } else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    } else {\r\n        return msg;\r\n    }\r\n}\r\n\r\nfunction composeMsgForRootStateMetric(system: Glue42Core.Metrics.System): any {\r\n    const aggregatedState: Glue42Core.Metrics.SystemStateInfo[] = system.root.getAggregateState();\r\n    const merged = flatten(aggregatedState);\r\n    const highestState = getHighestState(merged);\r\n    const aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\r\n\r\nexport { normalizeMetricName, serializeMetric, getMetricValueByType, composeMsgForRootStateMetric };\r\n","import { Glue42Core } from \"../../../../glue\";\r\nimport { Protocol, MetricsSettings } from \"../../types\";\r\nimport { composeMsgForRootStateMetric, getMetricValueByType, normalizeMetricName, serializeMetric } from \"./serializer\";\r\nimport Connection from \"../../../connection/connection\";\r\n\r\nexport default function (connection: Connection, config: MetricsSettings): Protocol {\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n\r\n    let joinPromise: Promise<any>;\r\n    let session: Glue42Core.Connection.GW3DomainSession;\r\n\r\n    const init = (repo: Glue42Core.Metrics.Repository): void => {\r\n        let resolveReadyPromise: (() => void) | undefined;\r\n        joinPromise = new Promise((resolve) => {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n\r\n        session = connection.domain(\"metrics\");\r\n\r\n        session.onJoined((reconnect) => {\r\n            if (!reconnect && resolveReadyPromise) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n\r\n            // Creating root state metric\r\n            const rootStateMetric: any = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n\r\n            const defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n\r\n            session.send(defineRootMetricsMsg);\r\n\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n\r\n        });\r\n\r\n        session.join({\r\n            system: config.system,\r\n            service: config.service,\r\n            instance: config.instance\r\n        });\r\n    };\r\n\r\n    const replayRepo = (repo: Glue42Core.Metrics.Repository) => {\r\n        replaySystem(repo.root);\r\n    };\r\n\r\n    const replaySystem = (system: Glue42Core.Metrics.System) => {\r\n        // replay system\r\n        createSystem(system);\r\n\r\n        // replay all metrics in the system\r\n        system.metrics.forEach((m) => {\r\n            createMetric(m);\r\n        });\r\n\r\n        // replay all sub-systems\r\n        system.subSystems.forEach((ss) => {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n\r\n    const createSystem = async (system: Glue42Core.Metrics.System): Promise<void> => {\r\n        if (system.parent === undefined) {\r\n            return;\r\n        }\r\n\r\n        await joinPromise;\r\n        const metric = {\r\n            name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n            type: \"object\",\r\n            composite: {\r\n                Description: {\r\n                    type: \"string\",\r\n                    description: \"\",\r\n                },\r\n                Value: {\r\n                    type: \"number\",\r\n                    description: \"\",\r\n                },\r\n            },\r\n            description: \"System state\",\r\n            context: {},\r\n        };\r\n\r\n        const createMetricsMsg = {\r\n            type: \"define\",\r\n            metrics: [metric],\r\n        };\r\n\r\n        session.send(createMetricsMsg);\r\n    };\r\n\r\n    const updateSystem = async (system: Glue42Core.Metrics.System, state: Glue42Core.Metrics.State): Promise<void> => {\r\n        await joinPromise;\r\n\r\n        const shadowedUpdateMetric = {\r\n            type: \"publish\",\r\n            values: [{\r\n                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                value: {\r\n                    Description: state.description,\r\n                    Value: state.state,\r\n                },\r\n                timestamp: Date.now(),\r\n            }],\r\n        };\r\n\r\n        session.send(shadowedUpdateMetric);\r\n\r\n        const stateObj = composeMsgForRootStateMetric(system);\r\n        const rootMetric = {\r\n            type: \"publish\",\r\n            peer_id: connection.peerId,\r\n            values: [{\r\n                name: \"/State\",\r\n                value: {\r\n                    Description: stateObj.description,\r\n                    Value: stateObj.value,\r\n                },\r\n                timestamp: Date.now(),\r\n            }],\r\n        };\r\n\r\n        session.send(rootMetric);\r\n    };\r\n\r\n    const createMetric = async (metric: Glue42Core.Metrics.Metric): Promise<void> => {\r\n        const metricClone = cloneMetric(metric);\r\n        await joinPromise;\r\n        const m = serializeMetric(metricClone);\r\n\r\n        const createMetricsMsg = {\r\n            type: \"define\",\r\n            metrics: [m],\r\n        };\r\n\r\n        session.send(createMetricsMsg);\r\n        if (typeof metricClone.value !== \"undefined\") {\r\n            // do not use updateMetric because it will dispatch the call (joinPromise.then)\r\n            // which leads to method calls reorder. It is safe to call updateMetricCore directly\r\n            // because we are being executed in joinPromise.then\r\n            updateMetricCore(metricClone);\r\n        }\r\n    };\r\n\r\n    const updateMetric = async (metric: Glue42Core.Metrics.Metric): Promise<void> => {\r\n        const metricClone = cloneMetric(metric);\r\n        await joinPromise;\r\n        updateMetricCore(metricClone);\r\n    };\r\n\r\n    const updateMetricCore = (metric: Glue42Core.Metrics.Metric): Promise<void> => {\r\n        if (canUpdate()) {\r\n            const value = getMetricValueByType(metric);\r\n            const publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                    name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                    value,\r\n                    timestamp: Date.now(),\r\n                }],\r\n            };\r\n            return session.sendFireAndForget(publishMetricsMsg);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const cloneMetric = (metric: Glue42Core.Metrics.Metric): Glue42Core.Metrics.Metric => {\r\n        const metricClone: Glue42Core.Metrics.Metric = { ...metric };\r\n        if (typeof metric.value === \"object\" && metric.value !== null) {\r\n            metricClone.value = { ...metric.value };\r\n        }\r\n        return metricClone;\r\n    };\r\n\r\n    const canUpdate = (): boolean => {\r\n        try {\r\n            const func = config.canUpdateMetric ?? (() => true);\r\n            return func();\r\n        } catch {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    return {\r\n        init,\r\n        createSystem,\r\n        updateSystem,\r\n        createMetric,\r\n        updateMetric,\r\n    };\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport { Protocol } from \"./types\";\r\n\r\nexport default {\r\n    validate: (definition: Glue42Core.Metrics.MetricDefinition, parent: Glue42Core.Metrics.System, transport: Protocol) => {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport Helpers from \"../helpers\";\r\nimport { Protocol } from \"../types\";\r\n\r\nexport class BaseMetric<T> implements Glue42Core.Metrics.Metric {\r\n    public readonly path: string[] = [];\r\n    public readonly name: string;\r\n    public readonly description: string | undefined;\r\n\r\n    public get repo() {\r\n        return this.system?.repo;\r\n    }\r\n\r\n    public get id() { return `${this.system.path}/${name}`; }\r\n\r\n    constructor(public definition: Glue42Core.Metrics.MetricDefinition, public system: Glue42Core.Metrics.System, protected transport: Protocol, public value: T, public type: number) {\r\n        Helpers.validate(definition, system, transport);\r\n\r\n        this.path = system.path.slice(0);\r\n        this.path.push(system.name);\r\n\r\n        this.name = definition.name;\r\n        this.description = definition.description;\r\n\r\n        transport.createMetric(this);\r\n    }\r\n\r\n    public update(newValue: T): Promise<void> {\r\n        this.value = newValue;\r\n        return this.transport.updateMetric(this);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport { Protocol } from \"../types\";\r\nimport { BaseMetric } from \"./base\";\r\nimport metricTypes from \"../const/metric-types\";\r\n\r\nexport class NumberMetric extends BaseMetric<number> implements Glue42Core.Metrics.NumberMetric {\r\n\r\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: number) {\r\n        super(definition, system, transport, value, metricTypes.NUMBER);\r\n    }\r\n\r\n    public incrementBy(num: number): void {\r\n        this.update(this.value + num);\r\n    }\r\n\r\n    public increment(): void {\r\n        this.incrementBy(1);\r\n    }\r\n\r\n    public decrement(): void {\r\n        this.incrementBy(-1);\r\n    }\r\n\r\n    public decrementBy(num: number): void {\r\n        this.incrementBy(num * -1);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport { Protocol } from \"../types\";\r\nimport { BaseMetric } from \"./base\";\r\nimport metricTypes from \"../const/metric-types\";\r\n\r\nexport class ObjectMetric extends BaseMetric<object> implements Glue42Core.Metrics.ObjectMetric {\r\n\r\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: object) {\r\n        super(definition, system, transport, value, metricTypes.OBJECT);\r\n    }\r\n\r\n    public update(newValue: object): Promise<void> {\r\n        this.mergeValues(newValue);\r\n        return this.transport.updateMetric(this);\r\n    }\r\n\r\n    private mergeValues(values: any) {\r\n        return Object.keys(this.value).forEach((k) => {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                (this.value as any)[k] = values[k];\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport { Protocol } from \"../types\";\r\nimport { BaseMetric } from \"./base\";\r\nimport metricTypes from \"../const/metric-types\";\r\n\r\nexport class StringMetric extends BaseMetric<string> implements Glue42Core.Metrics.StringMetric {\r\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: string) {\r\n        super(definition, system, transport, value, metricTypes.STRING);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport { Protocol } from \"../types\";\r\nimport { BaseMetric } from \"./base\";\r\nimport metricTypes from \"../const/metric-types\";\r\n\r\nexport class TimestampMetric extends BaseMetric<Date> implements Glue42Core.Metrics.TimestampMetric {\r\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: Date) {\r\n        super(definition, system, transport, value, metricTypes.TIMESTAMP);\r\n    }\r\n\r\n    public now(): void {\r\n        this.update(new Date());\r\n    }\r\n}\r\n","import { NumberMetric } from \"./metrics/number\";\r\nimport { ObjectMetric } from \"./metrics/object\";\r\nimport { StringMetric } from \"./metrics/string\";\r\nimport { TimestampMetric } from \"./metrics/timestamp\";\r\n\r\nimport { Glue42Core } from \"./../../glue\";\r\nimport MetricTypes from \"./const/metric-types\";\r\nimport { Protocol } from \"./types\";\r\n\r\nexport default function system(name: string, repo: Glue42Core.Metrics.Repository, protocol: Protocol, parent?: Glue42Core.Metrics.System, description?: any): Glue42Core.Metrics.System {\r\n    // Validation\r\n    // if (!name) throw new Error(\"Name is required. \");\r\n\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n\r\n    const _transport: Protocol = protocol;\r\n\r\n    const _name: string = name;\r\n    const _description: string = description || \"\";\r\n    const _repo: Glue42Core.Metrics.Repository = repo;\r\n    const _parent: Glue42Core.Metrics.System | undefined = parent;\r\n    const _path: string[] = _buildPath(parent);\r\n    let _state: Glue42Core.Metrics.State = {};\r\n\r\n    const id: string = _arrayToString(_path, \"/\") + name;\r\n    const root: Glue42Core.Metrics.System = repo.root;\r\n    const _subSystems: Glue42Core.Metrics.System[] = [];\r\n    const _metrics: Glue42Core.Metrics.Metric[] = [];\r\n\r\n    function subSystem(nameSystem: string, descriptionSystem?: string): Glue42Core.Metrics.System {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n\r\n        const match: Glue42Core.Metrics.System[] = _subSystems.filter((s) => s.name === nameSystem);\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n\r\n        const _system: Glue42Core.Metrics.System = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n\r\n    function setState(state: number, stateDescription?: string): void {\r\n        _state = { state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n\r\n    function stringMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: string): Glue42Core.Metrics.StringMetric {\r\n        return _getOrCreateMetric<StringMetric>(definition, MetricTypes.STRING, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new StringMetric(metricDef, me, _transport, value));\r\n    }\r\n\r\n    function numberMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: number): Glue42Core.Metrics.NumberMetric {\r\n        return _getOrCreateMetric<NumberMetric>(definition, MetricTypes.NUMBER, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new NumberMetric(metricDef, me, _transport, value));\r\n    }\r\n\r\n    function objectMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: any): Glue42Core.Metrics.ObjectMetric {\r\n        return _getOrCreateMetric<ObjectMetric>(definition, MetricTypes.OBJECT, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new ObjectMetric(metricDef, me, _transport, value));\r\n    }\r\n\r\n    function timestampMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: any): Glue42Core.Metrics.TimestampMetric {\r\n        return _getOrCreateMetric<TimestampMetric>(definition, MetricTypes.TIMESTAMP, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new TimestampMetric(metricDef, me, _transport, value));\r\n    }\r\n\r\n    function _getOrCreateMetric<T extends Glue42Core.Metrics.Metric>(metricObject: Glue42Core.Metrics.MetricDefinition | string, expectedType: number, value: any, createMetric: (metricDef: Glue42Core.Metrics.MetricDefinition, me?: Glue42Core.Metrics.System, _transport?: Protocol, value?: any) => T): T {\r\n        let metricDef = { name: \"\" };\r\n        if (typeof metricObject === \"string\") {\r\n            metricDef = { name: metricObject };\r\n        } else {\r\n            metricDef = metricObject;\r\n        }\r\n        const matching: Glue42Core.Metrics.Metric[] = _metrics.filter((shadowedMetric) => shadowedMetric.name === metricDef.name);\r\n\r\n        if (matching.length > 0) {\r\n            const existing: Glue42Core.Metrics.Metric = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                // NOTE: Extend the error with the already defined metric?\r\n                throw new Error(`A metric named ${metricDef.name} is already defined with different type.`);\r\n            }\r\n\r\n            if (typeof value !== \"undefined\") {\r\n                existing\r\n                    .update(value)\r\n                    .catch(() => { /** swallow */});\r\n            }\r\n\r\n            return existing as T;\r\n        }\r\n\r\n        const metric: T = createMetric(metricDef);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n\r\n    function _buildPath(shadowedSystem?: Glue42Core.Metrics.System): string[] {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n\r\n        const path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n\r\n    function _arrayToString(path: string[], separator: string) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n\r\n    function getAggregateState(): Glue42Core.Metrics.SystemStateInfo[] {\r\n        const aggState: Glue42Core.Metrics.SystemStateInfo[] = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n\r\n        _subSystems.forEach((shadowedSubSystem) => {\r\n            const result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push(...result);\r\n            }\r\n        });\r\n\r\n        return aggState;\r\n    }\r\n\r\n    const me: Glue42Core.Metrics.System = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n\r\n        get description() {\r\n            return _description;\r\n        },\r\n\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id,\r\n        root,\r\n\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem,\r\n        getState: () => {\r\n            return _state;\r\n        },\r\n        setState,\r\n        stringMetric,\r\n        timestampMetric,\r\n        objectMetric,\r\n        numberMetric,\r\n        getAggregateState,\r\n    };\r\n\r\n    _transport.createSystem(me);\r\n\r\n    return me;\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport system from \"./system\";\r\nimport { MetricsSettings, Protocol } from \"./types\";\r\n\r\nexport class Repository implements Glue42Core.Metrics.Repository {\r\n    public root: Glue42Core.Metrics.System;\r\n\r\n    constructor(options: MetricsSettings, protocol: Protocol) {\r\n        protocol.init(this);\r\n        this.root = system(\"\", this, protocol);\r\n\r\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\r\n    }\r\n\r\n    private addSystemMetrics(rootSystem: Glue42Core.Metrics.System, useClickStream: any) {\r\n        // Create some system metrics\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            const clickStream: Glue42Core.Metrics.System = rootSystem.subSystem(\"ClickStream\");\r\n\r\n            const documentClickHandler = (e: Event) => {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                const target = e.target as HTMLAnchorElement;\r\n                clickStream.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n\r\n            // Create click stream record\r\n            clickStream.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            } else {\r\n                // For IE versions prior to IE9, attachEvent method should be used to register the specified listener\r\n                // to the EventTarget it is called on, for others addEventListener should be used.\r\n                // (<any>document)\r\n                (document as any).attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n\r\n        const startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        const urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        const appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                const startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Protocol } from \"../../types\";\r\nimport { Glue42Core } from \"../../../../glue\";\r\n\r\nexport class NullProtocol implements Protocol {\r\n    public init(repo: Glue42Core.Metrics.Repository): void {\r\n        // do nothing\r\n    }\r\n\r\n    public createSystem(system: Glue42Core.Metrics.System): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public updateSystem(metric: Glue42Core.Metrics.System, state: Glue42Core.Metrics.State): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public createMetric(metric: Glue42Core.Metrics.Metric): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public updateMetric(metric: Glue42Core.Metrics.Metric): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport { count } from \"console\";\r\n\r\nexport class PerfTracker {\r\n\r\n    private lastCount = 0;\r\n\r\n    private initialPublishTimeout = 10 * 1000; // 10 sec\r\n    private publishInterval = 60 * 1000; // 60 sec\r\n    private system: Glue42Core.Metrics.System;\r\n\r\n    constructor(private api: Glue42Core.Metrics.API, initialPublishTimeout?: number, publishInterval?: number) {\r\n        this.initialPublishTimeout = initialPublishTimeout ?? this.initialPublishTimeout;\r\n        this.publishInterval = publishInterval ?? this.publishInterval;\r\n        this.scheduleCollection();\r\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\r\n    }\r\n\r\n    private scheduleCollection() {\r\n        setTimeout(() => {\r\n            this.collect();\r\n            setInterval(() => {\r\n                this.collect();\r\n            }, this.publishInterval);\r\n        }, this.initialPublishTimeout);\r\n    }\r\n\r\n    private collect() {\r\n        try {\r\n            // tslint:disable-next-line:no-console\r\n            this.collectMemory();\r\n            this.collectEntries();\r\n        } catch {\r\n            // DO NOTHING\r\n        }\r\n    }\r\n\r\n    private collectMemory() {\r\n        // memory - use performance.memory\r\n        const memory = (window.performance as any).memory;\r\n        this.system.stringMetric(\"memory\", JSON.stringify({\r\n            totalJSHeapSize: memory.totalJSHeapSize,\r\n            usedJSHeapSize: memory.usedJSHeapSize\r\n        }));\r\n    }\r\n\r\n    private collectEntries() {\r\n        const allEntries = window.performance.getEntries();\r\n        if (allEntries.length <= this.lastCount) {\r\n            return;\r\n        }\r\n        this.lastCount = allEntries.length;\r\n        const jsonfiedEntries = allEntries.map((i) => i.toJSON());\r\n\r\n        this.system.stringMetric(\"entries\", JSON.stringify(jsonfiedEntries));\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport gw3 from \"./protocols/gw3/gw3\";\r\nimport { Repository } from \"./repository\";\r\nimport { Protocol, MetricsSettings } from \"./types\";\r\nimport { NullProtocol } from \"./protocols/null/null\";\r\nimport { PerfTracker } from \"./pertTracker\";\r\n\r\nexport default (options: MetricsSettings): Glue42Core.Metrics.API => {\r\n\r\n    let protocol: Protocol;\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        protocol = new NullProtocol();\r\n    } else {\r\n        protocol = gw3(options.connection, options);\r\n    }\r\n\r\n    const repo = new Repository(options, protocol);\r\n    let rootSystem = repo.root;\r\n    if (!options.disableAutoAppSystem) {\r\n        rootSystem = rootSystem.subSystem(\"App\");\r\n    }\r\n\r\n    // add FAV support\r\n    const api = addFAVSupport(rootSystem);\r\n    // initialize page performance\r\n    initPerf(api, options.pagePerformanceMetrics);\r\n\r\n    return api;\r\n};\r\n\r\nlet perf: PerfTracker;\r\nfunction initPerf(api: Glue42Core.Metrics.API, config?: Glue42Core.PagePerformanceMetricsConfig) {\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n\r\n    // allow Glue42 Enterprise to override\r\n    const perfConfig = window?.glue42gd?.metrics?.pagePerformanceMetrics;\r\n    if (perfConfig) {\r\n        // allow Glue42 Enterprise to override\r\n        config = perfConfig;\r\n    }\r\n\r\n    if (config?.enabled) {\r\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\r\n    }\r\n}\r\n\r\nfunction addFAVSupport(system: Glue42Core.Metrics.System): Glue42Core.Metrics.API {\r\n    // Creating subsystem for reporting and feature metric\r\n    const reportingSystem: Glue42Core.Metrics.System = system.subSystem(\"reporting\");\r\n    const def = {\r\n        name: \"features\"\r\n    };\r\n\r\n    let featureMetric: Glue42Core.Metrics.ObjectMetric;\r\n\r\n    const featureMetricFunc = (name: string, action: string, payload: string) => {\r\n        if (typeof name === \"undefined\" || name === \"\") {\r\n            throw new Error(\"name is mandatory\");\r\n        } else if (typeof action === \"undefined\" || action === \"\") {\r\n            throw new Error(\"action is mandatory\");\r\n        } else if (typeof payload === \"undefined\" || payload === \"\") {\r\n            throw new Error(\"payload is mandatory\");\r\n        }\r\n\r\n        if (!featureMetric) {\r\n            featureMetric = reportingSystem.objectMetric(def, { name, action, payload });\r\n        } else {\r\n            featureMetric.update({\r\n                name,\r\n                action,\r\n                payload\r\n            });\r\n        }\r\n    };\r\n    (system as any).featureMetric = featureMetricFunc;\r\n    return system as Glue42Core.Metrics.API;\r\n}\r\n","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback, replayArgumentsArr) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        if (replayArgumentsArr) {\r\n            setTimeout(function () {\r\n                replayArgumentsArr.forEach(function (replayArgument) {\r\n                    var _a;\r\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\r\n                        try {\r\n                            if (Array.isArray(replayArgument)) {\r\n                                callback.apply(undefined, replayArgument);\r\n                            }\r\n                            else {\r\n                                callback.apply(undefined, [replayArgument]);\r\n                            }\r\n                        }\r\n                        catch (err) {\r\n                            _handleError(err, key);\r\n                        }\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            if (allForKey.length === 0) {\r\n                delete callbacks[key];\r\n            }\r\n            else {\r\n                callbacks[key] = allForKey;\r\n            }\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    function clearKey(key) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            return;\r\n        }\r\n        delete callbacks[key];\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear,\r\n        clearKey: clearKey\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map","import { Transport } from \"../types\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport { Logger } from \"../../logger/logger\";\r\n\r\nexport default class InProcTransport implements Transport {\r\n\r\n    private gw: Glue42Core.Connection.GW3Facade;\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private client?: Glue42Core.Connection.GW3Client;\r\n\r\n    constructor(settings: Glue42Core.InprocGWSettings, logger: Logger) {\r\n        this.gw = settings.facade;\r\n        this.gw.connect((_client, message) => {\r\n            this.messageHandler(message);\r\n        }).then((client) => {\r\n            this.client = client;\r\n        });\r\n    }\r\n\r\n    public get isObjectBasedTransport() {\r\n        return true;\r\n    }\r\n\r\n    public sendObject(msg: object): Promise<void> {\r\n        if (this.client) {\r\n            this.client.send(msg);\r\n            return Promise.resolve(undefined);\r\n        } else {\r\n            return Promise.reject(`not connected`);\r\n        }\r\n    }\r\n\r\n    public send(_msg: string) {\r\n        return Promise.reject(\"not supported\");\r\n    }\r\n\r\n    public onMessage(callback: (msg: string | object) => void): UnsubscribeFunction {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    }\r\n\r\n    public onConnectedChanged(callback: (connected: boolean) => void) {\r\n        callback(true);\r\n    }\r\n\r\n    public close() {\r\n        // DO NOTHING\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public open() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public name(): string {\r\n        return \"in-memory\";\r\n    }\r\n\r\n    public reconnect(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private messageHandler(msg: object) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    }\r\n}\r\n","import { Transport } from \"../types\";\r\nimport {\r\n    default as CallbackRegistryFactory,\r\n    CallbackRegistry,\r\n    UnsubscribeFunction,\r\n} from \"callback-registry\";\r\nimport { Logger } from \"../../logger/logger\";\r\n\r\n// tslint:disable-next-line:no-namespace\r\ndeclare namespace SharedWorker {\r\n    interface AbstractWorker extends EventTarget {\r\n        onerror: (ev: ErrorEvent) => any;\r\n    }\r\n\r\n    export interface SharedWorker extends AbstractWorker {\r\n        /**\r\n         * the value it was assigned by the object's constructor.\r\n         * It represents the MessagePort for communicating with the shared worker.\r\n         * @type {MessagePort}\r\n         */\r\n        port: MessagePort;\r\n    }\r\n\r\n    export interface SharedWorkerGlobalScope extends Worker {\r\n        onconnect: (event: MessageEvent) => void;\r\n    }\r\n}\r\n\r\n/**\r\n * Shared worker transport\r\n */\r\nexport default class SharedWorkerTransport implements Transport {\r\n    private worker: any;\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n\r\n    constructor(workerFile: string, private logger: Logger) {\r\n        this.worker = new SharedWorker(workerFile);\r\n        this.worker.port.onmessage = (e: { data: any; timestamp: number }) => {\r\n            this.messageHandler(e.data);\r\n        };\r\n    }\r\n\r\n    public get isObjectBasedTransport() {\r\n        return true;\r\n    }\r\n\r\n    public sendObject(msg: object): Promise<void> {\r\n        this.worker.port.postMessage(msg);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public send(_msg: string) {\r\n        return Promise.reject(\"not supported\");\r\n    }\r\n\r\n    public onMessage(\r\n        callback: (msg: string | object) => void\r\n    ): UnsubscribeFunction {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    }\r\n\r\n    public onConnectedChanged(callback: (connected: boolean) => void) {\r\n        callback(true);\r\n    }\r\n\r\n    public close() {\r\n        // DO NOTHING\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public open() {\r\n        // DO NOTHING\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public name(): string {\r\n        return \"shared-worker\";\r\n    }\r\n\r\n    public reconnect(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private messageHandler(msg: object) {\r\n        this.registry.execute(\"onMessage\", msg);\r\n    }\r\n}\r\n\r\ninterface SharedWorkerOptions {\r\n    credentials?: RequestCredentials;\r\n    name?: string;\r\n    type?: WorkerType;\r\n}\r\n\r\n// eslint-disable-next-line\r\ndeclare var SharedWorker: {\r\n    prototype: SharedWorker.SharedWorker;\r\n\r\n    /**\r\n     *\r\n     * @param {string} stringUrl                          Pathname to JavaScript file\r\n     * @param {string|SharedWorkerOptions} [options]      Name of the worker to execute\r\n     *                                                    or an object containing option properties\r\n     */\r\n    new(\r\n        stringUrl: string,\r\n        options?: string | SharedWorkerOptions\r\n    ): SharedWorker.SharedWorker;\r\n};\r\n","export default class Utils {\r\n\r\n    public static getGDMajorVersion(): number | undefined {\r\n        if (typeof window === \"undefined\") {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return undefined;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return undefined;\r\n        }\r\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? undefined : ver;\r\n    }\r\n\r\n    public static isNode() {\r\n        if (typeof Utils._isNode !== \"undefined\") {\r\n            return Utils._isNode;\r\n        }\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            Utils._isNode = false;\r\n            return false;\r\n        }\r\n\r\n        // Only Node.JS has a process variable that is of [[Class]] process\r\n        try {\r\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        } catch (e) {\r\n            Utils._isNode = false;\r\n        }\r\n        return Utils._isNode;\r\n    }\r\n    private static _isNode?: boolean;\r\n}\r\n","export class PromiseWrapper<T> {\r\n\r\n    public static delay(time: number): Promise<void> {\r\n        return new Promise((resolve) => setTimeout(resolve, time));\r\n    }\r\n\r\n    public resolve!: (arg?: T | PromiseLike<T>) => void;\r\n    public reject!: (err: any) => void;\r\n    public promise: Promise<T>;\r\n    public rejected: boolean = false;\r\n    public resolved: boolean = false;\r\n    public get ended(): boolean {\r\n        return this.rejected || this.resolved;\r\n    }\r\n\r\n    constructor() {\r\n        this.promise = new Promise<T>((resolve, reject) => {\r\n            this.resolve = (t: any) => {\r\n                this.resolved = true;\r\n                resolve(t);\r\n            };\r\n\r\n            this.reject = (err: any) => {\r\n                this.rejected = true;\r\n                reject(err);\r\n            };\r\n        });\r\n    }\r\n}\r\n","import { Timer, Mark } from \"../types\";\r\n\r\nconst timers: { [index: string]: Timer } = {};\r\n\r\nexport function getAllTimers() {\r\n    return timers;\r\n}\r\n\r\nexport default function (timerName: string): Timer {\r\n    const existing = timers[timerName];\r\n    if (existing) {\r\n        return existing;\r\n    }\r\n\r\n    const marks: Mark[] = [];\r\n    function now(): number {\r\n        return new Date().getTime();\r\n    }\r\n\r\n    const startTime = now();\r\n    mark(\"start\", startTime);\r\n    let endTime: number;\r\n    let period: number;\r\n\r\n    function stop(): number {\r\n        endTime = now();\r\n        mark(\"end\", endTime);\r\n        period = endTime - startTime;\r\n        return period;\r\n    }\r\n\r\n    function mark(name: string, time?: number): void {\r\n        const currentTime = time ?? now();\r\n        let diff = 0;\r\n        if (marks.length > 0) {\r\n            diff = currentTime - marks[marks.length - 1].time;\r\n        }\r\n        marks.push({ name, time: currentTime, diff });\r\n    }\r\n\r\n    const timerObj = {\r\n        get startTime(): number {\r\n            return startTime;\r\n        },\r\n        get endTime(): number {\r\n            return endTime;\r\n        },\r\n        get period(): number {\r\n            return period;\r\n        },\r\n        stop,\r\n        mark,\r\n        marks\r\n    };\r\n\r\n    timers[timerName] = timerObj;\r\n    return timerObj;\r\n}\r\n","import {\r\n    default as CallbackRegistryFactory,\r\n    CallbackRegistry,\r\n} from \"callback-registry\";\r\nimport { Transport, ConnectionSettings } from \"../types\";\r\nimport { Logger } from \"../../logger/logger\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport Utils from \"../../utils/utils\";\r\nimport { PromiseWrapper } from \"../../utils/pw\";\r\nimport timer from \"../../utils/timer\";\r\n\r\nconst WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\r\n\r\nexport default class WS implements Transport {\r\n    private ws: WebSocket | undefined;\r\n    private logger: Logger;\r\n    private settings: ConnectionSettings;\r\n    private startupTimer = timer(\"connection\");\r\n\r\n    /**\r\n     * If the flag is true the connection should keep trying to connect.\r\n     * If false the user explicitly closed it and it should not reconnect\r\n     */\r\n    private _running = true;\r\n\r\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private wsRequests: Array<{ callback: () => void, failed?: (err?: string) => void }> = [];\r\n\r\n    constructor(settings: ConnectionSettings, logger: Logger) {\r\n        this.settings = settings;\r\n        this.logger = logger;\r\n        if (!this.settings.ws) {\r\n            throw new Error(\"ws is missing\");\r\n        }\r\n    }\r\n\r\n    public onMessage(callback: (msg: string) => void): () => void {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    }\r\n\r\n    // Create a function for sending a message\r\n    public send(msg: string, options?: Glue42Core.Connection.SendMessageOptions): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            options = options || {};\r\n            this.waitForSocketConnection(\r\n                () => {\r\n                    try {\r\n                        this.ws?.send(msg);\r\n                        resolve();\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    public open() {\r\n        this.logger.info(`opening ws...`);\r\n        this._running = true;\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.waitForSocketConnection(\r\n                resolve,\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this._running = false;\r\n        if (this.ws) {\r\n            this.ws.close();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public onConnectedChanged(callback: (connected: boolean, reason?: string) => void): () => void {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    }\r\n\r\n    public name(): string {\r\n        return `ws ${this.settings.ws}`;\r\n    }\r\n\r\n    public reconnect(): Promise<void> {\r\n        this.ws?.close();\r\n        const pw = new PromiseWrapper<void>();\r\n        this.waitForSocketConnection(() => {\r\n            pw.resolve();\r\n        });\r\n        return pw.promise;\r\n    }\r\n\r\n    // Holds callback execution until socket connection is established.\r\n    private waitForSocketConnection(\r\n        callback: () => void,\r\n        failed?: (err?: string) => void\r\n    ) {\r\n        failed = failed ?? (() => { /** DO nothing */ });\r\n\r\n        // check if we're still running\r\n        if (!this._running) {\r\n            failed(\r\n                `wait for socket on ${this.settings.ws} failed - socket closed by user`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // if socket is opened - returned immediately\r\n        if (this.ws?.readyState === 1) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        // store the callback\r\n        this.wsRequests.push({ callback, failed });\r\n        // if someone has already initiated the socket return\r\n        if (this.wsRequests.length > 1) {\r\n            return;\r\n        }\r\n\r\n        this.openSocket();\r\n    }\r\n\r\n    private async openSocket(retryInterval?: number, retriesLeft?: number) {\r\n        this.startupTimer.mark(\"opening-socket\");\r\n        if (retryInterval === undefined) {\r\n            retryInterval = this.settings.reconnectInterval;\r\n        }\r\n\r\n        if (retriesLeft !== undefined) {\r\n            if (retriesLeft === 0) {\r\n                this.notifyForSocketState(\r\n                    `wait for socket on ${this.settings.ws} failed - no more retries left`\r\n                );\r\n                return;\r\n            }\r\n            this.logger.debug(\r\n                `will retry ${retriesLeft} more times (every ${retryInterval} ms)`\r\n            );\r\n        }\r\n\r\n        try {\r\n            await this.initiateSocket();\r\n            this.startupTimer.mark(\"socket-initiated\");\r\n            this.notifyForSocketState();\r\n        } catch {\r\n            setTimeout(() => {\r\n                const retries =\r\n                    retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n                this.openSocket(\r\n                    retryInterval,\r\n                    retries,\r\n                );\r\n            }, retryInterval); // wait X milliseconds for the connection...\r\n        }\r\n    }\r\n\r\n    private initiateSocket(): Promise<void> {\r\n        const pw = new PromiseWrapper<void>();\r\n        this.logger.debug(`initiating ws to ${this.settings.ws}...`);\r\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\") as WebSocket;\r\n        this.ws.onerror = (err: any) => {\r\n            let reason: string = \"\";\r\n            try {\r\n                reason = JSON.stringify(err);\r\n            } catch (error) {\r\n                const seen = new WeakSet();\r\n                const replacer = (key: string, value: any) => {\r\n                    if (typeof value === \"object\" && value !== null) {\r\n                        if (seen.has(value)) {\r\n                            return;\r\n                        }\r\n                        seen.add(value);\r\n                    }\r\n                    return value;\r\n                };\r\n\r\n                reason = JSON.stringify(err, replacer);\r\n            }\r\n\r\n            pw.reject(\"error\");\r\n            this.notifyStatusChanged(false, reason);\r\n        };\r\n        this.ws.onclose = (err) => {\r\n            this.logger.info(`ws closed ${err}`);\r\n            pw.reject(\"closed\");\r\n            this.notifyStatusChanged(false);\r\n        };\r\n        // Log on connection\r\n        this.ws.onopen = () => {\r\n            // tslint:disable-next-line:no-console\r\n            this.startupTimer.mark(\"ws-opened\");\r\n            this.logger.info(`ws opened ${this.settings.identity?.application}`);\r\n            pw.resolve();\r\n            this.notifyStatusChanged(true);\r\n        };\r\n        // Attach handler\r\n        this.ws.onmessage = (message: { data: object }) => {\r\n            this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n\r\n        return pw.promise;\r\n    }\r\n\r\n    private notifyForSocketState(error?: string) {\r\n        this.wsRequests.forEach((wsRequest) => {\r\n            if (error) {\r\n                if (wsRequest.failed) {\r\n                    wsRequest.failed(error);\r\n                }\r\n            } else {\r\n                wsRequest.callback();\r\n            }\r\n        });\r\n        this.wsRequests = [];\r\n    }\r\n\r\n    private notifyStatusChanged(status: boolean, reason?: string) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    }\r\n}\r\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar isValid = require('./is-valid');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import { Glue42Core } from \"../../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\r\nimport generate from \"shortid\";\r\nimport { Logger } from \"../../logger/logger\";\r\nimport Connection from \"../connection\";\r\n\r\ninterface GW3Message {\r\n    request_id?: string;\r\n    domain?: string;\r\n    peer_id?: string;\r\n    _tag?: object;\r\n}\r\n\r\n/**\r\n * Handles domain session lifetime and events for a given connection/domain pair\r\n */\r\nexport default function (domain: string, connection: Connection, logger: Logger, successMessages?: string[], errorMessages?: string[]): Glue42Core.Connection.GW3DomainSession {\r\n\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n\r\n    successMessages = successMessages || [\"success\"];\r\n    errorMessages = errorMessages || [\"error\"];\r\n\r\n    let isJoined = false;\r\n    let tryReconnecting = false;\r\n    /** holds latest options passed to join - used when doing reconnects */\r\n    let _latestOptions: object | undefined;\r\n    // #deleteme TODO: verify this gets properly set to true\r\n    let _connectionOn: boolean = false;\r\n\r\n    const callbacks: CallbackRegistry = CallbackRegistryFactory();\r\n\r\n    // attach event handlers to connection\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(\"success\", (msg: GW3Message) => handleSuccessMessage(msg));\r\n    connection.on(\"error\", (msg: GW3Message) => handleErrorMessage(msg));\r\n    connection.on(\"result\", (msg: GW3Message) => handleSuccessMessage(msg));\r\n\r\n    if (successMessages) {\r\n        successMessages.forEach((sm) => {\r\n            connection.on(sm, (msg: GW3Message) => handleSuccessMessage(msg));\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach((sm) => {\r\n            connection.on(sm, (msg: GW3Message) => handleErrorMessage(msg));\r\n        });\r\n    }\r\n\r\n    interface RequestHandler {\r\n        success: (success: { _tag?: object }) => void;\r\n        error: (error: { _tag?: object, err?: string }) => void;\r\n    }\r\n\r\n    const requestsMap: { [key: string]: RequestHandler } = {};\r\n\r\n    function join(options?: object): Promise<{}> {\r\n        _latestOptions = options;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            let joinPromise: Promise<{}>;\r\n\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve<{}>({}) : Promise.reject<{}>(\"not connected to gateway\");\r\n            } else {\r\n                logger.debug(`joining domain ${domain}`);\r\n\r\n                const joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options,\r\n                };\r\n\r\n                // #deleteme TODO: what happens if multiple clients try to open the same domain?\r\n                // e.g. contexts\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(() => {\r\n                    handleJoined();\r\n                    resolve();\r\n                })\r\n                .catch((err) => {\r\n                    logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n\r\n    // terminology: join vs leave (domain), connect vs login vs disconnect (to/from GW)\r\n    function leave(): Promise<void> {\r\n        if (domain === \"global\") {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        const leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        tryReconnecting = false;\r\n        // #deleteme - handling\r\n        return send(leaveMsg).then(() => {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n\r\n        isJoined = true;\r\n        const wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.debug(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.debug(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n\r\n    function onJoined(callback: (wasReconnect: boolean) => void) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n\r\n    function onLeft(callback: () => void) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n\r\n    function handleErrorMessage(msg: GW3Message) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n\r\n        const requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        const entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n\r\n        entry.error(msg);\r\n    }\r\n\r\n    function handleSuccessMessage(msg: GW3Message) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        const requestId = msg.request_id;\r\n        if (!requestId) {\r\n            return;\r\n        }\r\n        const entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n\r\n    function getNextRequestId() {\r\n        return generate();\r\n    }\r\n\r\n    /**\r\n     * Send a message\r\n     * @param msg message to send\r\n     * @param tag a custom object (tag) - it will be transferred to success/error callback\r\n     * @param success\r\n     * @param error\r\n     */\r\n    function send<T>(msg: GW3Message, tag?: object, options?: Glue42Core.Connection.SendMessageOptions): Promise<T> {\r\n        options = options || {};\r\n        // Allows function caller to override request_id\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        // Allows function caller to override domain (join/leave messages are in global domain)\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n\r\n        const requestId = msg.request_id;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            requestsMap[requestId] = {\r\n                success: (successMsg: any) => {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: (errorMsg: { _tag?: any, error?: string }) => {\r\n                    logger.warn(`GW error - ${JSON.stringify(errorMsg)} for request ${JSON.stringify(msg)}`);\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(msg, options)\r\n                .catch((err: string) => {\r\n                    requestsMap[requestId].error({ err });\r\n                });\r\n        });\r\n    }\r\n\r\n    function sendFireAndForget(msg: GW3Message): Promise<void> {\r\n        // Allows function caller to override request_id\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        // Allows function caller to override domain (join/leave messages are in global domain)\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n\r\n        return connection.send(msg);\r\n    }\r\n\r\n    return {\r\n        join,\r\n        leave,\r\n        onJoined,\r\n        onLeft,\r\n        send,\r\n        sendFireAndForget,\r\n        on: <T>(type: string, callback: (msg: T) => void) => {\r\n            connection.on(type, (msg: any) => {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    callback(msg);\r\n                } catch (e) {\r\n                    logger.error(`Callback  failed: ${e} \\n ${e.stack} \\n msg was: ${JSON.stringify(msg)}`, e);\r\n                }\r\n            });\r\n        },\r\n        loggedIn: (callback: () => void) => connection.loggedIn(callback),\r\n        connected: (callback: (server: string) => void) => connection.connected(callback),\r\n        disconnected: (callback: () => void) => connection.disconnected(callback),\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\r\n","import domainSession from \"./gw3Domain\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\r\nimport { GW3Protocol, Identity, ConnectionSettings } from \"../types\";\r\nimport Connection from \"../connection\";\r\nimport { Logger } from \"../../logger/logger\";\r\nimport { WelcomeMessage, CreateTokenReq, CreateTokenRes } from \"./messages\";\r\nexport default class GW3ProtocolImpl implements GW3Protocol {\r\n    public protocolVersion: number = 3;\r\n\r\n    private datePrefix = \"#T42_DATE#\";\r\n    private datePrefixLen = this.datePrefix.length;\r\n    private dateMinLen = this.datePrefixLen + 1; // prefix + at least one char (1970/01/01 = 0)\r\n    private datePrefixFirstChar = this.datePrefix[0];\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n\r\n    private globalDomain: Glue42Core.Connection.GW3DomainSession | undefined;\r\n\r\n    /* Flag indicating if the user is currently logged in */\r\n    private _isLoggedIn = false;\r\n\r\n    /*\r\n     * If true(default) the user wants to be connected.\r\n     * If the user explicitly calls logout this will become false.\r\n     * This is used to determine if it should retry trying to login.\r\n     */\r\n    private shouldTryLogin = true;\r\n\r\n    /* True only if this is the initial login attempt. */\r\n    private initialLogin = true;\r\n    private initialLoginAttempts = 3;\r\n    private pingTimer: any;\r\n    private sessions: Glue42Core.Connection.GW3DomainSession[] = [];\r\n    private loginConfig: Glue42Core.Auth | undefined;\r\n\r\n    constructor(private connection: Connection, private settings: ConnectionSettings, private logger: Logger) {\r\n        connection.disconnected(() => {\r\n            this.handleDisconnected();\r\n        });\r\n\r\n        this.ping();\r\n    }\r\n\r\n    public get isLoggedIn() {\r\n        return this._isLoggedIn;\r\n    }\r\n\r\n    public processStringMessage(message: string): { msg: object, msgType: string } {\r\n        const msg: { type: string } = JSON.parse(message, (key, value) => {\r\n\r\n            // check for date - we have custom protocol for dates\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < this.dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== this.datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, this.datePrefixLen) !== this.datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                const milliseconds = parseInt(value.substring(this.datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            } catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n\r\n        return {\r\n            msg,\r\n            msgType: msg.type,\r\n        };\r\n    }\r\n\r\n    public createStringMessage(message: object): string {\r\n        const oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            const datePrefix = this.datePrefix;\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix + this.getTime();\r\n            };\r\n            const result = JSON.stringify(message);\r\n            return result;\r\n        } finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    }\r\n\r\n    public processObjectMessage(message: { type: string }): { msg: object, msgType: string } {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    }\r\n\r\n    public createObjectMessage(message: object): object {\r\n        return message;\r\n    }\r\n\r\n    public async login(config: Glue42Core.Auth, reconnect?: boolean): Promise<Identity> {\r\n        this.logger.debug(\"logging in...\");\r\n        this.loginConfig = config;\r\n\r\n        if (!this.loginConfig) {\r\n            // in case of no auth send empty username and password\r\n            this.loginConfig = { username: \"\", password: \"\" };\r\n        }\r\n        this.shouldTryLogin = true;\r\n\r\n        const authentication: {\r\n            method?: string,\r\n            token?: string,\r\n            login?: string,\r\n            secret?: string,\r\n            provider?: string\r\n        } = {};\r\n\r\n        this.connection.gatewayToken = config.gatewayToken;\r\n        if (config.gatewayToken) {\r\n            // in case of re-connect try to refresh the GW token\r\n            if (reconnect) {\r\n                try {\r\n                    const token = await this.getNewGWToken();\r\n                    config.gatewayToken = token;\r\n                } catch (e) {\r\n                    this.logger.warn(`failed to get GW token when reconnecting ${e?.message || e}`);\r\n                }\r\n            }\r\n            authentication.method = \"gateway-token\";\r\n            authentication.token = config.gatewayToken;\r\n            this.connection.gatewayToken = config.gatewayToken;\r\n        } else if (config.flowName === \"sspi\") {\r\n            authentication.provider = \"win\";\r\n            authentication.method = \"access-token\";\r\n\r\n            if (config.flowCallback && config.sessionId) {\r\n                authentication.token =\r\n                    (await config.flowCallback(config.sessionId, null))\r\n                        .data\r\n                        .toString(\"base64\");\r\n            } else {\r\n                throw new Error(\"Invalid SSPI config\");\r\n            }\r\n        } else if (config.token) {\r\n            authentication.method = \"access-token\";\r\n            authentication.token = config.token;\r\n        } else if (config.username) {\r\n            authentication.method = \"secret\";\r\n            authentication.login = config.username;\r\n            authentication.secret = config.password;\r\n        } else {\r\n            throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n        }\r\n\r\n        const helloMsg: any = {\r\n            type: \"hello\",\r\n            identity: this.settings.identity,\r\n            authentication\r\n        };\r\n\r\n        if (config.sessionId) {\r\n            helloMsg.request_id = config.sessionId;\r\n        }\r\n\r\n        this.globalDomain = domainSession(\r\n            \"global\",\r\n            this.connection,\r\n            this.logger.subLogger(\"global-domain\"),\r\n            [\r\n                \"welcome\",\r\n                \"token\",\r\n                \"authentication-request\"\r\n            ]);\r\n\r\n        const sendOptions: Glue42Core.Connection.SendMessageOptions = { skipPeerId: true };\r\n        if (this.initialLogin) {\r\n            sendOptions.retryInterval = this.settings.reconnectInterval;\r\n            sendOptions.maxRetries = this.settings.reconnectAttempts;\r\n        }\r\n\r\n        try {\r\n            let welcomeMsg: WelcomeMessage;\r\n\r\n            while (true) {\r\n                const msg: any = await this.globalDomain.send(helloMsg, undefined, sendOptions);\r\n                if (msg.type === \"authentication-request\") {\r\n                    // respond to auth challenge\r\n                    const token = Buffer.from(msg.authentication.token, \"base64\");\r\n                    if (config.flowCallback && config.sessionId) {\r\n                        helloMsg.authentication.token =\r\n                            (await config.flowCallback(config.sessionId, token))\r\n                                .data\r\n                                .toString(\"base64\");\r\n                    }\r\n                    helloMsg.request_id = config.sessionId;\r\n                    continue;\r\n                } else if (msg.type === \"welcome\") {\r\n                    // we're in\r\n                    welcomeMsg = msg as WelcomeMessage;\r\n                    break;\r\n                } else if (msg.type === \"error\") {\r\n                    throw new Error(\"Authentication failed: \" + msg.reason);\r\n                } else {\r\n                    throw new Error(\"Unexpected message type during authentication: \" + msg.type);\r\n                }\r\n            }\r\n            // we've logged in once - set this to false for the rest of the lifetime\r\n            this.initialLogin = false;\r\n            this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\r\n\r\n            this.connection.peerId = welcomeMsg.peer_id;\r\n            this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\r\n            this.connection.availableDomains = welcomeMsg.available_domains as any;\r\n            if (welcomeMsg.options) {\r\n                this.connection.token = welcomeMsg.options.access_token;\r\n                this.connection.info = welcomeMsg.options.info;\r\n            }\r\n            this.setLoggedIn(true);\r\n            return welcomeMsg.resolved_identity;\r\n        } catch (err) {\r\n            this.logger.error(\"error sending hello message - \" + (err.message || err.msg || err.reason || err), err);\r\n            throw err;\r\n        } finally {\r\n            if (config && config.flowCallback && config.sessionId) {\r\n                config.flowCallback(config.sessionId, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    public async logout(): Promise<void> {\r\n        this.logger.debug(\"logging out...\");\r\n        this.shouldTryLogin = false;\r\n\r\n        if (this.pingTimer) {\r\n            clearTimeout(this.pingTimer);\r\n        }\r\n\r\n        // go through all sessions and leave the corresponding domain\r\n        const promises = this.sessions.map((session) => {\r\n            session.leave();\r\n        });\r\n        await Promise.all(promises);\r\n    }\r\n\r\n    public loggedIn(callback: (() => void)): () => void {\r\n        if (this._isLoggedIn) {\r\n            callback();\r\n        }\r\n        return this.registry.add(\"onLoggedIn\", callback);\r\n    }\r\n\r\n    public domain(domainName: string, domainLogger: Logger, successMessages?: string[], errorMessages?: string[]): Glue42Core.Connection.GW3DomainSession {\r\n        let session = this.sessions.filter((s) => s.domain === domainName)[0];\r\n        if (!session) {\r\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\r\n            this.sessions.push(session);\r\n        }\r\n        return session;\r\n    }\r\n\r\n    public handleDisconnected() {\r\n        this.setLoggedIn(false);\r\n        const tryToLogin = this.shouldTryLogin;\r\n        if (tryToLogin && this.initialLogin) {\r\n            if (this.initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            this.initialLoginAttempts--;\r\n        }\r\n\r\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\r\n        if (this.shouldTryLogin) {\r\n            if (!this.loginConfig) {\r\n                throw new Error(\"no login info\");\r\n            }\r\n\r\n            this.connection.login(this.loginConfig, true)\r\n                .catch(() => {\r\n                    setTimeout(this.handleDisconnected.bind(this), this.settings.reconnectInterval || 1000);\r\n                });\r\n        }\r\n    }\r\n\r\n    public setLoggedIn(value: boolean) {\r\n        this._isLoggedIn = value;\r\n        if (this._isLoggedIn) {\r\n            this.registry.execute(\"onLoggedIn\");\r\n        }\r\n    }\r\n\r\n    public ping() {\r\n        // if we don't want to be connected return\r\n        if (!this.shouldTryLogin) {\r\n            return;\r\n        }\r\n\r\n        // if logged in ping\r\n        if (this._isLoggedIn) {\r\n            this.connection.send({ type: \"ping\" });\r\n        }\r\n\r\n        // schedule next after 30 sec\r\n        this.pingTimer = setTimeout(() => {\r\n            this.ping();\r\n        }, 30 * 1000);\r\n    }\r\n\r\n    public authToken(): Promise<string> {\r\n        const createTokenReq: CreateTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n\r\n        if (!this.globalDomain) {\r\n            return Promise.reject(new Error(\"no global domain session\"));\r\n        }\r\n\r\n        return this.globalDomain.send<CreateTokenRes>(createTokenReq)\r\n            .then((res: CreateTokenRes) => {\r\n                return res.token;\r\n            });\r\n    }\r\n\r\n    private getNewGWToken(): Promise<string | undefined> {\r\n        if (typeof window !== undefined) {\r\n            // pull up a new token from gd\r\n            const glue42gd = window.glue42gd;\r\n            if (glue42gd) {\r\n                return glue42gd.getGWToken();\r\n            }\r\n        }\r\n        return Promise.reject(new Error(\"not running in GD\"));\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\n\r\nexport class MessageReplayerImpl implements Glue42Core.Connection.MessageReplayer {\r\n    private specs: { [name: string]: Glue42Core.Connection.MessageReplaySpec };\r\n    private specsNames: string[] = [];\r\n    private messages: { [type: string]: object[] } = {};\r\n    private isDone: boolean | undefined;\r\n    private subs: { [type: string]: any } = {};\r\n    private subsRefCount: { [type: string]: number } = {};\r\n    private connection: Glue42Core.Connection.API | undefined;\r\n\r\n    constructor(specs: Glue42Core.Connection.MessageReplaySpec[]) {\r\n        this.specs = {};\r\n        for (const spec of specs) {\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n\r\n    public init(connection: Glue42Core.Connection.API) {\r\n        this.connection = connection;\r\n        for (const name of this.specsNames) {\r\n            for (const type of this.specs[name].types) {\r\n                let refCount = this.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    continue;\r\n                }\r\n\r\n                const sub = connection.on<object>(\r\n                    type,\r\n                    (msg) => this.processMessage(type, msg));\r\n\r\n                this.subs[type] = sub;\r\n            }\r\n        }\r\n    }\r\n\r\n    public processMessage(type: string, msg: object) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n\r\n        for (const name of this.specsNames) {\r\n            if (this.specs[name].types.indexOf(type) !== -1) {\r\n                const messages = this.messages[name] || [];\r\n                this.messages[name] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    public drain(name: string, callback?: (msg: object) => void) {\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n\r\n        delete this.messages[name];\r\n\r\n        for (const type of this.specs[name].types) {\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                this.connection?.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n\r\n        delete this.specs[name];\r\n\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const PromisePlus = <T>(executor: (resolve: (value?: T | PromiseLike<T> | undefined) => void, reject: (reason?: any) => void) => void, timeoutMilliseconds: number, timeoutMessage?: string): Promise<T> => {\r\n\r\n    return new Promise<T>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n\r\n            const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;\r\n\r\n            reject(message);\r\n        }, timeoutMilliseconds);\r\n\r\n        const providedPromise = new Promise<T>(executor);\r\n\r\n        providedPromise\r\n            .then((result) => {\r\n                clearTimeout(timeout);\r\n                resolve(result);\r\n            })\r\n            .catch((error) => {\r\n                clearTimeout(timeout);\r\n                reject(error);\r\n            });\r\n    });\r\n\r\n};\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport { Identity, Transport } from \"../types\";\r\nimport { Logger } from \"../../logger/logger\";\r\nimport {\r\n    default as CallbackRegistryFactory,\r\n    CallbackRegistry,\r\n    UnsubscribeFunction,\r\n} from \"callback-registry\";\r\nimport generate from \"shortid\";\r\nimport { PromisePlus } from \"../../utils/promise-plus\";\r\n\r\ntype MessageType = \"connectionAccepted\" | \"connectionRejected\" | \"connectionRequest\" | \"parentReady\" | \"parentPing\" | \"platformPing\" | \"platformUnload\" | \"platformReady\" | \"clientUnload\" | \"manualUnload\";\r\n\r\nexport default class WebPlatformTransport implements Transport {\r\n\r\n    private publicWindowId: string | undefined;\r\n    private parentReady = false;\r\n    private iAmConnected = false;\r\n    private rejected = false;\r\n    private parentPingResolve: ((value?: void | PromiseLike<void> | undefined) => void) | undefined;\r\n    private connectionResolve: ((value?: void | PromiseLike<void> | undefined) => void) | undefined;\r\n    private connectionReject: ((reason?: unknown) => void) | undefined;\r\n    private port: MessagePort | undefined;\r\n    private myClientId: string | undefined;\r\n    private children: Array<{ grandChildId: string; source: Window; connected: boolean; origin: string }> = [];\r\n\r\n    private readonly parent: Window | undefined;\r\n    private readonly parentType: \"opener\" | \"top\" | \"workspace\" | undefined;\r\n    private readonly parentPingTimeout = 3000;\r\n    private readonly connectionRequestTimeout = 5000;\r\n    private readonly defaultTargetString = \"*\";\r\n    private readonly registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private readonly messages: { [key in MessageType]: { name: string; handle: (event: MessageEvent) => void } } = {\r\n        connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\r\n        connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\r\n        connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\r\n        parentReady: { name: \"parentReady\", handle: this.handleParentReady.bind(this) },\r\n        parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\r\n        platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\r\n        platformUnload: { name: \"platformUnload\", handle: this.handlePlatformUnload.bind(this) },\r\n        platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\r\n        clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) },\r\n        manualUnload: { name: \"manualUnload\", handle: this.handleManualUnload.bind(this) }\r\n    };\r\n\r\n    constructor(private readonly settings: Glue42Core.WebPlatformConnection, private readonly logger: Logger, private readonly identity?: Identity) {\r\n        this.setUpMessageListener();\r\n        this.setUpUnload();\r\n\r\n        if (!this.settings.port) {\r\n            this.parent = window.opener || window.top;\r\n\r\n            this.parentType = window.opener ? \"opener\" :\r\n                window.name.indexOf(\"#wsp\") !== -1 ? \"workspace\" : \"top\";\r\n        }\r\n    }\r\n\r\n    public get transportWindowId(): string | undefined {\r\n        return this.publicWindowId;\r\n    }\r\n\r\n    public async sendObject(msg: object): Promise<void> {\r\n        if (!this.port) {\r\n            throw new Error(\"Cannot send message, because the port was not opened yet\");\r\n        }\r\n        this.port.postMessage(msg);\r\n    }\r\n\r\n    public get isObjectBasedTransport(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public onMessage(callback: (msg: string | object) => void): UnsubscribeFunction {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    }\r\n\r\n    public send(): Promise<void> {\r\n        return Promise.reject(\"not supported\");\r\n    }\r\n\r\n    public onConnectedChanged(callback: (connected: boolean, reason?: string) => void): UnsubscribeFunction {\r\n        return this.registry.add(\"onConnectedChanged\", callback);\r\n    }\r\n\r\n    public async open(): Promise<void> {\r\n\r\n        this.logger.debug(\"opening a connection to the web platform gateway.\");\r\n\r\n        await this.connect();\r\n\r\n        this.notifyStatusChanged(true);\r\n    }\r\n\r\n    public close(): Promise<void> {\r\n        // DO NOTHING\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public name(): string {\r\n        return \"web-platform\";\r\n    }\r\n\r\n    public reconnect(): Promise<void> {\r\n        // DO NOTHING\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private async connect(): Promise<void> {\r\n\r\n        if (this.parentReady) {\r\n            this.logger.debug(\"cancelling connection attempt, because this client's parent has already given a ready signal\");\r\n            return;\r\n        }\r\n\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"opening an internal web platform connection\");\r\n            this.port = this.settings.port;\r\n\r\n            this.publicWindowId = this.settings.windowId;\r\n\r\n            if (this.identity) {\r\n                this.identity.windowId = this.publicWindowId;\r\n            }\r\n\r\n            this.port.onmessage = (event): object[] => this.registry.execute(\"onMessage\", event.data);\r\n            this.logger.debug(\"internal web platform connection completed\");\r\n            return;\r\n        }\r\n\r\n        if (!this.parentType || !this.parent) {\r\n            throw new Error(\"Cannot initiate a connection, because there is no opener, no top and no port.\");\r\n        }\r\n\r\n        this.logger.debug(`opening a ${this.parentType === \"opener\" ? \"child\" : \"grandchild\"} client web platform connection`);\r\n\r\n        await this.waitParent(this.parent, this.parentType);\r\n        await this.initiateRemoteConnection(this.parent, this.parentType);\r\n        // I AM READY HERE\r\n        this.logger.debug(`the ${this.parentType === \"opener\" ? \"child\" : \"grandchild\"} client is connected`);\r\n    }\r\n\r\n    private initiateRemoteConnection(target: Window, parentType: \"opener\" | \"top\" | \"workspace\"): Promise<void> {\r\n\r\n        return PromisePlus<void>((resolve, reject) => {\r\n            this.connectionResolve = resolve;\r\n            this.connectionReject = reject;\r\n\r\n            this.myClientId = generate();\r\n\r\n            const bridgeInstanceId = this.parentType === \"workspace\" ? window.name.substring(0, window.name.indexOf(\"#wsp\")) : window.name;\r\n\r\n            const request = {\r\n                glue42core: {\r\n                    type: this.messages.connectionRequest.name,\r\n                    clientId: this.myClientId,\r\n                    clientType: parentType === \"top\" || parentType === \"workspace\" ? \"grandChild\" : \"child\",\r\n                    bridgeInstanceId\r\n                }\r\n            };\r\n\r\n            this.logger.debug(`sending connection request to ${parentType}`);\r\n\r\n            target.postMessage(request, this.defaultTargetString);\r\n        }, this.connectionRequestTimeout, \"The connection to the opener/top window timed out\");\r\n\r\n    }\r\n\r\n    private waitParent(target: Window, parentType: \"opener\" | \"top\" | \"workspace\"): Promise<void> {\r\n        return PromisePlus<void>((resolve) => {\r\n            this.parentPingResolve = resolve;\r\n\r\n            const message = {\r\n                glue42core: {\r\n                    type: parentType === \"opener\" ? this.messages.platformPing.name : this.messages.parentPing.name\r\n                }\r\n            };\r\n\r\n            this.logger.debug(`checking for ${parentType} window availability`);\r\n\r\n            target.postMessage(message, this.defaultTargetString);\r\n        }, this.parentPingTimeout, \"Cannot initiate glue, because this window was not opened or created by a glue client\");\r\n    }\r\n\r\n    private setUpMessageListener(): void {\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\r\n            // do not set up listener, because this is running as an internal client for the platform\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            const data = event.data?.glue42core;\r\n\r\n            if (!data || this.rejected) {\r\n                return;\r\n            }\r\n\r\n            if (!this.checkMessageTypeValid(data.type)) {\r\n                this.logger.error(`cannot handle the incoming glue42 core message, because the type is invalid: ${data.type}`);\r\n                return;\r\n            }\r\n\r\n            const messageType = data.type as MessageType;\r\n\r\n            this.logger.debug(`received valid glue42core message of type: ${messageType}`);\r\n\r\n            this.messages[messageType].handle(event);\r\n        });\r\n    }\r\n\r\n    private setUpUnload(): void {\r\n        if (this.settings.port) {\r\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\r\n            // do not set up listener, because this is running as an internal client for the platform\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"beforeunload\", () => {\r\n            const message = {\r\n                glue42core: {\r\n                    type: this.messages.clientUnload.name,\r\n                    data: {\r\n                        clientId: this.myClientId,\r\n                        ownWindowId: this.identity?.windowId\r\n                    }\r\n                }\r\n            };\r\n\r\n            if (this.parent) {\r\n                this.parent.postMessage(message, this.defaultTargetString);\r\n            }\r\n\r\n            this.port?.postMessage(message);\r\n        });\r\n    }\r\n\r\n    private handleParentReady(): void {\r\n        this.logger.debug(\"handling the ready signal from the parent, by resoling the pending promise.\");\r\n        this.parentReady = true;\r\n\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    }\r\n\r\n    private handlePlatformReady(): void {\r\n        this.logger.debug(\"the web platform gave the ready signal\");\r\n        this.parentReady = true;\r\n\r\n        if (this.parentPingResolve) {\r\n            this.parentPingResolve();\r\n            delete this.parentPingResolve;\r\n            return;\r\n        }\r\n\r\n        this.logger.debug(\"silently handling the ready signal from the top parent, because there is no defined promise\");\r\n    }\r\n\r\n    private handleConnectionAccepted(event: MessageEvent): void {\r\n        const data = event.data?.glue42core;\r\n\r\n        if (this.myClientId === data.clientId) {\r\n            return this.handleAcceptanceOfMyRequest(data);\r\n        }\r\n\r\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    private handleAcceptanceOfMyRequest(data: any): void {\r\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\r\n\r\n        if (!data.port) {\r\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\r\n            return;\r\n        }\r\n\r\n        this.publicWindowId = this.parentType === \"opener\" ? window.name :\r\n            this.parentType === \"top\" ? data.parentWindowId :\r\n                window.name.substring(0, window.name.indexOf(\"#wsp\"));\r\n\r\n        if (this.identity && this.parentType !== \"top\") {\r\n            this.identity.windowId = this.publicWindowId;\r\n        }\r\n\r\n        if (this.identity && data.appName) {\r\n            this.identity.application = data.appName;\r\n            this.identity.applicationName = data.appName;\r\n        }\r\n\r\n        this.port = data.port as MessagePort;\r\n        this.port.onmessage = (e): object[] => this.registry.execute(\"onMessage\", e.data);\r\n\r\n        if (this.connectionResolve) {\r\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\r\n            this.connectionResolve();\r\n            delete this.connectionResolve;\r\n            return;\r\n        }\r\n\r\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    private handleAcceptanceOfGrandChildRequest(data: any, event: MessageEvent): void {\r\n        this.logger.debug(`handling a connection accepted signal targeted at a grandchild: ${data.clientId}`);\r\n\r\n        const child = this.children.find((c) => c.grandChildId === data.clientId);\r\n\r\n        if (!child) {\r\n            this.logger.error(`cannot handle connection accepted for grandchild: ${data.clientId}, because there is no grandchild with this id`);\r\n            return;\r\n        }\r\n\r\n        child.connected = true;\r\n\r\n        this.logger.debug(`the grandchild connection for ${data.clientId} is set up, forwarding the success message and the gateway port`);\r\n\r\n        data.parentWindowId = this.publicWindowId;\r\n\r\n        child.source.postMessage(event.data, child.origin, [data.port]);\r\n        return;\r\n    }\r\n\r\n    private handleConnectionRejected(): void {\r\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\r\n        if (this.connectionReject) {\r\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\r\n            delete this.connectionReject;\r\n        }\r\n    }\r\n\r\n    private handleConnectionRequest(event: MessageEvent): void {\r\n        const source = event.source as Window;\r\n        const data = event.data.glue42core;\r\n\r\n        if (!data.clientType || data.clientType !== \"grandChild\") {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\r\n        }\r\n\r\n        if (!data.clientId) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\r\n        }\r\n\r\n        if (this.parentType !== \"opener\" || !this.parent) {\r\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\r\n        }\r\n\r\n        this.logger.debug(`handling a connection request for a grandchild: ${data.clientId}`);\r\n\r\n        this.children.push({ grandChildId: data.clientId, source, connected: false, origin: event.origin });\r\n\r\n        this.logger.debug(`grandchild: ${data.clientId} is prepared, forwarding connection request to the platform`);\r\n\r\n        this.parent.postMessage(event.data, this.defaultTargetString);\r\n    }\r\n\r\n    private handleParentPing(event: MessageEvent): void {\r\n\r\n        if (!this.parentReady) {\r\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n\r\n        if (!this.iAmConnected) {\r\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\r\n            return;\r\n        }\r\n\r\n        const message = {\r\n            glue42core: {\r\n                type: this.messages.parentReady.name\r\n            }\r\n        };\r\n\r\n        const source = event.source as Window;\r\n\r\n        this.logger.debug(\"responding to a parent ping with a ready message\");\r\n\r\n        source.postMessage(message, event.origin);\r\n    }\r\n\r\n    private handlePlatformUnload(event: MessageEvent): void {\r\n        this.logger.debug(\"detected a web platform unload\");\r\n\r\n        this.parentReady = false;\r\n\r\n        if (this.children.length) {\r\n            this.logger.debug(\"forwarding the platform unload to all known children and starting platform discovery polling\");\r\n            this.children.forEach((child) => child.source.postMessage(event.data, child.origin));\r\n        }\r\n\r\n        this.notifyStatusChanged(false, \"Gateway unloaded\");\r\n\r\n    }\r\n\r\n    private handleManualUnload(): void {\r\n        const message = {\r\n            glue42core: {\r\n                type: this.messages.clientUnload.name,\r\n                data: {\r\n                    clientId: this.myClientId,\r\n                    ownWindowId: this.identity?.windowId\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.parent) {\r\n            this.parent.postMessage(message, this.defaultTargetString);\r\n        }\r\n\r\n        this.port?.postMessage(message);\r\n    }\r\n\r\n    private handleClientUnload(event: MessageEvent): void {\r\n        const data = event.data.glue42core;\r\n        const clientId = data?.data.clientId;\r\n\r\n        if (!clientId) {\r\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\r\n            return;\r\n        }\r\n\r\n        const foundChild = this.children.find((child) => child.grandChildId === clientId);\r\n\r\n        if (!foundChild) {\r\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\r\n            return;\r\n        }\r\n\r\n        this.logger.debug(`handling grandchild unload for id: ${clientId}`);\r\n\r\n        this.children = this.children.filter((child) => child.grandChildId !== clientId);\r\n    }\r\n\r\n    private handlePlatformPing(): void {\r\n        this.logger.error(\"cannot handle platform ping, because this is not a platform calls handling component\");\r\n    }\r\n\r\n    private notifyStatusChanged(status: boolean, reason?: string): void {\r\n        this.iAmConnected = status;\r\n        this.registry.execute(\"onConnectedChanged\", status, reason);\r\n    }\r\n\r\n    private checkMessageTypeValid(typeToValidate: string): boolean {\r\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate as MessageType];\r\n    }\r\n\r\n    private rejectConnectionRequest(source: Window, origin: string, reason: string): void {\r\n        this.rejected = true;\r\n        this.logger.error(reason);\r\n\r\n        const rejection = {\r\n            glue42core: {\r\n                type: this.messages.connectionRejected.name\r\n            }\r\n        };\r\n\r\n        source.postMessage(rejection, origin);\r\n    }\r\n}\r\n","import {\r\n    default as CallbackFactory,\r\n    CallbackRegistry,\r\n} from \"callback-registry\";\r\nimport {\r\n    GW3Protocol,\r\n    Transport,\r\n    ConnectionSettings,\r\n    Identity,\r\n} from \"./types\";\r\nimport { Logger } from \"../logger/logger\";\r\n\r\nimport { Glue42Core } from \"../../glue\";\r\nimport InProcTransport from \"./transports/inProc\";\r\nimport SharedWorkerTransport from \"./transports/worker\";\r\nimport WS from \"./transports/ws\";\r\nimport GW3ProtocolImpl from \"./protocols/gw3\";\r\nimport { MessageReplayerImpl } from \"./replayer\";\r\nimport timer from \"../utils/timer\";\r\nimport WebPlatformTransport from \"./transports/webPlatform\";\r\n\r\n/**\r\n * A template for gateway connections - this is extended from specific protocols and transports.\r\n */\r\nexport default class Connection implements Glue42Core.Connection.API {\r\n\r\n    public peerId!: string;\r\n    public token!: string;\r\n    public info!: object;\r\n    public resolvedIdentity!: any;\r\n    public availableDomains!: Glue42Core.Connection.GWDomainInfo[];\r\n    public gatewayToken: string | undefined;\r\n    public replayer?: MessageReplayerImpl;\r\n\r\n    protected protocol: GW3Protocol;\r\n\r\n    // The message handlers that have to be executed for each received message\r\n    protected messageHandlers: {\r\n        [key: string]: { [key: string]: (msg: any) => void };\r\n    } = {};\r\n    protected ids = 1;\r\n    protected registry: CallbackRegistry = CallbackFactory();\r\n    protected _connected = false;\r\n    private isTrace = false;\r\n    private transport: Transport;\r\n\r\n    public get protocolVersion() {\r\n        return this.protocol?.protocolVersion;\r\n    }\r\n\r\n    constructor(private settings: ConnectionSettings, private logger: Logger) {\r\n        settings = settings || {};\r\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\r\n\r\n        if (settings.inproc) {\r\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\r\n        } else if (settings.sharedWorker) {\r\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\r\n        } else if (settings.webPlatform) {\r\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\r\n        } else if (settings.ws !== undefined) {\r\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\r\n        } else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n\r\n        this.isTrace = logger.canPublish(\"trace\");\r\n        logger.debug(`starting with ${this.transport.name()} transport`);\r\n\r\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\r\n        this.transport.onConnectedChanged(\r\n            this.handleConnectionChanged.bind(this)\r\n        );\r\n        this.transport.onMessage(this.handleTransportMessage.bind(this));\r\n\r\n        if (settings.replaySpecs && settings.replaySpecs.length) {\r\n            this.replayer = new MessageReplayerImpl(settings.replaySpecs);\r\n            this.replayer.init(this);\r\n        }\r\n    }\r\n\r\n    public send(message: object, options?: Glue42Core.Connection.SendMessageOptions): Promise<void> {\r\n        // create a message using the protocol\r\n        if (\r\n            this.transport.sendObject &&\r\n            this.transport.isObjectBasedTransport\r\n        ) {\r\n            const msg = this.protocol.createObjectMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(`>> ${JSON.stringify(msg)}`);\r\n            }\r\n            return this.transport.sendObject(msg, options);\r\n        } else {\r\n            const strMessage = this.protocol.createStringMessage(message);\r\n            if (this.isTrace) {\r\n                this.logger.trace(`>> ${strMessage}`);\r\n            }\r\n            return this.transport.send(strMessage, options);\r\n        }\r\n    }\r\n\r\n    public on<T>(\r\n        type: string,\r\n        messageHandler: (msg: T) => void\r\n    ): any {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n\r\n        const id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n\r\n        return {\r\n            type,\r\n            id,\r\n        };\r\n    }\r\n\r\n    // Remove a handler\r\n    public off(info: { type: string; id: number }) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    }\r\n\r\n    public get isConnected() {\r\n        return this.protocol.isLoggedIn;\r\n    }\r\n\r\n    public connected(callback: (server: string) => void): () => void {\r\n        return this.protocol.loggedIn(() => {\r\n            callback(this.settings.ws || this.settings.sharedWorker || \"\");\r\n        });\r\n    }\r\n\r\n    public disconnected(callback: () => void): () => void {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    }\r\n\r\n    public async login(authRequest: Glue42Core.Auth, reconnect?: boolean): Promise<Identity> {\r\n        // open the protocol in case it was closed by explicity logout\r\n        await this.transport.open();\r\n        timer(\"connection\").mark(\"transport-opened\");\r\n        const identity = this.protocol.login(authRequest, reconnect);\r\n        timer(\"connection\").mark(\"protocol-logged-in\");\r\n        return identity;\r\n    }\r\n\r\n    public async logout() {\r\n        await this.protocol.logout();\r\n        await this.transport.close();\r\n    }\r\n\r\n    public loggedIn(callback: () => void) {\r\n        return this.protocol.loggedIn(callback);\r\n    }\r\n\r\n    public domain(\r\n        domain: string,\r\n        successMessages?: string[],\r\n        errorMessages?: string[]\r\n    ): Glue42Core.Connection.GW3DomainSession {\r\n        return this.protocol.domain(\r\n            domain,\r\n            this.logger.subLogger(`domain=${domain}`),\r\n            successMessages,\r\n            errorMessages\r\n        );\r\n    }\r\n\r\n    public authToken(): Promise<string> {\r\n        return this.protocol.authToken();\r\n    }\r\n\r\n    public reconnect(): Promise<void> {\r\n        return this.transport.reconnect();\r\n    }\r\n\r\n    private distributeMessage(message: object, type: string) {\r\n        // Retrieve handlers for the message type\r\n        const handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            // Execute them\r\n            Object.keys(handlers).forEach((handlerId) => {\r\n                const handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    } catch (error) {\r\n                        try {\r\n                            // logger might not be there yet\r\n                            this.logger.error(`Message handler failed with ${error.stack}`, error);\r\n                        } catch (loggerError) {\r\n                            // tslint:disable-next-line:no-console\r\n                            console.log(\"Message handler failed\", error);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private handleConnectionChanged(connected: boolean) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        } else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    }\r\n\r\n    private handleTransportMessage(msg: string | object) {\r\n        let msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this.protocol.processStringMessage(msg);\r\n        } else {\r\n            msgObj = this.protocol.processObjectMessage(msg);\r\n        }\r\n\r\n        if (this.isTrace) {\r\n            this.logger.trace(`<< ${JSON.stringify(msgObj)}`);\r\n        }\r\n\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\n\r\nconst order: Glue42Core.LogLevel[] = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\r\n\r\nexport class Logger implements Glue42Core.Logger.API {\r\n    public static Interop: Glue42Core.Interop.API;\r\n    public static InteropMethodName = \"T42.AppLogger.Log\";\r\n\r\n    public static Instance: string;\r\n    public readonly path: string;\r\n\r\n    private subLoggers: Logger[] = [];\r\n    private _consoleLevel: Glue42Core.LogLevel | undefined;\r\n    private _publishLevel: Glue42Core.LogLevel | undefined;\r\n    private loggerFullName: string;\r\n    private includeTimeAndLevel: boolean;\r\n    private logFn: Glue42Core.CustomLogger = console;\r\n    private customLogFn: boolean = false;\r\n\r\n    constructor(public readonly name: string, private parent?: Logger, logFn?: Glue42Core.CustomLogger) {\r\n        this.name = name;\r\n\r\n        if (parent) {\r\n            this.path = `${parent.path}.${name}`;\r\n        } else {\r\n            this.path = name;\r\n        }\r\n\r\n        this.loggerFullName = `[${this.path}]`;\r\n        this.includeTimeAndLevel = !logFn;\r\n        if (logFn) {\r\n            this.logFn = logFn;\r\n            this.customLogFn = true;\r\n        }\r\n    }\r\n\r\n    public subLogger(name: string): Logger {\r\n        // Check if the sub-logger is already created\r\n        const existingSub = this.subLoggers.filter((subLogger) => {\r\n            return subLogger.name === name;\r\n        })[0];\r\n\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n\r\n        // Check if the name isn't the same as one of the parent properties\r\n        Object.keys(this).forEach((key) => {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n\r\n        const sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\r\n\r\n        // add sub-logger to sub-loggers array\r\n        this.subLoggers.push(sub);\r\n\r\n        return sub;\r\n    }\r\n\r\n    public publishLevel(level?: Glue42Core.LogLevel): Glue42Core.LogLevel | undefined {\r\n        if (level) {\r\n            this._publishLevel = level;\r\n        }\r\n\r\n        return this._publishLevel || this.parent?.publishLevel();\r\n    }\r\n\r\n    public consoleLevel(level?: Glue42Core.LogLevel): Glue42Core.LogLevel | undefined {\r\n        if (level) {\r\n            this._consoleLevel = level;\r\n        }\r\n\r\n        return this._consoleLevel || this.parent?.consoleLevel();\r\n    }\r\n\r\n    public log(message: string, level?: Glue42Core.LogLevel, error?: Error) {\r\n        this.publishMessage(level || \"info\", message, error);\r\n    }\r\n\r\n    public trace(message: string) {\r\n        this.log(message, \"trace\");\r\n    }\r\n\r\n    public debug(message: string) {\r\n        this.log(message, \"debug\");\r\n    }\r\n\r\n    public info(message: string) {\r\n        this.log(message, \"info\");\r\n    }\r\n\r\n    public warn(message: string) {\r\n        this.log(message, \"warn\");\r\n    }\r\n\r\n    public error(message: string, err?: Error) {\r\n        this.log(message, \"error\");\r\n    }\r\n\r\n    public canPublish(level: Glue42Core.LogLevel, compareWith?: Glue42Core.LogLevel) {\r\n        const levelIdx = order.indexOf(level);\r\n        const restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\r\n\r\n        return levelIdx >= restrictionIdx;\r\n    }\r\n\r\n    private publishMessage(level: Glue42Core.LogLevel, message: string, error?: Error) {\r\n        // Retrieve logger name and levels\r\n        const loggerName = this.loggerFullName;\r\n\r\n        // Add stack trace if the message is an error\r\n        if (level === \"error\" && !error) {\r\n            const e = new Error();\r\n            if (e.stack) {\r\n                message =\r\n                    message +\r\n                    \"\\n\" +\r\n                    e.stack\r\n                        .split(\"\\n\")\r\n                        .slice(3)\r\n                        .join(\"\\n\");\r\n            }\r\n        }\r\n\r\n        if (this.canPublish(level, this.publishLevel())) {\r\n            const interop = Logger.Interop;\r\n            if (interop) {\r\n                try {\r\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\r\n                        interop.invoke(Logger.InteropMethodName, {\r\n                            msg: `${message}`,\r\n                            logger: loggerName,\r\n                            level\r\n                        });\r\n                    }\r\n                } catch {\r\n                    // interop might not be ready yet\r\n                }\r\n            }\r\n        }\r\n\r\n        // Publish in console\r\n        if (this.canPublish(level)) {\r\n            let prefix = \"\";\r\n            if (this.includeTimeAndLevel) {\r\n                const date = new Date();\r\n                const time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}:${date.getMilliseconds()}`;\r\n                prefix = `[${time}] [${level}] `;\r\n            }\r\n            const toPrint = `${prefix}${loggerName}: ${message}`;\r\n            switch (level) {\r\n                case \"trace\":\r\n                    // tslint:disable-next-line:no-console\r\n                    this.logFn.debug(toPrint);\r\n                    break;\r\n                case \"debug\":\r\n                    // tslint:disable-next-line:no-console\r\n                    if (this.logFn.debug) {\r\n                        // tslint:disable-next-line:no-console\r\n                        this.logFn.debug(toPrint);\r\n                    } else {\r\n                        // tslint:disable-next-line:no-console\r\n                        this.logFn.log(toPrint);\r\n                    }\r\n                    break;\r\n                case \"info\":\r\n                    // tslint:disable-next-line:no-console\r\n                    this.logFn.info(toPrint);\r\n                    break;\r\n                case \"warn\":\r\n                    // tslint:disable-next-line:no-console\r\n                    this.logFn.warn(toPrint);\r\n                    break;\r\n                case \"error\":\r\n                    // tslint:disable-next-line:no-console\r\n                    this.logFn.error(toPrint, error);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export const GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nexport const GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nexport const GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nexport const GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nexport const GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\n\r\nexport const GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nexport const GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nexport const GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\n\r\nexport const GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nexport const GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\n\r\nexport const GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nexport const GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nexport const GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\r\n","import { Glue42Core} from \"../../glue\";\r\n\r\nimport * as msg from \"./bridges/gw3/messages\";\r\n\r\nexport const ContextMessageReplaySpec: Glue42Core.Connection.MessageReplaySpec = {\r\n    get name(): string {\r\n        return \"context\";\r\n    },\r\n\r\n    get types(): string[] {\r\n        return [\r\n            msg.GW_MESSAGE_CREATE_CONTEXT,\r\n            msg.GW_MESSAGE_ACTIVITY_CREATED,\r\n            msg.GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_CONTEXT_ADDED,\r\n            msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            msg.GW_MESSAGE_DESTROY_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n            msg.GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\r\n","import { Glue42Core } from \"../glue\";\r\nimport { InternalConfig, GDStaringContext } from \"./types\";\r\nimport generate from \"shortid\";\r\nimport Utils from \"./utils/utils\";\r\nimport { ContextMessageReplaySpec } from \"./contexts/contextMessageReplaySpec\";\r\nimport { version as pjsonVersion } from \"../package.json\";\r\nimport { ConnectionSettings } from \"./connection/types\";\r\n\r\nexport default function (configuration: Glue42Core.Config, ext: Glue42Core.Extension, glue42gd: Glue42Core.GDObject | undefined): InternalConfig {\r\n\r\n    let nodeStartingContext: GDStaringContext;\r\n    if (Utils.isNode()) {\r\n        const startingContextString = process.env._GD_STARTING_CONTEXT_;\r\n        if (startingContextString) {\r\n            try {\r\n                nodeStartingContext = JSON.parse(startingContextString);\r\n            } catch {\r\n                // Do nothing - we will continue with the flow as if there is no starting context\r\n            }\r\n        }\r\n    }\r\n\r\n    function getConnection(): ConnectionSettings {\r\n\r\n        const gwConfig = configuration.gateway;\r\n\r\n        const protocolVersion = gwConfig?.protocolVersion ?? 3;\r\n        const reconnectInterval = gwConfig?.reconnectInterval;\r\n        const reconnectAttempts = gwConfig?.reconnectAttempts;\r\n\r\n        const defaultWs = \"ws://localhost:8385\";\r\n        let ws = gwConfig?.ws;\r\n        const sharedWorker = gwConfig?.sharedWorker;\r\n        const inproc = gwConfig?.inproc;\r\n        const webPlatform = gwConfig?.webPlatform ?? undefined;\r\n\r\n        // If running in GD use the injected ws URL\r\n        if (glue42gd) {\r\n            // GD3\r\n            ws = glue42gd.gwURL;\r\n        }\r\n        // if running in Node app, started from GD, use the ws from starting context\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\r\n            ws = nodeStartingContext.gwURL;\r\n        }\r\n\r\n        // if nothing specified use default WS\r\n        if (!ws && !sharedWorker && !inproc) {\r\n            ws = defaultWs;\r\n        }\r\n\r\n        let instanceId: string | undefined;\r\n        let windowId: string | undefined;\r\n        let pid: number | undefined;\r\n        let environment: string | undefined;\r\n        let region: string | undefined;\r\n        const appName = getApplication();\r\n        let uniqueAppName = appName;\r\n        if (typeof glue42gd !== \"undefined\") {\r\n            windowId = glue42gd.windowId;\r\n            pid = glue42gd.pid;\r\n            if (glue42gd.env) {\r\n                environment = glue42gd.env.env;\r\n                region = glue42gd.env.region;\r\n            }\r\n            // G4E-1668\r\n            uniqueAppName = glue42gd.application ?? \"glue-app\";\r\n            instanceId = glue42gd.appInstanceId;\r\n        } else if (Utils.isNode()) {\r\n            pid = process.pid;\r\n            if (nodeStartingContext) {\r\n                environment = nodeStartingContext.env;\r\n                region = nodeStartingContext.region;\r\n                instanceId = nodeStartingContext.instanceId;\r\n            }\r\n        } else {\r\n            // this is the case where this is is running in Glue42 Core V2\r\n            // in this case the windowId of the identity is set by the WebTransport, because it needs to communicate with possible parents\r\n        }\r\n\r\n        // replay specs for core connection\r\n        const replaySpecs = configuration.gateway?.replaySpecs ?? [];\r\n        // inject Context message replay\r\n        replaySpecs.push(ContextMessageReplaySpec);\r\n\r\n        return {\r\n            identity: {\r\n                application: uniqueAppName,\r\n                applicationName: appName,\r\n                windowId,\r\n                instance: instanceId,\r\n                process: pid,\r\n                region,\r\n                environment,\r\n                api: ext.version || pjsonVersion\r\n            },\r\n            reconnectInterval,\r\n            ws,\r\n            sharedWorker,\r\n            webPlatform,\r\n            inproc,\r\n            protocolVersion,\r\n            reconnectAttempts,\r\n            replaySpecs,\r\n        };\r\n    }\r\n\r\n    function getApplication() {\r\n        if (configuration.application) {\r\n            return configuration.application;\r\n        }\r\n\r\n        if (glue42gd) {\r\n            return glue42gd.applicationName;\r\n        }\r\n\r\n        const uid = generate();\r\n        if (Utils.isNode()) {\r\n            if (nodeStartingContext) {\r\n                return nodeStartingContext.applicationConfig.name;\r\n            }\r\n\r\n            return \"NodeJS\" + uid;\r\n        }\r\n\r\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n            return document.title + ` (${uid})`;\r\n        }\r\n\r\n        return uid;\r\n    }\r\n\r\n    function getAuth(): Glue42Core.Auth | undefined {\r\n        if (typeof configuration.auth === \"string\") {\r\n            return {\r\n                token: configuration.auth\r\n            };\r\n        }\r\n\r\n        if (configuration.auth) {\r\n            return configuration.auth;\r\n        }\r\n\r\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\r\n            return {\r\n                gatewayToken: nodeStartingContext.gwToken\r\n            };\r\n        }\r\n\r\n        if (configuration.gateway?.webPlatform || configuration.gateway?.inproc || configuration.gateway?.sharedWorker) {\r\n            return {\r\n                username: \"glue42\", password: \"glue42\"\r\n            };\r\n        }\r\n    }\r\n\r\n    function getLogger(): { console: Glue42Core.LogLevel; publish: Glue42Core.LogLevel } {\r\n        let config = configuration.logger;\r\n        const defaultLevel = \"warn\";\r\n        if (!config) {\r\n            config = defaultLevel;\r\n        }\r\n\r\n        // console level can be overridden by a gd setting\r\n        let gdConsoleLevel: Glue42Core.LogLevel | undefined;\r\n        if (glue42gd) {\r\n            gdConsoleLevel = glue42gd.consoleLogLevel;\r\n        }\r\n\r\n        if (typeof config === \"string\") {\r\n            return { console: gdConsoleLevel ?? config, publish: defaultLevel };\r\n        }\r\n\r\n        return {\r\n            console: gdConsoleLevel ?? config.console ?? defaultLevel,\r\n            publish: config.publish ?? defaultLevel\r\n        };\r\n    }\r\n\r\n    const connection = getConnection();\r\n    let application: string = getApplication();\r\n    if (typeof window !== \"undefined\") {\r\n        const windowAsAny = window as any;\r\n        const containerApplication = windowAsAny.htmlContainer ?\r\n            `${windowAsAny.htmlContainer.containerName}.${windowAsAny.htmlContainer.application}` :\r\n            windowAsAny?.glue42gd?.application;\r\n        if (containerApplication) {\r\n            application = containerApplication;\r\n        }\r\n    }\r\n\r\n    return {\r\n        bus: configuration.bus ?? false,\r\n        application,\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection,\r\n        metrics: configuration.metrics ?? true,\r\n        contexts: configuration.contexts ?? true,\r\n        version: ext.version || pjsonVersion,\r\n        libs: ext.libs ?? [],\r\n        customLogger: configuration.customLogger\r\n    };\r\n}\r\n","import { Glue42Core } from \"../../../../glue\";\r\nimport { ContextSubscriptionKey } from \"../types\";\r\n\r\nexport class GW3ContextData {\r\n    // invariants:\r\n    // - at least one of { isAnnounced, hasCallbacks() } must be truthy\r\n    //     (so no state (0) instances are kept)\r\n    // - name is defined\r\n    // - isAnnounced cannot go from true to false\r\n    // - !isAnnounced => activityId === undefined\r\n    // - !isAnnounced => contextId === undefined\r\n    // - isAnnounced => contextId !== undefined\r\n    // - !isAnnounced => context == {}\r\n    // - !isAnnounced => !joinedActivity\r\n    // - activityId === undefined => !joinedActivity\r\n    // - joinedActivity => activityId !== undefined !\r\n    // - activityId != undefined => name === activityId\r\n    // - !isAnnounced => sentExplicitSubscription === false\r\n    // - !hasCallbacks => sentExplicitSubscription === false\r\n    // - context is defaulted to {}, not null or undefined\r\n\r\n    // the name of this context; it's what our clients use to (un)subscribe\r\n    // to it; for an activity context it's the same as activityId\r\n    public name: string;\r\n\r\n    // the id of the context as assigned by the GW; only known after it has\r\n    // been announced\r\n    public contextId: string | undefined;\r\n\r\n    // since GW3 only sends a snapshot on subscription/activity creation,\r\n    // we need to keep track of the context state ourselves, for the sake\r\n    // of any additional subsequent subscribers (i.e. so we can give them\r\n    // the context snapshot so far)\r\n    public context: {};\r\n\r\n    // has the context been announced by the GW?\r\n    public isAnnounced: boolean;\r\n\r\n    public joinedActivity: boolean | undefined;\r\n\r\n    // callbacks to invoke on context update\r\n    public updateCallbacks: { [index: number]: (data: any, delta: any, removed: string[], key: ContextSubscriptionKey, extraData?: any) => void } = {};\r\n\r\n    // iff activity context, the id of the activity to which it belongs\r\n    public activityId: string | undefined;\r\n\r\n    public sentExplicitSubscription: boolean | undefined;\r\n\r\n    constructor(contextId: string | undefined, name: string, isAnnounced: boolean, activityId?: string) {\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n\r\n    public hasCallbacks() {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    }\r\n\r\n    // for reference only\r\n    // should never return 0\r\n    public getState(): number {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport { ContextDelta } from \"./bridges/types\";\r\nimport { Logger } from \"../logger/logger\";\r\n\r\nexport function applyContextDelta(\r\n    context: any,\r\n    delta: ContextDelta,\r\n    logger: Logger) {\r\n\r\n    try {\r\n        if (logger?.canPublish(\"trace\")) {\r\n            logger?.trace(`applying context delta ${JSON.stringify(delta)} on context ${JSON.stringify(context)}`);\r\n        }\r\n        if (!delta) {\r\n            return context;\r\n        }\r\n\r\n        if (delta.reset) {\r\n            context = { ...delta.reset };\r\n            return context;\r\n        }\r\n\r\n        context = deepClone(context, undefined);\r\n\r\n        if (delta.commands) {\r\n            for (const command of delta.commands) {\r\n                if (command.type === \"remove\") {\r\n                    deletePath(context, command.path);\r\n                } else if (command.type === \"set\") {\r\n                    setValueToPath(context, command.value, command.path);\r\n                }\r\n            }\r\n            // if there is a commands property ignore the rest (v1 added/updated/removed)\r\n            return context;\r\n        }\r\n\r\n        const added = delta.added;\r\n        const updated = delta.updated;\r\n        const removed = delta.removed;\r\n\r\n        if (added) {\r\n            Object.keys(added).forEach((key) => {\r\n                context[key] = added[key];\r\n            });\r\n        }\r\n\r\n        if (updated) {\r\n            Object.keys(updated).forEach((key) => {\r\n                mergeObjectsProperties(key, context, updated);\r\n            });\r\n        }\r\n\r\n        if (removed) {\r\n            removed.forEach((key) => {\r\n                delete context[key];\r\n            });\r\n        }\r\n\r\n        return context;\r\n    } catch (e) {\r\n        logger?.error(`error applying context delta ${JSON.stringify(delta)} on context ${JSON.stringify(context)}`, e);\r\n        return context;\r\n    }\r\n}\r\n\r\n// https://stackoverflow.com/a/40294058/1527706\r\nexport function deepClone(obj: any, hash?: WeakMap<any, any>): any {\r\n    hash = hash || new WeakMap<any, any>();\r\n    if (Object(obj) !== obj) { return obj; } // primitives\r\n    if (obj instanceof Set) { return new Set(obj); } // See note about this!\r\n    if (hash.has(obj)) { return hash.get(obj); } // cyclic reference\r\n    const result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, ([key, val]) => result.set(key, deepClone(val, hash)));\r\n    }\r\n    return Object.assign(result, ...Object.keys(obj).map(\r\n        (key) => ({ [key]: deepClone(obj[key], hash) })));\r\n}\r\n\r\n/*\r\nmergeObjectsProperties(\r\n    \"a\",\r\n    { a: { b: { c: 1, e: 1 }, x: { y: 1 }, foo: { moo: \"bar\" } } },\r\n    { a: { b: { d: 1, e: 2 }, foo: \"bar\" } });\r\n\r\n    => { a: { b: { c: 1, e: 2 } }, x: { y: 1 }, foo: \"bar\" }\r\n*/\r\n\r\nconst mergeObjectsProperties = (key: string, what: any, withWhat: any) => {\r\n\r\n    const right = withWhat[key];\r\n\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n\r\n    const left = what[key];\r\n\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n\r\n    what[key] = Object.assign({}, left, right);\r\n\r\n    return what;\r\n};\r\n\r\n// https://stackoverflow.com/a/6713782/1527706\r\nexport function deepEqual(x: any, y: any) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    // if both x and y are null or undefined and exactly the same\r\n\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    // if they are not strictly equal, they both need to be Objects\r\n\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    // they must have the exact same prototype chain, the closest we can do is\r\n    // test there constructor.\r\n\r\n    for (const p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        // other properties were tested using x.constructor === y.constructor\r\n\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        // allows to compare x[ p ] and y[ p ] when set to undefined\r\n\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        // if they have the same strict value or identity then they are equal\r\n\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        // Numbers, Strings, Functions, Booleans must be strictly equal\r\n\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n        // Objects and Arrays must be tested recursively\r\n    }\r\n\r\n    for (const p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        // allows x[ p ] to be set to undefined\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function setValueToPath(obj: any, value: any, path: string) {\r\n    const pathArr = path.split(\".\");\r\n    let i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            // path does not exist, create empty object\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        if (typeof obj[pathArr[i]] !== \"object\") {\r\n            // handle the case where we have {a: 1} and we call set({a: {aa: 2}})\r\n            obj[pathArr[i]] = {};\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    obj[pathArr[i]] = value;\r\n}\r\n\r\nexport function isSubset(superObj: any, subObj: any): boolean {\r\n    return Object.keys(subObj).every((ele) => {\r\n        if (typeof subObj[ele] === \"object\") {\r\n            return isSubset(superObj?.[ele] || {}, subObj[ele] || {});\r\n        }\r\n        return subObj[ele] === superObj?.[ele];\r\n    });\r\n}\r\n\r\nfunction deletePath(obj: any, path: string) {\r\n    const pathArr = path.split(\".\");\r\n    let i;\r\n    for (i = 0; i < pathArr.length - 1; i++) {\r\n        if (!obj[pathArr[i]]) {\r\n            // path does not exist, we're not removing anything\r\n            return;\r\n        }\r\n        obj = obj[pathArr[i]];\r\n    }\r\n    delete obj[pathArr[i]];\r\n}\r\n","import { Glue42Core } from \"../../../../glue\";\r\nimport { ContextBridge } from \"../../contextBridge\";\r\nimport { GW3ContextData as ContextData } from \"./contextData\";\r\nimport { applyContextDelta, deepEqual, deepClone, setValueToPath } from \"../../helpers\";\r\nimport * as msg from \"./messages\";\r\nimport { ContextMessage } from \"./contextMessage\";\r\nimport { ContextMessageReplaySpec } from \"../../contextMessageReplaySpec\";\r\nimport { Logger } from \"../../../logger/logger\";\r\nimport Connection from \"../../../connection/connection\";\r\nimport { ContextsConfig } from \"../../contextsModule\";\r\nimport { ContextName, ContextSubscriptionKey, ContextDelta, ContextDeltaCommand } from \"../types\";\r\n\r\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n// GW3Bridge implementation notes\r\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//\r\n// ===========================\r\n// Terminology used\r\n// ===========================\r\n//\r\n// - gw-subscribe (verb):\r\n//      send SUBSCRIBE CONTEXT to GW se we see CONTEXT UPDATED messages,\r\n//      or\r\n//      get implicitly subscribed as consequence of joining activity\r\n//      sending the SUBSCRIBE CONTEXT message is done internally by this\r\n//      class whenever a ContextData item in _contextNameToData reaches\r\n//      state (3) (see 'States of a context' in gw3ContextData.ts)\r\n// - bridge-subscribe (verb):\r\n//      call gw3Bridge.subscribe method; we need to make sure we've\r\n//      gw-subscribed if/as soon as the target context is announced\r\n//      this is what consumers of this class do\r\n// - bridge-subscription (noun):\r\n//      the result of bridge-subscribe, and the state of having a handler\r\n//      subscribed to a context\r\n// - active subscription: bridge-subscription which will cause the handler\r\n//      to observe context changes until someone calls unsubscribe() here\r\n//      or the subscription becomes 'inactive'\r\n// - inactive subscription: bridge-subscription which will NOT cause the\r\n//      handler to observe context changes; this happens to\r\n//      bridge-subscriptions on activity contexts if we leave the activity.\r\n//      There is NO way to check if a subscription is active or not and it's\r\n//      not reflected in the contextData state.\r\n//\r\n// ===========================\r\n// General information\r\n// ===========================\r\n//\r\n// This class exposes the GW context subscription and updating features\r\n// using the subscribe/unsubscribe/update/createContext methods.\r\n//\r\n// The main logic is related to tracking the states of contexts (shared or\r\n// activity), represented by ContextData entries in _contextNameToData, and\r\n// reacting to gateway messages accordingly.\r\n//\r\n// ===========================\r\n// States of an ContextData object\r\n// ===========================\r\n//\r\n// (0) nothing (not defined, or deleted) - such entries are NOT kept in collections\r\n// (1) unknown but bridge-subscribed to\r\n// (2) announced but not bridge-subscribed to\r\n// (3) both announced and bridge-subscribed to (so also gw-subscribed)\r\n//\r\n//       sub/unsub   GW ann\r\n//      +-------->(1)-----+\r\n//      |                 |\r\n//      |                 |\r\n//      V       destroy   v\r\n// *-->(0)<--------------(3)\r\n//      |^---------+      ^\r\n//      |  destroy |      |\r\n//      |          |      |\r\n//      +-------->(2)<----+\r\n//        GW ann    subscribe/unsub\r\n//\r\n// You can look for the states and transitions in the code below, e.g.\r\n// (0) -> (1)\r\n//\r\n// Note: if it's not our activity context, we need to gw-(un)subscribe to the\r\n// GW update messages on certain transitions:\r\n// - on changes from { (1), (2) } -> (3) we send a subscribe message\r\n// - on changes from (3) -> (2) we send an unsubscribe message\r\n// - on destruction, we drop all the information about the context; let\r\n// anyone subscribe to it and create a new contextData in state (1), we don't\r\n// care - these subscriptions are inactive from the get go, since the context\r\n// can't be created again.\r\n//\r\n// The contextData also contains the current snapshot of the context if it's\r\n// currently gw-subscribed to (so states (2\"') and (3) below).\r\n//\r\n// Note: We're mostly going to the trouble of keeping unannounced contexts\r\n// (state (1)) in order to allow other GW message subscribers to see a new\r\n// context being created and subscribe to it before the message has reached\r\n// our handler. Also, only sending a CONTEXT SUBSCRIBE on state (3) instead\r\n// of on GW announce means no unnecessary updates are being distributed to\r\n// every instance of this library.\r\n//\r\n// Also, in the HC subscribing to an unknown context is OK as well so we're\r\n// keeping this behavior.\r\n//\r\n// Note: above is an abridged version of the state machine; states (2) and (3)\r\n// have three substates depending on whether the context is a global context,\r\n// our own activity context, or a foreign activity's context. Subscription\r\n// messages are only sent on { (1), (2'), (2\") } -> { (3'), (3\") }, with the\r\n// unsubscribe message sent on { (3'), (3\"), (3\"') } -> { (1), (2'), (2\") }\r\n// if a  subscribe was sent previously (so we'll send a final unsubscribe if\r\n// we subscribe to a foreign activity's context, then join the activity, then\r\n// unsubscribe - this is to avoid still potentially receiving unwanted updates\r\n// if we leave the activity).\r\n//\r\n// Full state diagram (not showing 'destroy' transitions):\r\n//\r\n//        join activity\r\n//      +------------------>(3\"')<------+\r\n//      |                    ^          |\r\n//      |                    | join     |\r\n//      |                    | activity |\r\n//      | activity created   |          |\r\n//      +------------------>(3\")<----+  |\r\n//      |                            |  |\r\n//      | global ctx ann             |  |\r\n//      +------------------>(3')<-+  |  |\r\n//      |                         |  |  |\r\n//      |                         |  |  |\r\n//     (1)                        |  |  |\r\n//      ^                         |  |  |\r\n//      | bridge-(un)subscribe   bridge-(un)subscribe\r\n//      |                         |  |  |\r\n//      V                         |  |  |\r\n// *-->(0)                        |  |  |\r\n//      |                         |  |  |\r\n//      | global ctx ann          |  |  |\r\n//      +------------------>(2')<-+  |  |\r\n//      |                            |  |\r\n//      | activity created           |  |\r\n//      +------------------>(2\")<----+  |\r\n//      |                    |          |\r\n//      |                    | join     |\r\n//      |                    | activity |\r\n//      | join activity      V          |\r\n//      +------------------>(2\"')<------+\r\n//\r\n// ===========================\r\n// Supported use cases\r\n// ===========================\r\n//\r\n// - bridge-(un)subscribe to shared context by name\r\n// - bridge-(un)subscribe to activity context for activity we ARE a member of\r\n//      - the context name is the activity id\r\n//      - here the subscriptions become inactive if we leave the activity\r\n//      - HOWEVER these subscriptions will become inactive if we leave the\r\n//      activity, and any further subscriptions to the activity's context\r\n//      will be inactive.\r\n//          The protocol provides no way for us to know other than through\r\n//      the LEAVE ACTIVITY success message which is sent by our peer and we\r\n//      can't observe it here, so we have no way to know to send an explicit\r\n//      subscription in order to reactivate the bridge-subscription.\r\n//          We could deal with this by extending the GW connection to allow\r\n//      us to inspect outgoing messages and react to the LEAVE ACTIVITY, but\r\n//      keeping a few stale objects around isn't worth the code complexity.\r\n//          This transition would be represented by (2\"') -> (2\") and\r\n//      (3\"') -> (3\") in the state diagram, where (3\"') -> (3\") would prompt\r\n//      a subscribe message.\r\n// - bridge-(un)subscribe to context of activity we're NOT in\r\n//      - the context name is the activity id\r\n//      - the subscription will stay active even if we join the activity later\r\n//      - again, these subscriptions will become inactive if we leave the\r\n//      activity\r\n//\r\n// Also note that unsubscribing from destroyed contexts is not required,\r\n// as the data is cleared up automatically (but it doesn't hurt).\r\n// Unsubscriptions are guaranteed to be safe and idempotent.\r\nexport class GW3Bridge implements ContextBridge {\r\n    private _logger: Logger;\r\n    private _connection: Connection;\r\n    // used for sending messages as it provides a promise-based interface\r\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\r\n\r\n    // contexts in state { (1), (2), (3) }\r\n    private _contextNameToData: { [contextName: string]: ContextData } = {};\r\n\r\n    // for disposing purposes only\r\n    private _gw3Subscriptions: any[] = [];\r\n\r\n    // increment for every bridge-subscribe; used to unsubscribe()\r\n    private _nextCallbackSubscriptionNumber = 0;\r\n\r\n    // mapping announced contexts' name <-> id\r\n    private _contextNameToId: { [contextName: string]: string } = {};\r\n    private _contextIdToName: { [contextId: string]: string } = {};\r\n    private _protocolVersion?: number = undefined;\r\n    private get protocolVersion(): number {\r\n        if (!this._protocolVersion) {\r\n            const contextsDomainInfo = this._connection.availableDomains.find((d) => d.uri === \"context\");\r\n            this._protocolVersion = contextsDomainInfo?.version ?? 1;\r\n        }\r\n        return this._protocolVersion;\r\n    }\r\n\r\n    public get setPathSupported() {\r\n        return this.protocolVersion >= 2;\r\n    }\r\n\r\n    public constructor(config: ContextsConfig) {\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\r\n            \"global\",\r\n            [\r\n                msg.GW_MESSAGE_CONTEXT_CREATED,\r\n                msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n                msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n                msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n            ]);\r\n\r\n        // TODO: logging, validation and error handling\r\n\r\n        this.subscribeToContextCreatedMessages();\r\n\r\n        this.subscribeToContextUpdatedMessages();\r\n\r\n        this.subscribeToContextDestroyedMessages();\r\n\r\n        this._connection.replayer?.drain(\r\n            ContextMessageReplaySpec.name,\r\n            (message) => {\r\n                const type = (message as any).type;\r\n                if (!type) {\r\n                    return;\r\n                }\r\n\r\n                if (type === msg.GW_MESSAGE_CONTEXT_CREATED ||\r\n                    type === msg.GW_MESSAGE_CONTEXT_ADDED ||\r\n                    type === msg.GW_MESSAGE_ACTIVITY_CREATED) {\r\n                    this.handleContextCreatedMessage(message as ContextMessage);\r\n                } else if (type === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                    type === msg.GW_MESSAGE_CONTEXT_UPDATED ||\r\n                    type === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n                    this.handleContextUpdatedMessage(message as ContextMessage);\r\n                } else if (type === msg.GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                    type === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                    this.handleContextDestroyedMessage(message as ContextMessage);\r\n                }\r\n            });\r\n    }\r\n\r\n    public dispose(): void {\r\n        for (const sub of this._gw3Subscriptions) {\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (const contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    }\r\n\r\n    public createContext(name: ContextName, data: any): Promise<string> {\r\n        return this._gw3Session\r\n            .send<ContextMessage>({\r\n                type: msg.GW_MESSAGE_CREATE_CONTEXT,\r\n                domain: \"global\",\r\n                name,\r\n                data,\r\n                lifetime: \"retained\",\r\n            })\r\n            .then((createContextMsg: ContextMessage) => {\r\n                this._contextNameToId[name] = createContextMsg.context_id;\r\n                this._contextIdToName[createContextMsg.context_id] = name;\r\n                const contextData = this._contextNameToData[name] || new ContextData(createContextMsg.context_id, name, true, undefined);\r\n                contextData.isAnnounced = true;\r\n                contextData.name = name;\r\n                contextData.contextId = createContextMsg.context_id;\r\n                contextData.context = data;\r\n                this._contextNameToData[name] = contextData;\r\n                return createContextMsg.context_id;\r\n            });\r\n    }\r\n\r\n    public all(): ContextName[] {\r\n        return Object.keys(this._contextNameToData)\r\n            .filter((name) => this._contextNameToData[name].isAnnounced);\r\n    }\r\n\r\n    public async update(name: ContextName, delta: any): Promise<void> {\r\n\r\n        // - send context update message\r\n        //\r\n        // - on success, apply delta to context currently in contextData\r\n\r\n        // should we implicitly create the context?\r\n\r\n        const contextData = this._contextNameToData[name];\r\n\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, delta) as any as Promise<void>;\r\n        }\r\n\r\n        // TODO: explain why --> because this\r\n        let currentContext = contextData.context;\r\n        if (!contextData.hasCallbacks()) {\r\n            currentContext = await this.get(contextData.name);\r\n        }\r\n\r\n        const calculatedDelta =\r\n            this.protocolVersion === 2 ?\r\n                this.calculateContextDeltaV2(currentContext, delta) :\r\n                this.calculateContextDeltaV1(currentContext, delta);\r\n\r\n        if (!Object.keys(calculatedDelta.added).length\r\n            && !Object.keys(calculatedDelta.updated).length\r\n            && !calculatedDelta.removed.length\r\n            && !calculatedDelta.commands?.length) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this._gw3Session\r\n            .send({\r\n                type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n                domain: \"global\",\r\n                context_id: contextData.contextId,\r\n                delta: calculatedDelta,\r\n            }, {}, { skipPeerId: false })\r\n            .then((gwResponse: any) => {\r\n                this.handleUpdated(contextData, calculatedDelta, {\r\n                    updaterId: gwResponse.peer_id\r\n                });\r\n            });\r\n    }\r\n\r\n    public set(name: ContextName, data: any): Promise<void> {\r\n\r\n        const contextData = this._contextNameToData[name];\r\n\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data) as any as Promise<void>;\r\n        }\r\n\r\n        // SBGW_D-194\r\n        return this._gw3Session\r\n            .send({\r\n                type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n                domain: \"global\",\r\n                context_id: contextData.contextId,\r\n                delta: { reset: data },\r\n            }, {}, { skipPeerId: false })\r\n            .then((gwResponse: any) => {\r\n                this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n            });\r\n    }\r\n\r\n    public setPath(name: ContextName, path: string, value: any): Promise<void> {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        return this.setPaths(name, [{ path, value }]);\r\n    }\r\n\r\n    public setPaths(name: ContextName, pathValues: Glue42Core.Contexts.PathValue[]): Promise<void> {\r\n        if (!this.setPathSupported) {\r\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\r\n        }\r\n        const contextData = this._contextNameToData[name];\r\n\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            const obj = {};\r\n            for (const pathValue of pathValues) {\r\n                setValueToPath(obj, pathValue.value, pathValue.path);\r\n            }\r\n\r\n            return this.createContext(name, obj) as any as Promise<void>;\r\n        }\r\n\r\n        const commands: ContextDeltaCommand[] = [];\r\n        for (const pathValue of pathValues) {\r\n            if (pathValue.value === null) {\r\n                commands.push({ type: \"remove\", path: pathValue.path });\r\n            } else {\r\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\r\n            }\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n                type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n                domain: \"global\",\r\n                context_id: contextData.contextId,\r\n                delta: { commands }\r\n            }, {}, { skipPeerId: false })\r\n            .then((gwResponse: any) => {\r\n                this.handleUpdated(contextData, { added: {}, removed: [], updated: {}, commands }, { updaterId: gwResponse.peer_id });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Return a context's data asynchronously as soon as any becomes available\r\n     */\r\n    public get(name: ContextName): Promise<any> {\r\n\r\n        const contextData = this._contextNameToData[name];\r\n        // Three cases here:\r\n        // 1) The context does not exist and is not announced by the GW -> return {}\r\n        // 2) The context exists but we don't track it -> subscribe and return the object when we get the subscription result from GW\r\n        // 3) The context exists and we're tracking it -> just return the last state we have\r\n\r\n        // 1)\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return Promise.resolve({});\r\n        }\r\n\r\n        // 2)\r\n        if (contextData && !contextData.hasCallbacks()) {\r\n            return new Promise<any>(async (resolve, _) => {\r\n                this.subscribe(name, (data: any, _d: any, _r: string[], un: ContextSubscriptionKey) => {\r\n                    this.unsubscribe(un);\r\n                    resolve(data);\r\n                });\r\n            });\r\n        }\r\n\r\n        // 3)\r\n        const context = contextData?.context ?? {};\r\n        return Promise.resolve(context);\r\n    }\r\n\r\n    /**\r\n     * Creates a subscription to a given context which may or may not exist/be\r\n     * announced as of yet.\r\n     *\r\n     * NB: This method publishes an initial snapshot on subscription. Note that\r\n     * at this point the method itself may not have returned and the returned\r\n     * ContextSubscriptionKey is not saved in the return variable; if you want\r\n     * to unsubscribe from within the subscription callback, use the key argument\r\n     * of the callback.\r\n     */\r\n    public subscribe(\r\n        name: ContextName,\r\n        callback: (\r\n            data: any,\r\n            delta: any,\r\n            removed: string[],\r\n            key: ContextSubscriptionKey,\r\n            extraData?: any) => void)\r\n        : Promise<ContextSubscriptionKey> {\r\n\r\n        // - populate contextData's updateCallbacks with new entry\r\n        //\r\n        // - examine contextData and determine if we need to send a subscribe\r\n        //\r\n        // - if the context is announced, ensure handler gets snapshot\r\n\r\n        const thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n\r\n        let contextData = this._contextNameToData[name];\r\n\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            // (0) -> (1)\r\n            contextData = contextData || new ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n\r\n            // this will end up in handleContextUpdate which will cause a snapshot to get sent\r\n            // return this.createContext(name, {})\r\n            // \t.then(() => thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n\r\n        const hadCallbacks = contextData.hasCallbacks();\r\n\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n\r\n        if (!hadCallbacks) {\r\n            // first subscriber: (2) -> (3)\r\n\r\n            if (!contextData.joinedActivity) {\r\n\r\n                // if we've created the context ourselves using\r\n                // createContext\r\n                if (contextData.context && contextData.sentExplicitSubscription) {\r\n                    const clone = deepClone(contextData.context);\r\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n\r\n                // (2') -> (3') or (2\") -> (3\")\r\n                // shared context or not our activity;\r\n                // we need to gw-subscribe\r\n\r\n                // OTOH, no need to explicitly push a snapshot here,\r\n                // the GW will reply with a SUBSCRIBED CONTEXT with a snapshot\r\n                // which we'll push through subscribeToContextUpdatedMessages\r\n                // (not that we have a snapshot right now - it's not our activity,\r\n                // and we haven't subscribed already so we can't have received updates)\r\n\r\n                return this.sendSubscribe(contextData)\r\n                    .then(() => thisCallbackSubscriptionNumber);\r\n            } else {\r\n\r\n                // (2\"') -> (3\"')\r\n                // our activity, which we're tracking anyway\r\n                // no need to gw-subscribe, just push the snapshot to the new subscriber\r\n\r\n                const clone = deepClone(contextData.context);\r\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        } else {\r\n            // not first subscriber; no need to gw-subscribe, just push snapshot\r\n            // (3) -> (3)\r\n\r\n            const clone = deepClone(contextData.context);\r\n            callback(clone, clone, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    }\r\n\r\n    public unsubscribe(subscriptionKey: ContextSubscriptionKey): void {\r\n        for (const name of Object.keys(this._contextNameToData)) {\r\n            const contextId = this._contextNameToId[name];\r\n            const contextData = this._contextNameToData[name];\r\n\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n\r\n            const hadCallbacks = contextData.hasCallbacks();\r\n\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                // (3) -> (2)\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n\r\n            if (!contextData.isAnnounced &&\r\n                // (1) -> (0)\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    public destroy(name: string) {\r\n        const contextData = this._contextNameToData[name];\r\n        if (!contextData) {\r\n            return Promise.reject(`context with ${name} does not exist`);\r\n        }\r\n\r\n        return this._gw3Session\r\n            .send({\r\n                type: msg.GW_MESSAGE_DESTROY_CONTEXT,\r\n                domain: \"global\",\r\n                context_id: contextData.contextId,\r\n            }).then((_) => undefined);\r\n    }\r\n\r\n    private handleUpdated(contextData: ContextData, delta: ContextDelta, extraData?: any) {\r\n        // for correctness proof, see note about serialized context\r\n        // updates in subscribeToContextUpdatedMessages\r\n\r\n        const oldContext = contextData.context;\r\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\r\n\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\r\n        }\r\n    }\r\n\r\n    private subscribeToContextCreatedMessages() {\r\n\r\n        // when a new context is announced:\r\n        //\r\n        // - record the fact that it's announced, so when the first\r\n        //      bridge-subscribers come in, we do a gw-subscribe\r\n        //\r\n        // - record its name/contextId association\r\n        //\r\n        // - record its activity information, and the fact that this\r\n        //      activity exists and that we're not joined in it (yet?)\r\n        //\r\n        // - if any bridge-subscribers already present, do a gw-subscribe\r\n\r\n        const createdMessageTypes =\r\n            [\r\n                msg.GW_MESSAGE_CONTEXT_ADDED,\r\n                msg.GW_MESSAGE_CONTEXT_CREATED,\r\n                msg.GW_MESSAGE_ACTIVITY_CREATED,\r\n            ];\r\n\r\n        for (const createdMessageType of createdMessageTypes) {\r\n            const sub = this._connection.on(\r\n                createdMessageType,\r\n                this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    }\r\n\r\n    private handleContextCreatedMessage(contextCreatedMsg: ContextMessage): void {\r\n        const createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === msg.GW_MESSAGE_ACTIVITY_CREATED) {\r\n            // activity context\r\n\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        } else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_ADDED) {\r\n            // shared context\r\n\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        } else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_CREATED) {\r\n            // created by us, data already populated\r\n\r\n            // NB: the promise resolution from createContext is supposed to run *before*\r\n            // we see the CONTEXT CREATED here, so _contextIdToName/_contextNameToId\r\n            // are supposed to already be populated (this is because the gw connection\r\n            // success handler is subscribed long before this one)\r\n        }\r\n\r\n        const name = this._contextIdToName[contextCreatedMsg.context_id];\r\n\r\n        if (!name) {\r\n            // we're supposed to have recorded the name\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n\r\n        if (!this._contextNameToId[name]) {\r\n            // we're also supposed to have recorded it in the opposite direction\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n\r\n        let contextData = this._contextNameToData[name];\r\n\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            } else {\r\n                // (1) -> (3') or (1) -> (3\")\r\n\r\n                // someone's already expressed interest in this context and now\r\n                // it's being announced\r\n\r\n                // you might think that since the activity context's id is\r\n                // auto-generated no one could have already context-subscribed, but\r\n                // there might be another ACTIVITY CREATED observer on the same\r\n                // GW connection who saw this message before us and reacted by\r\n                // subscribing to the context - so we need to handle this case\r\n\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n\r\n                // update its state and send a gw-subscribe; we're expecting an update message\r\n\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n\r\n                // if we're observing the ACTIVITY CREATED message,\r\n                // we're not one of its members and we need to gw-subscribe\r\n                // explicitly; of course we could be getting joined to the activity\r\n                // pretty soon which would subscribe us to context updates implicitly\r\n\r\n                // long story short, if we're about to be joined to the activity\r\n                // and an observer to ACTIVITY CREATED subscribes to the activity's context\r\n                // before we get to this point, we'll send a needless SUBSCRIBE CONTEXT\r\n                // but there's no harm done by beating that to the punch, and there's\r\n                // no clean way to avoid this situation so we leave this as an artifact\r\n                // of the implementation\r\n\r\n                // whether activity or not, we'll push the initial snapshot in the\r\n                // subscribeToContextUpdatedMessages handler\r\n\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        } else {\r\n            // (0) -> (2') or (0) -> (2\")\r\n            // first time we hear about this context\r\n            // we're not subscribed to it in the GW so just create a placeholder\r\n            // and wait for someone to subscribe to it - we'll THEN send a subscribe to the GW\r\n\r\n            this._contextNameToData[name] = contextData =\r\n                new ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    }\r\n\r\n    private subscribeToContextUpdatedMessages() {\r\n\r\n        // receiving a context update or snapshot\r\n        //\r\n        // if it's JOINED ACTIVITY, we may be a new peer as part of activity\r\n        // creation, so it's the first time we've heard about it -\r\n        // record the activity information in the contextData\r\n        //\r\n        // otherwise, this message is a response/consequence of our gw-subscribe\r\n        // message sent on entering state (3)\r\n        //\r\n        // in any case, apply any deltas to the contextData.context, and\r\n        // propagate the context data and delta to any bridge-subscription\r\n        // handlers\r\n        //\r\n        // note that context updates are always performed when reacting to\r\n        // a GW message, so the data over time is tied to the flow of\r\n        // messages coming in through the gateway connection; the GW decides\r\n        // which update comes before which and our view of the changes to\r\n        // the context is consistent with it (i.e. the GW is the serializing\r\n        // agent)\r\n\r\n        const updatedMessageTypes =\r\n            [\r\n                msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n                msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n                msg.GW_MESSAGE_JOINED_ACTIVITY,\r\n            ];\r\n\r\n        for (const updatedMessageType of updatedMessageTypes) {\r\n            const sub = this._connection.on(\r\n                updatedMessageType,\r\n                this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    }\r\n\r\n    private handleContextUpdatedMessage(contextUpdatedMsg: ContextMessage): void {\r\n        const updatedMessageType = contextUpdatedMsg.type;\r\n        const contextId = contextUpdatedMsg.context_id;\r\n        let contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        // this flag is basically used to make sure we raise an update for a new activity\r\n        // even if its initial context is empty\r\n        // see \"long analysis for callback behavior in GW3: several cases\" comment in\r\n        // activityMyApi.ts in js-activity, case 1-1-1\r\n        // it serves a similar purpose for gw_message_subscribed_context\r\n        const justSeen = !contextData || !contextData.isAnnounced;\r\n\r\n        if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                // (0) -> (2\"')\r\n\r\n                // we're in the middle of activity creation\r\n                contextData = new ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            } else {\r\n                // (1) -> (3\"'), (2\") -> (2\"') or (3\") -> (3\"')\r\n\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        } else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    // we've tried to create a context that already exists\r\n                    contextData = contextData || new ContextData(contextId, contextUpdatedMsg.name, true, undefined);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                } else {\r\n                    this._logger.error(`Received 'update' for unknown context: ${contextId}`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        const oldContext = contextData.context;\r\n\r\n        if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        } else if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        } else if (updatedMessageType === msg.GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = applyContextDelta(\r\n                contextData.context,\r\n                contextUpdatedMsg.delta as ContextDelta,\r\n                this._logger);\r\n        } else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n\r\n        if (justSeen ||\r\n            !deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    }\r\n\r\n    private invokeUpdateCallbacks(contextData: ContextData, delta?: ContextDelta, extraData?: any) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        if (delta.commands) {\r\n            // clear added, updated, removed, reset\r\n            delta.added = delta.updated = delta.reset = {};\r\n            delta.removed = [];\r\n            for (const command of delta.commands) {\r\n                if (command.type === \"remove\") {\r\n                    // push the removal of top level props only\r\n                    if (command.path.indexOf(\".\") === -1) {\r\n                        delta.removed.push(command.path);\r\n                    }\r\n                    setValueToPath(delta.updated, null, command.path);\r\n                } else if (command.type === \"set\") {\r\n                    setValueToPath(delta.updated, command.value, command.path);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (const updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    const updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(deepClone(contextData.context), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex, 10), extraData);\r\n                } catch (err) {\r\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private subscribeToContextDestroyedMessages() {\r\n        // wipe all bookkeeping related to this context\r\n\r\n        const destroyedMessageTypes =\r\n            [\r\n                msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n                msg.GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            ];\r\n\r\n        for (const destroyedMessageType of destroyedMessageTypes) {\r\n            const sub = this._connection.on(\r\n                destroyedMessageType,\r\n                this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    }\r\n\r\n    private handleContextDestroyedMessage(destroyedMsg: ContextMessage): void {\r\n        const destroyedMessageType = destroyedMsg.type;\r\n        let contextId;\r\n        let name;\r\n\r\n        // (?) -> (0)\r\n\r\n        if (destroyedMessageType === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(`Received 'destroyed' for unknown activity: ${destroyedMsg.activity_id}`);\r\n                return;\r\n            }\r\n        } else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(`Received 'destroyed' for unknown context: ${destroyedMsg.context_id}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n\r\n        const contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(`Received 'destroyed' for unknown context: ${contextId}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private sendSubscribe(contextData: ContextData): Promise<void> {\r\n        contextData.sentExplicitSubscription = true;\r\n\r\n        return this._gw3Session\r\n            .send({\r\n                type: msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n                domain: \"global\",\r\n                context_id: contextData.contextId,\r\n            }).then((_) => undefined);\r\n    }\r\n\r\n    private sendUnsubscribe(contextData: ContextData): Promise<void> {\r\n        contextData.sentExplicitSubscription = false;\r\n\r\n        return this._gw3Session\r\n            .send({\r\n                type: msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n                domain: \"global\",\r\n                context_id: contextData.contextId,\r\n            }).then((_) => undefined);\r\n    }\r\n\r\n    private calculateContextDeltaV1(from: any, to: any): ContextDelta {\r\n        const delta: ContextDelta = { added: {}, updated: {}, removed: [], reset: undefined };\r\n        if (from) {\r\n            for (const x of Object.keys(from)) {\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (const x of Object.keys(to)) {\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            } else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    private calculateContextDeltaV2(from: any, to: any): ContextDelta {\r\n        const delta: ContextDelta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\r\n\r\n        for (const x of Object.keys(to)) {\r\n            if (to[x] !== null) {\r\n                const fromX = from ? from[x] : null;\r\n                if (!deepEqual(fromX, to[x])) {\r\n                    delta.commands?.push({ type: \"set\", path: x, value: to[x] });\r\n                }\r\n            } else {\r\n                delta.commands?.push({ type: \"remove\", path: x });\r\n            }\r\n        }\r\n\r\n        return delta;\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport { GW3Bridge } from \"./bridges/gw3/bridge\";\r\nimport { ContextBridge } from \"./contextBridge\";\r\nimport Connection from \"../connection/connection\";\r\nimport { Logger } from \"../logger/logger\";\r\nimport { ContextName, ContextSubscriptionKey } from \"./bridges/types\";\r\n\r\n/** @ignore */\r\nexport interface ContextsConfig {\r\n    connection: Connection;\r\n    logger: Logger;\r\n}\r\n\r\nexport class ContextsModule implements Glue42Core.Contexts.API {\r\n\r\n    public initTime: number | undefined;\r\n    public initStartTime: number | undefined;\r\n    public initEndTime?: number;\r\n    private _bridge: ContextBridge;\r\n\r\n    public constructor(config: ContextsConfig) {\r\n        this._bridge = new GW3Bridge(config);\r\n    }\r\n\r\n    public all(): string[] {\r\n        return this._bridge.all();\r\n    }\r\n\r\n    /**\r\n     * Updates a context with some object. The object properties will replace the context properties, any other\r\n     * context properties will remain in the context. If the context does not exists the update call will create it.\r\n     *\r\n     * @example\r\n     * // if theme does not exists creates a context called theme with initial value\r\n     * glue.contexts.update(\"theme\", {font:10, font-family:\"Arial\"})\r\n     *\r\n     * // increases font to 11, after that call context is {font:10, font-family:\"Arial\"}\r\n     * glue.contexts.update(\"theme\", {font:11})\r\n     *\r\n     * @function\r\n     * @param name Name of the context to be updated\r\n     * @param data The object that will be applied to the context\r\n     */\r\n    public update(name: ContextName, data: any): Promise<void> {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n\r\n        return this._bridge.update(name, data);\r\n    }\r\n\r\n    /**\r\n     * Replaces a context\r\n     * @function\r\n     * @param name Name of the context to be updated\r\n     * @param data The object that will be applied to the context\r\n     */\r\n    public set(name: ContextName, data: any): Promise<void> {\r\n        this.checkName(name);\r\n        this.checkData(data);\r\n\r\n        return this._bridge.set(name, data);\r\n    }\r\n\r\n    public setPath(name: ContextName, path: string, data: any): Promise<void> {\r\n        this.checkName(name);\r\n        this.checkPath(path);\r\n        const isTopLevelPath = path === \"\";\r\n\r\n        if (isTopLevelPath) {\r\n            // Check the data only in the case of a top level path as the inner props can be of type any.\r\n            this.checkData(data);\r\n\r\n            return this.set(name, data);\r\n        }\r\n\r\n        return this._bridge.setPath(name, path, data);\r\n    }\r\n\r\n    public setPaths(name: ContextName, paths: Glue42Core.Contexts.PathValue[]): Promise<void> {\r\n        this.checkName(name);\r\n\r\n        if (!Array.isArray(paths)) {\r\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\r\n        }\r\n\r\n        for (const { path, value } of paths) {\r\n            this.checkPath(path);\r\n            const isTopLevelPath = path === \"\";\r\n\r\n            if (isTopLevelPath) {\r\n                // Check the value only in the case of a top level path as the inner props can be of type any.\r\n                this.checkData(value);\r\n            }\r\n        }\r\n\r\n        return this._bridge.setPaths(name, paths);\r\n    }\r\n\r\n    /**\r\n     * Subscribe for context events\r\n     *\r\n     * NB: This method publishes an initial snapshot on subscription.\r\n     * To unsubscribe from within the callback, use the unsubscribe argument\r\n     * of the callback, since the method itself may not have returned and the returned\r\n     * callback is not available in the calling code.\r\n     *\r\n     * @function\r\n     *\r\n     * @param name name of the context to subscribe for\r\n     * @param callback function that will receive updates.\r\n     * @returns Function execute the returned function to unsubscribe\r\n     */\r\n    public subscribe(\r\n        name: ContextName,\r\n        callback: (data: any, delta: any, removed: string[], unsubscribe: () => void, extraData?: any) => void): Promise<() => void> {\r\n        this.checkName(name);\r\n        if (typeof callback !== \"function\") {\r\n            throw new Error(\"Please provide the callback as a function!\");\r\n        }\r\n\r\n        return this._bridge\r\n            .subscribe(name, (data: any, delta: any, removed: string[], key: ContextSubscriptionKey, extraData?: any) => callback(data, delta, removed, () => this._bridge.unsubscribe(key), extraData))\r\n            .then((key) =>\r\n                () => {\r\n                    this._bridge.unsubscribe(key);\r\n                });\r\n\r\n    }\r\n\r\n    /**\r\n     * Return a context's data\r\n     */\r\n    public get(name: ContextName): Promise<any> {\r\n        this.checkName(name);\r\n\r\n        return this._bridge.get(name);\r\n    }\r\n\r\n    public ready(): Promise<any> {\r\n        return Promise.resolve(this);\r\n    }\r\n\r\n    public destroy(name: string): Promise<any> {\r\n        this.checkName(name);\r\n\r\n        return this._bridge.destroy(name);\r\n    }\r\n\r\n    public get setPathSupported() {\r\n        return this._bridge.setPathSupported;\r\n    }\r\n\r\n    private checkName(name: ContextName) {\r\n        if (typeof name !== \"string\" || name === \"\") {\r\n            throw new Error(\"Please provide the name as a non-empty string!\");\r\n        }\r\n    }\r\n\r\n    private checkPath(path: string) {\r\n        if (typeof path !== \"string\") {\r\n            throw new Error(\"Please provide the path as a dot delimited string!\");\r\n        }\r\n    }\r\n\r\n    // TODO: Update the typings everywhere to disallow strings, numbers, etc.\r\n    private checkData(data: any) {\r\n        // Allows null.\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Please provide the data as an object!\");\r\n        }\r\n    }\r\n}\r\n","export default function <T>(promise: Promise<any>, successCallback: any, errorCallback: any): Promise<T> {\r\n\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = () => { /* DO NOTHING */ };\r\n    } else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = () => {  /* DO NOTHING */ };\r\n    }\r\n\r\n    return promise.then(successCallback, errorCallback);\r\n}\r\n","export const waitFor = async (ms: number = 0, callback: () => void) => {\r\n    await resolveAfter(ms);\r\n    callback();\r\n};\r\n\r\nfunction resolveAfter<T>(ms: number = 0, result?: T): Promise<T> {\r\n    return new Promise((resolve) => setTimeout(() => resolve(result), ms));\r\n}\r\n\r\nexport function rejectAfter<T>(ms: number = 0, promise: Promise<T>, error?: T): Promise<T> {\r\n    let timeout: any;\r\n    const clearTimeoutIfThere = () => {\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n    };\r\n    promise\r\n        .then(() => {\r\n            clearTimeoutIfThere();\r\n        })\r\n        .catch(() => {\r\n            clearTimeoutIfThere();\r\n        });\r\n\r\n    return new Promise((resolve, reject) => {\r\n        timeout = setTimeout(() => reject(error), ms);\r\n    });\r\n}\r\n","/*\r\n  The AGM Client analyses server presences, collects information about their methods and allows users to invoke these methods.\r\n */\r\nimport promisify from \"../helpers/promisify\";\r\nimport { Protocol, SubscribeError, InteropSettings, SubscriptionInner } from \"../types\";\r\nimport { ClientMethodInfo, ServerInfo, ServerMethodsPair } from \"./types\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport ClientRepository from \"./repository\";\r\nimport { UnsubscribeFunction } from \"callback-registry\";\r\nimport random from \"shortid\";\r\nimport { rejectAfter } from \"../helpers/promiseHelpers\";\r\nimport { isSubset } from \"../../contexts/helpers\";\r\nimport InvocationResult = Glue42Core.AGM.InvocationResult;\r\nimport MethodDefinition = Glue42Core.AGM.MethodDefinition;\r\nimport Method = Glue42Core.Interop.Method;\r\n\r\nexport enum InvokeStatus {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport interface InvokeResultMessage {\r\n    invocationId: string;\r\n    result?: object;\r\n    instance?: Glue42Core.AGM.Instance;\r\n    status: InvokeStatus;\r\n    message: string;\r\n    error?: Error;\r\n}\r\n\r\nexport default class Client {\r\n    constructor(private protocol: Protocol, private repo: ClientRepository, private instance: Glue42Core.AGM.Instance, private configuration: InteropSettings) {\r\n        //\r\n    }\r\n\r\n    /**\r\n     * Subscribes to an AGM streaming method\r\n     */\r\n    public subscribe(method: string | Glue42Core.AGM.MethodDefinition, options: Glue42Core.AGM.SubscriptionParams, successCallback?: (subscription: Glue42Core.AGM.Subscription) => void, errorCallback?: (err: SubscribeError) => void, existingSub?: SubscriptionInner): Promise<Glue42Core.AGM.Subscription> {\r\n        // options can have arguments:{}, target: 'best'/'all'/{server_instance}, waitTimeoutMs:10000\r\n\r\n        const callProtocolSubscribe = (targetServers: ServerMethodsPair[], stream: Glue42Core.AGM.MethodDefinition, successProxy: (sub: Glue42Core.AGM.Subscription) => void, errorProxy: (err: SubscribeError) => void) => {\r\n\r\n            options.methodResponseTimeout = options.methodResponseTimeout ?? options.waitTimeoutMs;\r\n\r\n            this.protocol.client.subscribe(\r\n                stream,\r\n                options,\r\n                targetServers,\r\n                successProxy,\r\n                errorProxy,\r\n                existingSub\r\n            );\r\n        };\r\n\r\n        const promise = new Promise<Glue42Core.AGM.Subscription>((resolve, reject) => {\r\n\r\n            const successProxy = (sub: Glue42Core.AGM.Subscription) => {\r\n                resolve(sub);\r\n            };\r\n            const errorProxy = (err: SubscribeError) => {\r\n                reject(err);\r\n            };\r\n\r\n            if (!method) {\r\n                reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\r\n                return;\r\n            }\r\n\r\n            let methodDef: Glue42Core.AGM.MethodDefinition;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            } else {\r\n                methodDef = method;\r\n            }\r\n\r\n            if (!methodDef.name) {\r\n                reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\r\n                return;\r\n            }\r\n\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            let target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject(new Error(`\"${target}\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.`));\r\n                return;\r\n            }\r\n\r\n            if (options.methodResponseTimeout === undefined) {\r\n                // legacy support\r\n                options.methodResponseTimeout = (options as any).method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    // fallback to default\r\n                    options.methodResponseTimeout = this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n\r\n            if (options.waitTimeoutMs === undefined) {\r\n                // legacy support\r\n                options.waitTimeoutMs = (options as any).wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    // fallback to default\r\n                    options.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n\r\n            const delayStep = 500;\r\n            let delayTillNow = 0;\r\n\r\n            // don't check if the method is streaming or not, subscribing to non-streaming method has to invoke it\r\n\r\n            // get all servers that have method(s) matching the filter\r\n            let currentServers = this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            } else {\r\n                const retry = () => {\r\n                    if (!target || !(options.waitTimeoutMs)) {\r\n                        return;\r\n                    }\r\n                    delayTillNow += delayStep;\r\n                    // get all servers that have method(s) matching the filter\r\n                    currentServers = this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        const streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    } else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        const def = typeof method === \"string\" ? { name: method } : method;\r\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\r\n                    } else {\r\n                        setTimeout(retry, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry, delayStep);\r\n            }\r\n        });\r\n\r\n        return promisify(promise, successCallback, errorCallback);\r\n    }\r\n\r\n    /**\r\n     * Returns all servers. If methodFilter is specified will return a list of servers\r\n     * having a method matching the filter.\r\n     */\r\n    public servers(methodFilter: Glue42Core.AGM.MethodDefinition): Glue42Core.AGM.Instance[] {\r\n        const filterCopy = methodFilter === undefined\r\n            ? undefined\r\n            : { ...methodFilter };\r\n\r\n        // We want only the announced servers\r\n        return this.getServers(filterCopy).map((serverMethodMap) => {\r\n            return serverMethodMap.server.instance;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns all methods that match the given filter. If no filter specified returns all methods.\r\n     */\r\n    public methods(methodFilter: Glue42Core.AGM.MethodDefinition | string): Glue42Core.AGM.Method[] {\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        } else {\r\n            // Must not be mutated\r\n            methodFilter = { ...methodFilter };\r\n        }\r\n\r\n        return this.getMethods(methodFilter);\r\n    }\r\n\r\n    /**\r\n     * Returns all agm method registered by some server\r\n     */\r\n    public methodsForInstance(instance: Glue42Core.AGM.Instance): Glue42Core.AGM.Method[] {\r\n        return this.getMethodsForInstance(instance);\r\n    }\r\n\r\n    /**\r\n     * Called when a method is added for the first time by any application\r\n     */\r\n    public methodAdded(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\r\n        return this.repo.onMethodAdded(callback);\r\n    }\r\n\r\n    /**\r\n     * Called when a method is removed from the last application offering it\r\n     * @function methodRemoved\r\n     * @param {MethodCallback} callback\r\n     */\r\n    public methodRemoved(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\r\n        return this.repo.onMethodRemoved(callback);\r\n    }\r\n\r\n    /**\r\n     * Called when an application offering methods (server) is discovered\r\n     * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the new sever\r\n     */\r\n    public serverAdded(callback: (instance: Glue42Core.AGM.Instance) => void): UnsubscribeFunction {\r\n        return this.repo.onServerAdded(callback);\r\n    }\r\n\r\n    /**\r\n     * Called when an app offering methods stops offering them or exits\r\n     * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the removed server\r\n     */\r\n    public serverRemoved(callback: (instance: Glue42Core.AGM.Instance, reason: string) => void): UnsubscribeFunction {\r\n        return this.repo.onServerRemoved((server: Glue42Core.AGM.Instance, reason: string) => {\r\n            callback(server, reason);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Called when a method is offered by an application. This will be called for each server offering the method\r\n     * where {@link methodAdded} will be called only for the first time the method is registered.\r\n     *\r\n     * @param {ServerMethodCallback} callback\r\n     */\r\n    public serverMethodAdded(callback: (info: { server: Glue42Core.AGM.Instance, method: Glue42Core.AGM.Method }) => void): UnsubscribeFunction {\r\n        return this.repo.onServerMethodAdded((server: Glue42Core.AGM.Instance, method: ClientMethodInfo) => {\r\n            callback({ server, method });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Called when a server stops offering a method\r\n     * @param {ServerMethodCallback} callback\r\n     */\r\n    public serverMethodRemoved(callback: (info: { server: Glue42Core.AGM.Instance, method: Glue42Core.AGM.Method }) => void): UnsubscribeFunction {\r\n        return this.repo.onServerMethodRemoved((server: Glue42Core.AGM.Instance, method: ClientMethodInfo) => {\r\n            callback({ server, method });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Invokes an AGM method\r\n     * @param {MethodDefinition} methodFilter Method to invoke\r\n     * @param {Object} argumentObj Arguments for the invocation\r\n     * @param {Instance|Instance[]|string} [target] Defines which server(s) to target with the invocation - can be one of:\r\n     * * ’best' - executes the method on the best (or first) server\r\n     * * 'all' - executes the method on all servers offering it\r\n     * * AGM instance (or a subset, used for filtering), e.g. { application: 'appName' }\r\n     * * an array of AGM instances/filters\r\n     * @param {InvocationOptions} [additionalOptions] Additional options for the invocation\r\n     * @param {function} [success] - (use this if you prefer callback style instead of promises)\r\n     * Callback that will be called with {@link InvocationResult} object when the invocation is successful\r\n     * @param {function} [error] -  (use this if you prefer callback style instead of promises)\r\n     * Callback that will be called with {@link InvocationError} object when the invocation is not successful\r\n     * @returns {Promise<InvocationResult>}\r\n     * @example\r\n     * const result = await glue.agm.invoke(\"Sum\", { a: 37, b: 5 }); // everything else is optional\r\n     * console.log('37 + 5 = ' + result.returned.answer);\r\n     */\r\n\r\n    public async invoke(methodFilter: string | Glue42Core.AGM.MethodDefinition, argumentObj?: object, target?: Glue42Core.AGM.InstanceTarget, additionalOptions?: Glue42Core.AGM.InvokeOptions, success?: Glue42Core.AGM.InvokeSuccessHandler<any>, error?: Glue42Core.AGM.InvokeErrorHandler)\r\n        : Promise<Glue42Core.AGM.InvocationResult<any>> {\r\n        const getInvokePromise = async () => {\r\n\r\n            let methodDefinition: Glue42Core.AGM.MethodDefinition;\r\n            if (typeof methodFilter === \"string\") {\r\n                methodDefinition = { name: methodFilter };\r\n            } else {\r\n                methodDefinition = { ...methodFilter };\r\n            }\r\n\r\n            if (!methodDefinition.name) {\r\n                return Promise.reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\r\n            }\r\n\r\n            if (!argumentObj) {\r\n                argumentObj = {};\r\n            }\r\n            if (!target) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\r\n                return Promise.reject(new Error(`\"${target}\" is not a valid target. Valid targets are \"all\" and \"best\".`));\r\n            }\r\n            if (!additionalOptions) {\r\n                additionalOptions = {};\r\n            }\r\n\r\n            if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                // legacy support\r\n                additionalOptions.methodResponseTimeoutMs = (additionalOptions as any).method_response_timeout;\r\n                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                    // fallback to default\r\n                    additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n\r\n            if (additionalOptions.waitTimeoutMs === undefined) {\r\n                // legacy support\r\n                additionalOptions.waitTimeoutMs = (additionalOptions as any).wait_for_method_timeout;\r\n                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                    // fallback to default\r\n                    additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n\r\n            if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                return Promise.reject(new Error(`\"${additionalOptions.waitTimeoutMs}\" is not a valid number for \"waitTimeoutMs\" `));\r\n            }\r\n\r\n            // Check if the arguments are an object\r\n            if (typeof argumentObj !== \"object\") {\r\n                return Promise.reject(new Error(`The method arguments must be an object. method: ${methodDefinition.name}`));\r\n            }\r\n\r\n            let serversMethodMap: ServerMethodsPair[] = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n\r\n            // Try to await them and then continue\r\n            if (serversMethodMap.length === 0) {\r\n                try {\r\n                    // because of the additionalOptions\r\n                    serversMethodMap = await this.tryToAwaitForMethods(methodDefinition, target, additionalOptions);\r\n                } catch (err) {\r\n                    const method: Glue42Core.Interop.Method = {\r\n                        ...methodDefinition,\r\n                        getServers: () => [],\r\n                        supportsStreaming: false,\r\n                        objectTypes: methodDefinition.objectTypes ?? [],\r\n                        flags: methodDefinition.flags?.metadata ?? {}\r\n                    };\r\n                    const errorObj: InvocationResult = {\r\n                        method,\r\n                        called_with: argumentObj,\r\n                        message: `Can not find a method matching ${JSON.stringify(methodFilter)} with server filter ${JSON.stringify(target)}`,\r\n                        executed_by: undefined,\r\n                        returned: undefined,\r\n                        status: undefined,\r\n                    };\r\n\r\n                    return Promise.reject(errorObj);\r\n                }\r\n            }\r\n\r\n            const timeout = additionalOptions.methodResponseTimeoutMs;\r\n            // ts be happy\r\n            const additionalOptionsCopy: Glue42Core.AGM.InvokeOptions = additionalOptions;\r\n            const invokePromises: Array<Promise<InvokeResultMessage>> = serversMethodMap.map(\r\n                (serversMethodPair) => {\r\n                    const invId = random();\r\n                    const method = serversMethodPair.methods[0];\r\n                    const server = serversMethodPair.server;\r\n                    const invokePromise = this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\r\n\r\n                    return Promise.race([\r\n                        invokePromise,\r\n                        rejectAfter(timeout, invokePromise, {\r\n                            invocationId: invId,\r\n                            message: `Invocation timeout (${timeout} ms) reached for method name: ${method?.name}, target instance: ${JSON.stringify(server.instance)}, options: ${JSON.stringify(additionalOptionsCopy)}`,\r\n                            status: InvokeStatus.Error,\r\n                        })\r\n                    ]);\r\n                }\r\n            );\r\n\r\n            const invocationMessages: InvokeResultMessage[] = await Promise.all(invokePromises);\r\n\r\n            const results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\r\n\r\n            const allRejected = invocationMessages.every((result) => result.status === InvokeStatus.Error);\r\n            if (allRejected) {\r\n                return Promise.reject(results);\r\n            }\r\n\r\n            return results;\r\n        };\r\n\r\n        // I would call this\r\n        return promisify(getInvokePromise(), success, error);\r\n    }\r\n\r\n    private getInvocationResultObj(invocationResults: InvokeResultMessage[], method: MethodDefinition, calledWith: object): InvocationResult<any> {\r\n        /* tslint:disable:variable-name*/\r\n        const all_return_values = invocationResults\r\n            .filter((invokeMessage) => invokeMessage.status === InvokeStatus.Success)\r\n            .reduce<InvocationResult[]>(\r\n                (allValues, currentValue) => {\r\n                    allValues = [\r\n                        ...allValues,\r\n                        {\r\n                            executed_by: currentValue.instance,\r\n                            returned: currentValue.result,\r\n                            called_with: calledWith,\r\n                            method,\r\n                            message: currentValue.message,\r\n                            status: currentValue.status,\r\n                        }\r\n                    ];\r\n\r\n                    return allValues;\r\n                }, []\r\n            );\r\n\r\n        /* tslint:disable:variable-name*/\r\n        const all_errors = invocationResults\r\n            .filter((invokeMessage) => invokeMessage.status === InvokeStatus.Error)\r\n            .reduce<object[]>((allErrors, currError) => {\r\n                allErrors = [\r\n                    ...allErrors,\r\n                    {\r\n                        executed_by: currError.instance,\r\n                        called_with: calledWith,\r\n                        name: method.name,\r\n                        message: currError.message,\r\n                    }\r\n                ];\r\n\r\n                return allErrors;\r\n            }, []);\r\n\r\n        const invResult = invocationResults[0];\r\n\r\n        const result: InvocationResult = {\r\n            method,\r\n            called_with: calledWith,\r\n            returned: invResult.result,\r\n            executed_by: invResult.instance,\r\n            all_return_values,\r\n            all_errors,\r\n            message: invResult.message,\r\n            status: invResult.status\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Called when the user tries to invoke a method which does not exist\r\n     */\r\n    private tryToAwaitForMethods(methodDefinition: MethodDefinition, target: Glue42Core.AGM.InstanceTarget, additionalOptions: Glue42Core.AGM.InvokeOptions): Promise<ServerMethodsPair[]> {\r\n        return new Promise((resolve, reject) => {\r\n            if (additionalOptions.waitTimeoutMs === 0) {\r\n                reject();\r\n                return;\r\n            }\r\n\r\n            const delayStep = 500;\r\n            let delayTillNow = 0;\r\n\r\n            const retry = () => {\r\n                delayTillNow += delayStep;\r\n\r\n                // get all servers that have method(s) matching the filter\r\n                const serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    clearInterval(interval);\r\n                    resolve(serversMethodMap);\r\n                } else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\r\n                    clearInterval(interval);\r\n                    reject();\r\n                    return;\r\n                }\r\n            };\r\n            const interval = setInterval(retry, delayStep);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Filters an array of servers and returns the ones which match the target criteria\r\n     */\r\n    private filterByTarget(target: Glue42Core.AGM.InstanceTarget, serverMethodMap: ServerMethodsPair[]): ServerMethodsPair[] {\r\n        // If the user specified target as string:\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                return [...serverMethodMap];\r\n            } else if (target === \"best\") {\r\n                // Returns first app found\r\n                const localMachine = serverMethodMap\r\n                    .find((s) => s.server.instance.isLocal);\r\n\r\n                if (localMachine) {\r\n                    return [localMachine];\r\n                }\r\n\r\n                if (serverMethodMap[0] !== undefined) {\r\n                    return [serverMethodMap[0]];\r\n                }\r\n            } else if (target === \"skipMine\") {\r\n                return serverMethodMap.filter(({ server }) => server.instance.peerId !== this.instance.peerId);\r\n            }\r\n        } else {\r\n            let targetArray: Glue42Core.AGM.Instance[];\r\n            if (!Array.isArray(target)) {\r\n                targetArray = [target];\r\n            } else {\r\n                targetArray = target;\r\n            }\r\n\r\n            // Retrieve all getServers that match the filters\r\n            const allServersMatching = targetArray.reduce((matches: ServerMethodsPair[], filter) => {\r\n                // Add matches for each filter\r\n                const myMatches = serverMethodMap.filter((serverMethodPair) => {\r\n                    return this.instanceMatch(filter, serverMethodPair.server.instance);\r\n                });\r\n                return matches.concat(myMatches);\r\n            }, []);\r\n\r\n            return allServersMatching;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Matches a server definition against a server filter\r\n     */\r\n    private instanceMatch(instanceFilter: Glue42Core.AGM.Instance, instanceDefinition: Glue42Core.AGM.Instance): boolean {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    }\r\n\r\n    /**\r\n     * Matches a method definition against a method filter\r\n     */\r\n    private methodMatch(methodFilter: Glue42Core.AGM.MethodDefinition, methodDefinition: Glue42Core.AGM.MethodDefinition): boolean {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    }\r\n\r\n    /**\r\n     * Checks if all properties of filter match properties in object\r\n     */\r\n    private containsProps(filter: any, repoMethod: any): boolean {\r\n        const filterProps = Object.keys(filter)\r\n            .filter((prop) => {\r\n                return filter[prop] !== undefined\r\n                    && typeof filter[prop] !== \"function\"\r\n                    && prop !== \"object_types\"\r\n                    && prop !== \"display_name\"\r\n                    && prop !== \"id\"\r\n                    && prop !== \"gatewayId\"\r\n                    && prop !== \"identifier\"\r\n                    && prop[0] !== \"_\";\r\n            });\r\n\r\n        return filterProps.every((prop) => {\r\n            let isMatch;\r\n\r\n            const filterValue = filter[prop];\r\n            const repoMethodValue = repoMethod[prop];\r\n\r\n            switch (prop) {\r\n                case \"objectTypes\":\r\n                    // filterValue needs to be a subset of repoMethodValue.\r\n                    isMatch = ((filterValue || []) as string[]).every((filterValueEl) => {\r\n                        return ((repoMethodValue || []) as string[]).includes(filterValueEl);\r\n                    });\r\n                    break;\r\n                case \"flags\":\r\n                    // filterValue needs to be a subset of repoMethodValue.\r\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\r\n                    break;\r\n                default:\r\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\r\n            }\r\n\r\n            return isMatch;\r\n        });\r\n    }\r\n\r\n    private getMethods(methodFilter: Glue42Core.AGM.MethodDefinition): ClientMethodInfo[] {\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n\r\n        const methods = this.repo.getMethods().filter((method) => {\r\n            return this.methodMatch(methodFilter, method);\r\n        });\r\n\r\n        return methods;\r\n    }\r\n\r\n    private getMethodsForInstance(instanceFilter: Glue42Core.AGM.Instance): ClientMethodInfo[] {\r\n        const allServers: ServerInfo[] = this.repo.getServers();\r\n\r\n        const matchingServers = allServers.filter((server) => {\r\n            return this.instanceMatch(instanceFilter, server.instance);\r\n        });\r\n\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let resultMethodsObject: { [key: string]: ClientMethodInfo } = {};\r\n\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        } else {\r\n            // we have more than one server matching, join all methods\r\n            matchingServers.forEach((server) => {\r\n                Object.keys(server.methods).forEach((methodKey) => {\r\n                    const method = server.methods[methodKey];\r\n                    // group by method identifier\r\n                    resultMethodsObject[method.identifier] = method;\r\n                });\r\n            });\r\n        }\r\n\r\n        // transform the object to array\r\n        return Object.keys(resultMethodsObject)\r\n            .map((key) => {\r\n                return resultMethodsObject[key];\r\n            });\r\n    }\r\n\r\n    private getServers(methodFilter?: Glue42Core.AGM.MethodDefinition): ServerMethodsPair[] {\r\n        const servers = this.repo.getServers();\r\n\r\n        // No method - get all getServers\r\n        if (methodFilter === undefined) {\r\n            return servers.map((server) => {\r\n                return { server, methods: [] };\r\n            });\r\n        }\r\n\r\n        // // Non-existing method - return an empty array\r\n        // const methods = this.getMethods(methodFilter);\r\n        // if (methods === undefined) {\r\n        //     return [];\r\n        // }\r\n\r\n        return servers.reduce<ServerMethodsPair[]>((prev, current) => {\r\n\r\n            const methodsForServer = Object.values(current.methods);\r\n\r\n            const matchingMethods = methodsForServer.filter((method) => {\r\n                return this.methodMatch(methodFilter, method);\r\n            });\r\n\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n\r\n            return prev;\r\n        }, []);\r\n    }\r\n\r\n    /**\r\n     * Returns an array of server-methods pairs for all servers that match the target and have at lease one method matching the method filter\r\n     */\r\n    private getServerMethodsByFilterAndTarget(methodFilter: Glue42Core.AGM.MethodDefinition, target: Glue42Core.AGM.InstanceTarget): ServerMethodsPair[] {\r\n        // get all servers that have method(s) matching the filter\r\n        const serversMethodMap = this.getServers(methodFilter);\r\n        // filter the server-method map by target\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    }\r\n\r\n}\r\n","import { Protocol } from \"../types\";\r\nimport { Glue42Core } from \"../../../glue\";\r\n\r\nimport { WrappedCallbackFunction, ResultContext, ServerMethodInfo, ServerSubscriptionInfo } from \"./types\";\r\n\r\nexport default class ServerSubscription implements Glue42Core.AGM.StreamSubscription {\r\n\r\n    constructor(private protocol: Protocol, private repoMethod: ServerMethodInfo, private subscription: ServerSubscriptionInfo) {\r\n    }\r\n\r\n    public get stream(): Glue42Core.AGM.Stream {\r\n        if (!this.repoMethod.stream) {\r\n            throw new Error(\"no stream\");\r\n        }\r\n        return this.repoMethod.stream;\r\n    }\r\n    public get arguments() { return this.subscription.arguments || {}; }\r\n    public get branchKey(): string { return this.subscription.branchKey; }\r\n    public get instance(): Glue42Core.AGM.Instance {\r\n        if (!this.subscription.instance) {\r\n            throw new Error(\"no instance\");\r\n        }\r\n        return this.subscription.instance;\r\n    }\r\n\r\n    public close() {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    }\r\n\r\n    public push(data: object) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    }\r\n}\r\n","import { Protocol } from \"../types\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport { ServerMethodInfo, RequestContext } from \"./types\";\r\n\r\nexport default class Request implements Glue42Core.AGM.SubscriptionRequest {\r\n    public arguments: object;\r\n    public instance: Glue42Core.AGM.Instance;\r\n\r\n    constructor(private protocol: Protocol, private repoMethod: ServerMethodInfo, private requestContext: RequestContext) {\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n\r\n    public accept() {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    }\r\n\r\n    public acceptOnBranch(branch: string) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    }\r\n\r\n    public reject(reason: string) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    }\r\n}\r\n","import { Protocol } from \"../types\";\r\nimport { ServerMethodInfo, RequestContext, ServerSubscriptionInfo } from \"./types\";\r\nimport ServerSubscription from \"./subscription\";\r\nimport Server from \"./server\";\r\nimport Request from \"./request\";\r\n\r\n/*\r\n The streaming module defines the user objects relevant to the streaming api, and\r\n attaches to relevant events exposed by the protocol.\r\n */\r\nexport default class ServerStreaming {\r\n    constructor(public protocol: Protocol, private server: Server) {\r\n\r\n        /** Attach to stream 'events' */\r\n        protocol.server.onSubRequest((rc, rm) => this.handleSubRequest(rc, rm));\r\n\r\n        protocol.server.onSubAdded((sub, rm) => this.handleSubAdded(sub, rm));\r\n\r\n        protocol.server.onSubRemoved((sub, rm) => this.handleSubRemoved(sub, rm));\r\n    }\r\n\r\n    private handleSubRequest(requestContext: RequestContext, repoMethod: ServerMethodInfo) {\r\n\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n\r\n        const request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    }\r\n\r\n    private handleSubAdded(subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n\r\n        const sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    }\r\n\r\n    private handleSubRemoved(subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n\r\n        const sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    }\r\n}\r\n","import { Protocol } from \"../types\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport ServerSubscription from \"./subscription\";\r\nimport { ServerMethodInfo } from \"./types\";\r\n\r\nexport default class ServerBranch implements Glue42Core.AGM.StreamBranch {\r\n\r\n    constructor(public key: string, private protocol: Protocol, private repoMethod: ServerMethodInfo) {\r\n    }\r\n\r\n    public subscriptions() {\r\n        const subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map((sub) => {\r\n            return new ServerSubscription(this.protocol, this.repoMethod, sub);\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    }\r\n\r\n    public push(data: object) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../glue\";\r\nimport { Protocol } from \"../types\";\r\nimport { ServerMethodInfo } from \"./types\";\r\nimport ServerSubscription from \"./subscription\";\r\nimport ServerBranch from \"./branch\";\r\nimport Server from \"./server\";\r\n\r\nexport default class ServerStream implements Glue42Core.AGM.Stream {\r\n    public readonly name: string;\r\n\r\n    constructor(private _protocol: Protocol, private _repoMethod: ServerMethodInfo, private _server: Server) {\r\n        this.name = this._repoMethod.definition.name;\r\n    }\r\n\r\n    public branches(): Glue42Core.AGM.StreamBranch[];\r\n    public branches(key: string): Glue42Core.AGM.StreamBranch | undefined;\r\n    public branches(key?: string): Glue42Core.AGM.StreamBranch[] | Glue42Core.AGM.StreamBranch | undefined {\r\n        const bList: string[] = this._protocol.server.getBranchList(this._repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new ServerBranch(key, this._protocol, this._repoMethod);\r\n            }\r\n            return undefined;\r\n\r\n        } else {\r\n            return bList.map((branchKey: string) => {\r\n                return new ServerBranch(branchKey, this._protocol, this._repoMethod);\r\n            });\r\n        }\r\n    }\r\n\r\n    public branch(key: string) {\r\n        return this.branches(key);\r\n    }\r\n\r\n    public subscriptions(): Glue42Core.AGM.StreamSubscription[] {\r\n        const subList = this._protocol.server.getSubscriptionList(this._repoMethod);\r\n        return subList.map((sub) => {\r\n            return new ServerSubscription(this._protocol, this._repoMethod, sub);\r\n        });\r\n    }\r\n\r\n    public get definition(): Glue42Core.AGM.MethodDefinition {\r\n        const def2 = this._repoMethod.definition;\r\n        return {\r\n            accepts: def2.accepts,\r\n            description: def2.description,\r\n            displayName: def2.displayName,\r\n            name: def2.name,\r\n            objectTypes: def2.objectTypes,\r\n            returns: def2.returns,\r\n            supportsStreaming: def2.supportsStreaming,\r\n            flags: def2.flags?.metadata,\r\n        };\r\n    }\r\n\r\n    public close() {\r\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\r\n        this._server.unregister(this._repoMethod.definition, true);\r\n    }\r\n\r\n    public push(data: object, branches: string[]) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        // TODO validate if is plain object\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this._protocol.server.pushData(this._repoMethod, data, branches);\r\n    }\r\n\r\n    public updateRepoMethod(repoMethod: ServerMethodInfo) {\r\n        this._repoMethod = repoMethod;\r\n    }\r\n}\r\n","import promisify from \"../helpers/promisify\";\r\nimport ServerStreaming from \"./streaming\";\r\nimport { Protocol, InteropSettings } from \"../types\";\r\nimport ServerRepository from \"./repository\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport { WrappedCallbackFunction, ResultContext, ServerMethodInfo } from \"./types\";\r\nimport ServerStream from \"./stream\";\r\n\r\n/*\r\n The AGM Server allows users register AGM methods.\r\n It exposes these methods to AGM clients (using presence messages) and listens for their invocation\r\n */\r\nexport default class Server {\r\n    private streaming: ServerStreaming;\r\n    private invocations: number = 0;\r\n    private currentlyUnregistering: { [method: string]: Promise<void> } = {};\r\n\r\n    constructor(private protocol: Protocol, private serverRepository: ServerRepository) {\r\n        // An array of the server's methods\r\n        this.streaming = new ServerStreaming(protocol, this);\r\n\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n\r\n    // Registers a new streaming agm method\r\n    public createStream(streamDef: string | Glue42Core.AGM.MethodDefinition, callbacks?: Glue42Core.AGM.StreamOptions, successCallback?: (args?: object) => void, errorCallback?: (error?: string | object) => void, existingStream?: ServerStream): Promise<Glue42Core.AGM.Stream> {\r\n        // in callbacks we have subscriptionRequestHandler, subscriptionAddedHandler, subscriptionRemovedHandler\r\n        const promise = new Promise((resolve, reject) => {\r\n            if (!streamDef) {\r\n                reject(`The stream name must be unique! Please, provide either a unique string for a stream name to “glue.interop.createStream()” or a “methodDefinition” object with a unique “name” property for the stream.`);\r\n                return;\r\n            }\r\n\r\n            // transform to a definition\r\n            let streamMethodDefinition: Glue42Core.AGM.MethodDefinition;\r\n\r\n            // This is important because if you change the name for example this will change here as well and it shouldn't change by reference\r\n            if (typeof streamDef === \"string\") {\r\n                streamMethodDefinition = { name: \"\" + streamDef };\r\n            } else {\r\n                streamMethodDefinition = { ...streamDef };\r\n            }\r\n\r\n            if (!streamMethodDefinition.name) {\r\n                return reject(`The “name” property is required for the “streamDefinition” object and must be unique. Stream definition: ${JSON.stringify(streamMethodDefinition)}`);\r\n            }\r\n\r\n            const nameAlreadyExists = this.serverRepository.getList()\r\n                .some((serverMethod) => serverMethod.definition.name === streamMethodDefinition.name);\r\n\r\n            if (nameAlreadyExists) {\r\n                return reject(`A stream with the name \"${streamMethodDefinition.name}\" already exists! Please, provide a unique name for the stream.`);\r\n            }\r\n\r\n            streamMethodDefinition.supportsStreaming = true;\r\n\r\n            // User-supplied subscription callbacks\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = (request: Glue42Core.AGM.SubscriptionRequest) => {\r\n                    request.accept();\r\n                };\r\n            }\r\n            // Add the method\r\n            const repoMethod = this.serverRepository.add({\r\n                definition: streamMethodDefinition, // store un-formatted definition for checkups in un-register method\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            });\r\n\r\n            this.protocol.server.createStream(repoMethod)\r\n                .then(() => {\r\n                    let streamUserObject: ServerStream;\r\n                    if (existingStream) {\r\n                        streamUserObject = existingStream;\r\n                        existingStream.updateRepoMethod(repoMethod);\r\n                    } else {\r\n                        streamUserObject = new ServerStream(this.protocol, repoMethod, this);\r\n                    }\r\n                    repoMethod.stream = streamUserObject;\r\n                    resolve(streamUserObject);\r\n                })\r\n                .catch((err) => {\r\n                    if (repoMethod.repoId) {\r\n                        this.serverRepository.remove(repoMethod.repoId);\r\n                    }\r\n                    reject(err);\r\n                });\r\n        });\r\n\r\n        return promisify(promise, successCallback, errorCallback);\r\n    }\r\n\r\n    /**\r\n     * Registers a new agm method\r\n     * @param {MethodDefinition} methodDefinition\r\n     * @param {MethodHandler} callback Callback that will be called when the AGM server is invoked\r\n     */\r\n\r\n    public register(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: object, caller: Glue42Core.AGM.Instance) => object | Promise<object>): Promise<void> {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\r\n        }\r\n\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(`The second parameter must be a callback function. Method: ${typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name}`);\r\n        }\r\n\r\n        const wrappedCallbackFunction: WrappedCallbackFunction = async (context: ResultContext, resultCallback: (err: string | undefined, result: object) => void) => {\r\n            // get the result as direct invocation of the callback and return it using resultCallback\r\n            try {\r\n                const result = callback(context.args, context.instance);\r\n                if (result && typeof (result as any).then === \"function\") {\r\n                    const resultValue = await result;\r\n                    resultCallback(undefined, resultValue);\r\n                } else {\r\n                    resultCallback(undefined, result);\r\n                }\r\n            } catch (e) {\r\n                if (!e) {\r\n                    e = \"\";\r\n                }\r\n                resultCallback(e, e);\r\n            }\r\n        };\r\n\r\n        wrappedCallbackFunction.userCallback = callback;\r\n\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    }\r\n\r\n    // registers a new async agm method (the result can be returned in async way)\r\n    public registerAsync(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: object, caller: Glue42Core.AGM.Instance, successCallback: (args?: object) => void, errorCallback: (error?: string | object) => void) => Promise<object> | void): Promise<void> {\r\n        if (!methodDefinition) {\r\n            return Promise.reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\r\n        }\r\n\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(`The second parameter must be a callback function. Method: ${typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name}`);\r\n        }\r\n\r\n        const wrappedCallback: WrappedCallbackFunction = (context: ResultContext, resultCallback: (err: string | undefined, result: object | undefined) => void) => {\r\n            // invoke the callback passing success and error callbacks\r\n            try {\r\n                let resultCalled = false;\r\n                const success = (result?: object) => {\r\n                    if (!resultCalled) {\r\n                        resultCallback(undefined, result);\r\n                    }\r\n                    resultCalled = true;\r\n                };\r\n                const error = (e: any) => {\r\n                    if (!resultCalled) {\r\n                        if (!e) {\r\n                            e = \"\";\r\n                        }\r\n                        resultCallback(e, e);\r\n                    }\r\n                    resultCalled = true;\r\n                };\r\n\r\n                const methodResult = callback(context.args,\r\n                    context.instance,\r\n                    success,\r\n                    error\r\n                );\r\n\r\n                if (methodResult && typeof methodResult.then === \"function\") {\r\n                    methodResult\r\n                        .then(success)\r\n                        .catch(error);\r\n                }\r\n            } catch (e) {\r\n                resultCallback(e, undefined);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    }\r\n\r\n    // Unregisters a previously registered AGM method\r\n    public async unregister(methodFilter: string | Glue42Core.AGM.MethodDefinition, forStream: boolean = false): Promise<void> {\r\n        if (methodFilter === undefined) {\r\n            return Promise.reject(`Please, provide either a unique string for a name or an object containing a “name” property.`);\r\n        }\r\n\r\n        // WHEN A FUNCTION IS PASSED\r\n        if (typeof methodFilter === \"function\") {\r\n            await this.unregisterWithPredicate(methodFilter, forStream);\r\n            return;\r\n        }\r\n\r\n        // WHEN string / object is passed\r\n        let methodDefinition: Glue42Core.AGM.MethodDefinition;\r\n        if (typeof methodFilter === \"string\") {\r\n            methodDefinition = { name: methodFilter };\r\n        } else {\r\n            methodDefinition = methodFilter;\r\n        }\r\n\r\n        if (methodDefinition.name === undefined) {\r\n            return Promise.reject(`Method name is required. Cannot find a method if the method name is undefined!`);\r\n        }\r\n\r\n        const methodToBeRemoved: ServerMethodInfo | undefined = this.serverRepository.getList().find((serverMethod) => {\r\n            return serverMethod.definition.name === methodDefinition.name\r\n                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n            // return this.containsProps(methodFilter, method.definition);\r\n        });\r\n\r\n        if (!methodToBeRemoved) {\r\n            return Promise.reject(`Method with a name \"${methodDefinition.name}\" does not exist or is not registered by your application!`);\r\n        }\r\n\r\n        await this.removeMethodsOrStreams([methodToBeRemoved]);\r\n    }\r\n\r\n    private async unregisterWithPredicate(filterPredicate: (methodDefinition: Glue42Core.AGM.MethodDefinition) => ServerMethodInfo, forStream?: boolean) {\r\n        const methodsOrStreamsToRemove = this.serverRepository.getList()\r\n            .filter((sm) => filterPredicate(sm.definition))\r\n            .filter((serverMethod) =>\r\n                // because both can be undefined or false\r\n                (serverMethod.definition.supportsStreaming || false) === forStream\r\n            );\r\n\r\n        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n            return Promise.reject(`Could not find a ${forStream ? \"stream\" : \"method\"} matching the specified condition!`);\r\n        }\r\n\r\n        await this.removeMethodsOrStreams(methodsOrStreamsToRemove);\r\n    }\r\n\r\n    private removeMethodsOrStreams(methodsToRemove: ServerMethodInfo[]) {\r\n        const methodUnregPromises: Array<Promise<void>> = [];\r\n\r\n        methodsToRemove.forEach((method) => {\r\n            const promise = this.protocol.server.unregister(method)\r\n                .then(() => {\r\n                    if (method.repoId) {\r\n                        this.serverRepository.remove(method.repoId);\r\n                    }\r\n                });\r\n\r\n            methodUnregPromises.push(promise);\r\n            this.addAsCurrentlyUnregistering(method.definition.name, promise);\r\n        });\r\n\r\n        return Promise.all(methodUnregPromises);\r\n    }\r\n\r\n    private async addAsCurrentlyUnregistering(methodName: string, promise: Promise<void>) {\r\n        const timeout = new Promise((resolve) => setTimeout(resolve, 5000));\r\n\r\n        // will be cleared when promise resolved\r\n        this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(() => {\r\n            delete this.currentlyUnregistering[methodName];\r\n        });\r\n    }\r\n\r\n    // Core method for registering agm method\r\n    private async registerCore(method: string | Glue42Core.AGM.MethodDefinition, theFunction: WrappedCallbackFunction): Promise<void> {\r\n        // transform to a definition\r\n        let methodDefinition: Glue42Core.AGM.MethodDefinition;\r\n\r\n        // This is important because if you change the name for example this will change here as well and it shouldn't change by reference\r\n        if (typeof method === \"string\") {\r\n            methodDefinition = { name: \"\" + method };\r\n        } else {\r\n            methodDefinition = { ...method };\r\n        }\r\n\r\n        if (!methodDefinition.name) {\r\n            return Promise.reject(`Please, provide a (unique) string value for the “name” property in the “methodDefinition” object: ${JSON.stringify(method)}`);\r\n        }\r\n\r\n        const unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\r\n        if (unregisterInProgress) {\r\n            await unregisterInProgress;\r\n        }\r\n\r\n        const nameAlreadyExists = this.serverRepository.getList()\r\n            .some((serverMethod) => serverMethod.definition.name === methodDefinition.name);\r\n\r\n        if (nameAlreadyExists) {\r\n            return Promise.reject(`A method with the name \"${methodDefinition.name}\" already exists! Please, provide a unique name for the method.`);\r\n        }\r\n\r\n        if (methodDefinition.supportsStreaming) {\r\n            return Promise.reject(`When you create methods with “glue.interop.register()” or “glue.interop.registerAsync()” the property “supportsStreaming” cannot be “true”. If you want “${methodDefinition.name}” to be a stream, please use the “glue.interop.createStream()” method.`);\r\n        }\r\n\r\n        // Add the method ()\r\n        const repoMethod = this.serverRepository.add({\r\n            definition: methodDefinition, // store un-formatted definition for checkups in un-register method\r\n            theFunction,\r\n            protocolState: {},\r\n        });\r\n\r\n        // make it then .catch for those error/success callbacks\r\n        return this.protocol.server.register(repoMethod)\r\n            .catch((err: any) => {\r\n                if (repoMethod?.repoId) {\r\n                    this.serverRepository.remove(repoMethod.repoId);\r\n                }\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    private onMethodInvoked(methodToExecute: ServerMethodInfo, invocationId: string, invocationArgs: ResultContext) {\r\n        if (!methodToExecute || !methodToExecute.theFunction) {\r\n            return;\r\n        }\r\n\r\n        // Execute it and save the result\r\n        methodToExecute.theFunction(invocationArgs, (err: any, result) => {\r\n            if (err !== undefined && err !== null) {\r\n                // handle error case\r\n                if (err.message && typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                } else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    } catch (unStrException) {\r\n                        err = `un-stringifyable error in onMethodInvoked! Top level prop names: ${Object.keys(err)}`;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!result) {\r\n                result = {};\r\n            } else if (typeof result !== \"object\" || Array.isArray(result)) {\r\n                // The AGM library only transfers objects. If the result is not an object, put it in one\r\n                result = { _value: result };\r\n            }\r\n\r\n            this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    }\r\n}\r\n","import generate from \"shortid\";\r\nimport { Glue42Core } from \"./../../glue\";\r\n\r\nexport class InstanceWrapper {\r\n    private wrapped: Glue42Core.Interop.Instance = {};\r\n\r\n    constructor(API: Glue42Core.AGM.API, instance?: Glue42Core.AGM.Instance, connection?: Glue42Core.Connection.API) {\r\n        this.wrapped.getMethods = function (): Glue42Core.Interop.Method[] {\r\n            return API.methodsForInstance(this);\r\n        };\r\n        this.wrapped.getStreams = function (): Glue42Core.Interop.Method[] {\r\n            return API.methodsForInstance(this).filter((m) => m.supportsStreaming);\r\n        };\r\n\r\n        if (instance) {\r\n            this.refreshWrappedObject(instance);\r\n        }\r\n        if (connection) {\r\n            connection.loggedIn(() => {\r\n                this.refresh(connection);\r\n            });\r\n            this.refresh(connection);\r\n        }\r\n    }\r\n\r\n    public unwrap(): Glue42Core.Interop.Instance {\r\n        return this.wrapped;\r\n    }\r\n\r\n    private refresh(connection: Glue42Core.Connection.API) {\r\n        if (!connection) {\r\n            return;\r\n        }\r\n\r\n        // Apply resolved identity (GW3 case)\r\n        const resolvedIdentity = connection?.resolvedIdentity;\r\n        const instance = Object.assign({}, resolvedIdentity ?? {}, { peerId: connection?.peerId });\r\n        this.refreshWrappedObject(instance);\r\n    }\r\n\r\n    private refreshWrappedObject(resolvedIdentity: Glue42Core.Interop.Instance) {\r\n        this.wrapped.user = resolvedIdentity.user;\r\n        this.wrapped.instance = resolvedIdentity.instance;\r\n        this.wrapped.application = resolvedIdentity.application ?? generate();\r\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\r\n        this.wrapped.pid = resolvedIdentity.pid ?? (resolvedIdentity as any).process ?? Math.floor(Math.random() * 10000000000);\r\n        this.wrapped.machine = resolvedIdentity.machine;\r\n        this.wrapped.environment = resolvedIdentity.environment;\r\n        this.wrapped.region = resolvedIdentity.region;\r\n        this.wrapped.windowId = resolvedIdentity.windowId;\r\n        this.wrapped.isLocal = resolvedIdentity.isLocal ?? true;\r\n        this.wrapped.api = resolvedIdentity.api;\r\n        this.wrapped.service = resolvedIdentity.service;\r\n        this.wrapped.peerId = resolvedIdentity.peerId;\r\n    }\r\n}\r\n","/*\r\n * Repository holding servers and methods visible by this peer including those created by the peer itself.\r\n */\r\nimport { default as CallbackRegistryFactory, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport { ClientMethodInfo, ServerInfo } from \"./types\";\r\nimport { MethodInfoMessage } from \"../protocols/gw3/messages\";\r\nimport { Logger } from \"../../logger/logger\";\r\nimport { InstanceWrapper } from \"../instance\";\r\nimport Client from \"./client\";\r\n\r\nconst hideMethodSystemFlags = (method: ClientMethodInfo): ClientMethodInfo => {\r\n    return {\r\n        ...method,\r\n        flags: method.flags.metadata || {}\r\n    };\r\n};\r\n\r\nexport default class ClientRepository {\r\n\r\n    // each server has format {id:'', info:{}, methods:{}}\r\n    // where methods has format {id:'', info:{}}\r\n    private servers: { [id: string]: ServerInfo } = {};\r\n    private myServer: ServerInfo;\r\n\r\n    // object keyed by method identifier - value is number of servers that offer that method\r\n    private methodsCount: { [id: string]: number } = {};\r\n\r\n    // store for callbacks\r\n    private callbacks = CallbackRegistryFactory();\r\n\r\n    constructor(private logger: Logger, private API: Glue42Core.AGM.API & { unwrappedInstance: InstanceWrapper }) {\r\n        const peerId = this.API.instance.peerId as string;\r\n        this.myServer = {\r\n            id: peerId,\r\n            methods: {},\r\n            instance: this.API.instance,\r\n            wrapper: this.API.unwrappedInstance,\r\n        };\r\n        this.servers[peerId] = this.myServer;\r\n    }\r\n\r\n    // add a new server to internal collection\r\n    public addServer(info: Glue42Core.AGM.Instance, serverId: string): string {\r\n        this.logger.debug(`adding server ${serverId}`);\r\n\r\n        const current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n\r\n        const wrapper = new InstanceWrapper(this.API, info);\r\n        const serverEntry: ServerInfo = {\r\n            id: serverId,\r\n            methods: {},\r\n            instance: wrapper.unwrap(),\r\n            wrapper,\r\n        };\r\n\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\r\n        return serverId;\r\n    }\r\n\r\n    public removeServerById(id: string, reason?: string) {\r\n        const server = this.servers[id];\r\n        if (!server) {\r\n            // tslint:disable-next-line:no-console\r\n            this.logger.warn(`not aware of server ${id}, my state ${JSON.stringify(Object.keys(this.servers))}`);\r\n            return;\r\n        } else {\r\n            // tslint:disable-next-line:no-console\r\n            this.logger.debug(`removing server ${id}`);\r\n        }\r\n\r\n        Object.keys(server.methods).forEach((methodId) => {\r\n            this.removeServerMethod(id, methodId);\r\n        });\r\n\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\r\n    }\r\n\r\n    public addServerMethod(serverId: string, method: MethodInfoMessage) {\r\n\r\n        const server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n\r\n        // server already has that method\r\n        if (server.methods[method.id]) {\r\n            return;\r\n        }\r\n\r\n        const identifier = this.createMethodIdentifier(method);\r\n        const that = this;\r\n        const methodDefinition: ClientMethodInfo = {\r\n            identifier,\r\n            gatewayId: method.id,\r\n            name: method.name,\r\n            displayName: method.display_name,\r\n            description: method.description,\r\n            version: method.version,\r\n            objectTypes: method.object_types || [],\r\n            accepts: method.input_signature,\r\n            returns: method.result_signature,\r\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            flags: method.flags ?? {},\r\n            getServers: () => {\r\n                return that.getServersByMethod(identifier);\r\n            }\r\n        };\r\n        // now add some legacy stuff\r\n        (methodDefinition as any).object_types = methodDefinition.objectTypes;\r\n        (methodDefinition as any).display_name = methodDefinition.displayName;\r\n        (methodDefinition as any).version = methodDefinition.version;\r\n\r\n        server.methods[method.id] = methodDefinition;\r\n\r\n        const clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\r\n\r\n        // increase the ref and notify listeners\r\n        if (!this.methodsCount[identifier]) {\r\n            this.methodsCount[identifier] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\r\n        }\r\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\r\n\r\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\r\n        return methodDefinition;\r\n    }\r\n\r\n    public removeServerMethod(serverId: string, methodId: string) {\r\n        const server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n\r\n        const method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n\r\n        const clientMethodDefinition = hideMethodSystemFlags(method);\r\n\r\n        // update ref counting\r\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\r\n        if (this.methodsCount[method.identifier] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\r\n        }\r\n\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\r\n    }\r\n\r\n    public getMethods(): ClientMethodInfo[] {\r\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\r\n    }\r\n\r\n    public getServers(): ServerInfo[] {\r\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\r\n    }\r\n\r\n    public onServerAdded(callback: (server: Glue42Core.Interop.Instance) => void): UnsubscribeFunction {\r\n        const unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n\r\n        // because we need the servers shapshot before we exist this stack\r\n        const serversWithMethodsToReplay = this.getServers().map((s) => s.instance);\r\n\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\r\n    }\r\n\r\n    public onMethodAdded(callback: (method: ClientMethodInfo) => void): UnsubscribeFunction {\r\n        const unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n\r\n        // because we need the servers snapshot before we return to the application code\r\n        const methodsToReplay = this.getMethods();\r\n\r\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\r\n    }\r\n\r\n    public onServerMethodAdded(callback: (server: Glue42Core.AGM.Instance, method: ClientMethodInfo) => void): UnsubscribeFunction {\r\n        const unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n\r\n        // because we want to interrupt the loop with the existing methods\r\n        let unsubCalled = false;\r\n\r\n        // because we need the servers shapshot before we return to the application code\r\n        const servers = this.getServers();\r\n\r\n        // because we want to have the unsub function before the callback is called with all existing methods\r\n        setTimeout(() => {\r\n            servers.forEach((server) => {\r\n                const methods = server.methods;\r\n                Object.keys(methods).forEach((methodId) => {\r\n                    if (!unsubCalled) {\r\n                        callback(server.instance, methods[methodId]);\r\n                    }\r\n                });\r\n            });\r\n        }, 0);\r\n\r\n        return () => {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    }\r\n\r\n    public onMethodRemoved(callback: (method: ClientMethodInfo) => void): UnsubscribeFunction {\r\n        const unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n\r\n        return unsubscribeFunc;\r\n    }\r\n\r\n    public onServerRemoved(callback: (server: Glue42Core.Interop.Instance, reason: string) => void): UnsubscribeFunction {\r\n        const unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n\r\n        return unsubscribeFunc;\r\n    }\r\n\r\n    public onServerMethodRemoved(callback: (server: Glue42Core.Interop.Instance, method: ClientMethodInfo) => void): UnsubscribeFunction {\r\n        const unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n\r\n        return unsubscribeFunc;\r\n    }\r\n\r\n    public getServerById(id: string) {\r\n        return this.hideServerMethodSystemFlags(this.servers[id]);\r\n    }\r\n\r\n    public reset() {\r\n        Object.keys(this.servers).forEach((key) => {\r\n            this.removeServerById(key, \"reset\");\r\n        });\r\n        this.servers = {\r\n            [this.myServer.id]: this.myServer\r\n        };\r\n        this.methodsCount = {};\r\n    }\r\n\r\n    private createMethodIdentifier(methodInfo: MethodInfoMessage) {\r\n        // Setting properties to defaults:\r\n        const accepts = methodInfo.input_signature !== undefined ? methodInfo.input_signature : \"\";\r\n        const returns = methodInfo.result_signature !== undefined ? methodInfo.result_signature : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    }\r\n\r\n    private getServersByMethod(identifier: string): Glue42Core.AGM.Instance[] {\r\n        const allServers: Glue42Core.AGM.Instance[] = [];\r\n        Object.values(this.servers).forEach((server) => {\r\n            Object.values(server.methods).forEach((method) => {\r\n                if (method.identifier === identifier) {\r\n                    allServers.push(server.instance);\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    }\r\n\r\n    // collectionToReplay: because we need a snapshot before we exist this stack\r\n    private returnUnsubWithDelayedReplay(unsubscribeFunc: UnsubscribeFunction, collectionToReplay: any[], callback: any) {\r\n\r\n        // because we want to interrupt the loop with the existing methods\r\n        let unsubCalled = false;\r\n\r\n        // because we want to have the unsub function before the callback is called with all existing methods\r\n        setTimeout(() => {\r\n            collectionToReplay.forEach((item) => {\r\n                if (!unsubCalled) {\r\n                    callback(item);\r\n                }\r\n            });\r\n        }, 0);\r\n\r\n        return () => {\r\n            unsubCalled = true;\r\n            unsubscribeFunc();\r\n        };\r\n    }\r\n\r\n    private hideServerMethodSystemFlags(server: ServerInfo): ServerInfo {\r\n        const clientMethods: { [name: string]: ClientMethodInfo } = {};\r\n\r\n        Object.entries(server.methods).forEach(([name, method]) => {\r\n            clientMethods[name] = hideMethodSystemFlags(method);\r\n        });\r\n\r\n        return {\r\n            ...server,\r\n            methods: clientMethods\r\n        };\r\n    }\r\n\r\n    private extractMethodsFromServers(servers: ServerInfo[]): ClientMethodInfo[] {\r\n        const methods = Object.values(servers).reduce<ClientMethodInfo[]>((clientMethods, server) => {\r\n            return [...clientMethods, ...Object.values(server.methods)];\r\n        }, []);\r\n\r\n        return methods;\r\n    }\r\n}\r\n","/*\r\n * A store for holding method back-objects registered by this instance's server\r\n */\r\nimport { ServerMethodInfo } from \"./types\";\r\n\r\nexport default class ServerRepository {\r\n\r\n    private nextId = 0;\r\n    private methods: ServerMethodInfo[] = [];\r\n\r\n    public add(method: Partial<ServerMethodInfo>): ServerMethodInfo {\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method as ServerMethodInfo);\r\n        return method as ServerMethodInfo;\r\n    }\r\n\r\n    public remove(repoId: string) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n\r\n        this.methods = this.methods.filter((m) => {\r\n            return m.repoId !== repoId;\r\n        });\r\n    }\r\n\r\n    public getById(id: string): ServerMethodInfo | undefined {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n\r\n        return this.methods.find((m) => {\r\n            return m.repoId === id;\r\n        });\r\n    }\r\n\r\n    public getList() {\r\n        return this.methods.map((m) => m);\r\n    }\r\n\r\n    public length() {\r\n        return this.methods.length;\r\n    }\r\n\r\n    public reset() {\r\n        this.methods = [];\r\n    }\r\n}\r\n","import { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\r\nimport { RequestContext, ServerMethodInfo, ServerSubscriptionInfo } from \"../../server/types\";\r\nimport ClientRepository from \"../../client/repository\";\r\nimport ServerRepository from \"../../server/repository\";\r\nimport {\r\n    AddInterestMessage,\r\n    PublishMessage,\r\n    PostMessage,\r\n    DropSubscriptionMessage,\r\n    RemoveInterestMessage\r\n} from \"./messages\";\r\nimport { Glue42Core } from \"../../../../glue\";\r\nimport { Logger } from \"../../../logger/logger\";\r\n\r\nconst SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nconst SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nconst SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\n\r\n/**\r\n * Handles registering methods and sending data to clients\r\n */\r\nexport default class ServerStreaming {\r\n\r\n    private ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n    private callbacks = CallbackRegistryFactory();\r\n    private nextStreamId = 0;\r\n\r\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private repository: ClientRepository, private serverRepository: ServerRepository) {\r\n        session.on(\"add-interest\", (msg: AddInterestMessage) => {\r\n            this.handleAddInterest(msg);\r\n        });\r\n        session.on(\"remove-interest\", (msg: RemoveInterestMessage) => {\r\n            this.handleRemoveInterest(msg);\r\n        });\r\n    }\r\n\r\n    public acceptRequestOnBranch(requestContext: RequestContext, streamingMethod: ServerMethodInfo, branch: string) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n\r\n        const streamId = this.getStreamId(streamingMethod, branch);\r\n\r\n        // Add a new subscription to the method\r\n        const key = requestContext.msg.subscription_id;\r\n\r\n        const subscription: ServerSubscriptionInfo = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n\r\n        // Inform the gw\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n\r\n        // Pass state above-protocol for user objects\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    }\r\n\r\n    public rejectRequest(requestContext: RequestContext, streamingMethod: ServerMethodInfo, reason: string) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n\r\n        this.sendSubscriptionFailed(\r\n            \"Subscription rejected by user. \" + reason,\r\n            requestContext.msg.subscription_id,\r\n        );\r\n    }\r\n\r\n    public pushData(streamingMethod: ServerMethodInfo, data: object, branches: string | string[]) {\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n\r\n        // TODO validate data is a plain object\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches]; // user wants to push to single branch\r\n        } else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = [];\r\n        }\r\n\r\n        // get the StreamId's from the method's branch map\r\n        const streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter((br) => {\r\n                if (!branches || branches.length === 0) {\r\n                    return true;\r\n                }\r\n                return branches.indexOf(br.key) >= 0;\r\n            }).map((br) => {\r\n                return br.streamId;\r\n            });\r\n\r\n        // if (streamIdList.length === 0) {\r\n        //     throw new Error(\"0 branches exist with the supplied name/s !\");\r\n        // }\r\n\r\n        streamIdList.forEach((streamId) => {\r\n            const publishMessage: PublishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                // sequence: null,  // the streamingMethod might be used for this\r\n                // snapshot: false, // ...and this\r\n                data,\r\n            };\r\n\r\n            this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    }\r\n\r\n    public pushDataToSingle(method: ServerMethodInfo, subscription: ServerSubscriptionInfo, data: object) {\r\n        // TODO validate data is a plain object\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n\r\n        const postMessage: PostMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            // sequence: null,  // the streamingMethod might be used for this\r\n            // snapshot: false, // ...and this\r\n            data,\r\n        };\r\n\r\n        this.session.sendFireAndForget(postMessage);\r\n    }\r\n\r\n    public closeSingleSubscription(streamingMethod: ServerMethodInfo, subscription: ServerSubscriptionInfo) {\r\n\r\n        if (streamingMethod.protocolState.subscriptionsMap) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        }\r\n\r\n        const dropSubscriptionMessage: DropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n\r\n        const subscriber = subscription.instance;\r\n\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    }\r\n\r\n    public closeMultipleSubscriptions(streamingMethod: ServerMethodInfo, branchKey?: string) {\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n\r\n        const subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n        let subscriptionsToClose = Object.keys(subscriptionsMap)\r\n            .map((key) => {\r\n                return subscriptionsMap[key];\r\n            });\r\n\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter((sub) => {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n\r\n        subscriptionsToClose.forEach((subscription) => {\r\n            delete subscriptionsMap[subscription.id];\r\n\r\n            const drop: DropSubscriptionMessage = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            this.session.sendFireAndForget(drop);\r\n        });\r\n    }\r\n\r\n    public getSubscriptionList(streamingMethod: ServerMethodInfo, branchKey?: string): ServerSubscriptionInfo[] {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n\r\n        let subscriptions = [];\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        const subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n\r\n        const allSubscriptions = Object.keys(subscriptionsMap)\r\n            .map((key) => {\r\n                return subscriptionsMap[key];\r\n            });\r\n\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        } else {\r\n            subscriptions = allSubscriptions.filter((sub) => {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n\r\n        return subscriptions;\r\n    }\r\n\r\n    public getBranchList(streamingMethod: ServerMethodInfo): string[] {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return [];\r\n        }\r\n        const subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\r\n\r\n        const allSubscriptions =\r\n            Object.keys(subscriptionsMap)\r\n                .map((key) => {\r\n                    return subscriptionsMap[key];\r\n                });\r\n\r\n        const result: string[] = [];\r\n        allSubscriptions.forEach((sub) => {\r\n            let branch = \"\";\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                branch = sub.branchKey;\r\n            }\r\n\r\n            if (result.indexOf(branch) === -1) {\r\n                result.push(branch);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    public onSubAdded(callback: (subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    }\r\n\r\n    public onSubRequest(callback: (requestContext: RequestContext, repoMethod: ServerMethodInfo) => void) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    }\r\n\r\n    public onSubRemoved(callback: (subscriber: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    }\r\n\r\n    private handleRemoveInterest(msg: RemoveInterestMessage) {\r\n        const streamingMethod = this.serverRepository.getById(msg.method_id);\r\n\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        if (!streamingMethod.protocolState.subscriptionsMap) {\r\n            return;\r\n        }\r\n\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        const subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    }\r\n\r\n    private onSubscriptionLifetimeEvent(eventName: string, handlerFunc: any) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    }\r\n\r\n    private getNextStreamId(): string {\r\n        return this.nextStreamId++ + \"\";\r\n    }\r\n\r\n    /**\r\n     * Processes a subscription request\r\n     */\r\n    private handleAddInterest(msg: AddInterestMessage) {\r\n\r\n        const caller = this.repository.getServerById(msg.caller_id);\r\n        const instance = caller.instance;\r\n\r\n        // call subscriptionRequestHandler\r\n        const requestContext: RequestContext = {\r\n            msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance,\r\n        };\r\n\r\n        const streamingMethod = this.serverRepository.getById(msg.method_id);\r\n\r\n        if (streamingMethod === undefined) {\r\n            const errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\",\r\n                msg.subscription_id,\r\n            );\r\n            return;\r\n        }\r\n\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    }\r\n\r\n    private sendSubscriptionFailed(reason: string, subscriptionId: string) {\r\n        const errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason,\r\n            request_id: subscriptionId, // this overrides connection wrapper\r\n        };\r\n\r\n        this.session.sendFireAndForget(errorMessage);\r\n    }\r\n\r\n    private getStreamId(streamingMethod: ServerMethodInfo, branchKey: string) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n\r\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\r\n            throw new Error(`streaming ${streamingMethod.definition.name} method without protocol state`);\r\n        }\r\n\r\n        const needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter((branch) => {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n\r\n        let streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId });\r\n        }\r\n\r\n        return streamId;\r\n    }\r\n}\r\n","import { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\r\nimport ServerStreaming from \"./server-streaming\";\r\nimport {\r\n    InvokeMessage,\r\n    RegisterMethodMessage,\r\n    ErrorMessage,\r\n    YieldMessage,\r\n    UnregisterMessage,\r\n    TaggedMessage\r\n} from \"./messages\";\r\nimport ServerRepository from \"../../server/repository\";\r\nimport { Glue42Core } from \"../../../../glue\";\r\nimport { ServerMethodInfo, ResultContext, ServerSubscriptionInfo, RequestContext } from \"../../server/types\";\r\nimport ClientRepository from \"../../client/repository\";\r\nimport { ServerProtocolDefinition } from \"../../types\";\r\nimport { Logger } from \"../../../logger/logger\";\r\n\r\nexport default class ServerProtocol implements ServerProtocolDefinition {\r\n    private callbacks: CallbackRegistry = CallbackRegistryFactory();\r\n    private streaming: ServerStreaming;\r\n\r\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private clientRepository: ClientRepository, private serverRepository: ServerRepository, private logger: Logger) {\r\n        this.streaming = new ServerStreaming(session, clientRepository, serverRepository);\r\n        this.session.on(\"invoke\", (msg: InvokeMessage) => this.handleInvokeMessage(msg));\r\n    }\r\n\r\n    public createStream(repoMethod: ServerMethodInfo): Promise<void> {\r\n        // Utility things for this protocol\r\n        repoMethod.protocolState.subscriptionsMap = {}; // ~subscription_id~ : {id:~, branchKey: '~', arguments: {~}, instance:{~}, etc.}\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = []; // [ {branchKey: '', streamId: 7}, {...}, ...]\r\n\r\n        return this.register(repoMethod, true);\r\n    }\r\n\r\n    public register(repoMethod: ServerMethodInfo, isStreaming?: boolean): Promise<void> {\r\n        const methodDef = repoMethod.definition;\r\n        const flags = Object.assign({}, { metadata: methodDef.flags ?? {} }, { streaming: isStreaming || false });\r\n\r\n        const registerMsg: RegisterMethodMessage = {\r\n            type: \"register\",\r\n            methods: [{\r\n                id: repoMethod.repoId,\r\n                name: methodDef.name,\r\n                display_name: methodDef.displayName,\r\n                description: methodDef.description,\r\n                version: methodDef.version,\r\n                flags,\r\n                object_types: methodDef.objectTypes || (methodDef as any).object_types, // object_type for backward compatibility\r\n                input_signature: methodDef.accepts,\r\n                result_signature: methodDef.returns,\r\n                restrictions: undefined,\r\n            }],\r\n        };\r\n\r\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n            .then(() => {\r\n                this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\r\n            })\r\n            .catch((msg: ErrorMessage) => {\r\n                this.logger.warn(`failed to register method ${repoMethod.definition.name} with id ${repoMethod.repoId} - ${JSON.stringify(msg)}`);\r\n                throw msg;\r\n            });\r\n    }\r\n\r\n    public onInvoked(callback: (methodToExecute: ServerMethodInfo, invocationId: string, invocationArgs: ResultContext) => void) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    }\r\n\r\n    public methodInvocationResult(method: ServerMethodInfo, invocationId: string, err: string, result: object) {\r\n        let msg: YieldMessage | ErrorMessage;\r\n        if (err || err === \"\") {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        } else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    }\r\n\r\n    public async unregister(method: ServerMethodInfo): Promise<void> {\r\n        const msg: UnregisterMessage = {\r\n            type: \"unregister\",\r\n            methods: [method.repoId],\r\n        };\r\n\r\n        await this.session.send(msg);\r\n    }\r\n\r\n    public getBranchList(method: ServerMethodInfo): string[] {\r\n        return this.streaming.getBranchList(method);\r\n    }\r\n\r\n    public getSubscriptionList(method: ServerMethodInfo, branchKey?: string): ServerSubscriptionInfo[] {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    }\r\n\r\n    public closeAllSubscriptions(method: ServerMethodInfo, branchKey?: string): void {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    }\r\n\r\n    public pushData(method: ServerMethodInfo, data: object, branches: string[]): void {\r\n        this.streaming.pushData(method, data, branches);\r\n    }\r\n\r\n    public pushDataToSingle(method: ServerMethodInfo, subscription: ServerSubscriptionInfo, data: object): void {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    }\r\n\r\n    public closeSingleSubscription(method: ServerMethodInfo, subscription: ServerSubscriptionInfo): void {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    }\r\n\r\n    public acceptRequestOnBranch(requestContext: RequestContext, method: ServerMethodInfo, branch: string): void {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    }\r\n\r\n    public rejectRequest(requestContext: RequestContext, method: ServerMethodInfo, reason: string): void {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    }\r\n\r\n    public onSubRequest(callback: (requestContext: RequestContext, repoMethod: ServerMethodInfo) => void): void {\r\n        this.streaming.onSubRequest(callback);\r\n    }\r\n\r\n    public onSubAdded(callback: (subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void): void {\r\n        this.streaming.onSubAdded(callback);\r\n    }\r\n\r\n    public onSubRemoved(callback: (subscriber: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void): void {\r\n        this.streaming.onSubRemoved(callback);\r\n    }\r\n\r\n    private handleInvokeMessage(msg: InvokeMessage) {\r\n        const invocationId = msg.invocation_id;\r\n        const callerId = msg.caller_id;\r\n        const methodId = msg.method_id;\r\n        const args = msg.arguments_kv;\r\n        const methodList = this.serverRepository.getList();\r\n\r\n        const method = methodList.filter((m) => {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n\r\n        // Stop if the message isn't for us\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n\r\n        const client = this.clientRepository.getServerById(callerId).instance;\r\n        const invocationArgs = { args, instance: client };\r\n\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../../glue\";\r\nimport { SubscriptionInner } from \"../../types\";\r\nimport ClientRepository from \"../../client/repository\";\r\n\r\nexport class UserSubscription implements Glue42Core.Interop.Subscription {\r\n    public get requestArguments() {\r\n        return this.subscriptionData.params.arguments || {};\r\n    }\r\n\r\n    public get servers(): Glue42Core.Interop.Instance[] {\r\n        return this.subscriptionData.trackedServers\r\n            .filter((pair) => pair.subscriptionId)\r\n            .map((pair) => this.repository.getServerById(pair.serverId).instance);\r\n    }\r\n\r\n    public get serverInstance(): Glue42Core.Interop.Instance {\r\n        return this.servers[0];\r\n    }\r\n\r\n    public get stream(): Glue42Core.Interop.MethodDefinition {\r\n        return this.subscriptionData.method;\r\n    }\r\n\r\n    constructor(private repository: ClientRepository, private subscriptionData: SubscriptionInner) {\r\n    }\r\n\r\n    public onData(dataCallback: (data: Glue42Core.Interop.StreamData) => void): void {\r\n        if (typeof dataCallback !== \"function\") {\r\n            throw new TypeError(\"The data callback must be a function.\");\r\n        }\r\n\r\n        this.subscriptionData.handlers.onData.push(dataCallback);\r\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\r\n            this.subscriptionData.queued.data.forEach((dataItem) => {\r\n                dataCallback(dataItem);\r\n            });\r\n        }\r\n    }\r\n\r\n    public onClosed(closedCallback: (info: Glue42Core.Interop.OnClosedInfo) => void): void {\r\n        if (typeof closedCallback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\r\n    }\r\n\r\n    public onFailed(callback: (err: any) => void): void {\r\n        // DO NOTHING\r\n    }\r\n\r\n    public onConnected(callback: (server: Glue42Core.Interop.Instance, reconnect: boolean) => void): void {\r\n        if (typeof callback !== \"function\") {\r\n            throw new TypeError(\"The callback must be a function.\");\r\n        }\r\n        this.subscriptionData.handlers.onConnected.push(callback);\r\n    }\r\n\r\n    public close(): void {\r\n        this.subscriptionData.close();\r\n    }\r\n\r\n    public setNewSubscription(newSub: SubscriptionInner) {\r\n        this.subscriptionData = newSub;\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../../glue\";\r\nimport ClientRepository from \"../../client/repository\";\r\nimport { ServerMethodsPair } from \"../../client/types\";\r\nimport * as GW3Messages from \"./messages\";\r\nimport { SubscriptionCancelledMessage, EventMessage, SubscribedMessage, ErrorSubscribingMessage } from \"./messages\";\r\nimport { SubscribeError, SubscriptionInner } from \"../../types\";\r\nimport { Logger } from \"../../../logger/logger\";\r\nimport { UserSubscription } from \"./subscription\";\r\n\r\nconst STATUS_AWAITING_ACCEPT = \"awaitingAccept\"; // not even one server has accepted yet\r\nconst STATUS_SUBSCRIBED = \"subscribed\"; // at least one server has responded as 'Accepting'\r\nconst ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nconst ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nconst ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nconst ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\n\r\n/**\r\n * Handles registering methods and sending data to clients\r\n */\r\nexport default class ClientStreaming {\r\n\r\n    private subscriptionsList: { [key: number]: SubscriptionInner } = {};\r\n    private subscriptionIdToLocalKeyMap: { [key: string]: number } = {};\r\n    private nextSubLocalKey = 0;\r\n\r\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private repository: ClientRepository, private logger: Logger) {\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n\r\n    public subscribe(streamingMethod: Glue42Core.AGM.MethodDefinition, params: Glue42Core.AGM.SubscriptionParams, targetServers: ServerMethodsPair[], success: (sub: Glue42Core.AGM.Subscription) => void, error: (err: SubscribeError) => void, existingSub: SubscriptionInner) {\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Note: used to find the subscription in subList. Do not confuse it with the gw-generated subscription_id\r\n        const subLocalKey = this.getNextSubscriptionLocalKey();\r\n\r\n        const pendingSub = this.registerSubscription(\r\n            subLocalKey,\r\n            streamingMethod,\r\n            params,\r\n            success,\r\n            error,\r\n            params.methodResponseTimeout || 10000,\r\n            existingSub\r\n        );\r\n\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod,\r\n                called_with: params.arguments,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        targetServers.forEach((target) => {\r\n\r\n            const serverId = target.server.id;\r\n            const method = target.methods.find((m) => m.name === streamingMethod.name);\r\n\r\n            if (!method) {\r\n                this.logger.error(`can not find method ${streamingMethod.name} for target ${target.server.id}`);\r\n                return;\r\n            }\r\n\r\n            pendingSub.trackedServers.push({\r\n                serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n\r\n            const msg: GW3Messages.SubscribeMessage = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: method.gatewayId,\r\n                arguments_kv: params.arguments,\r\n            };\r\n\r\n            this.session.send<SubscribedMessage>(msg, { serverId, subLocalKey })\r\n                .then((m: SubscribedMessage) => this.handleSubscribed(m))\r\n                .catch((err: ErrorSubscribingMessage) => this.handleErrorSubscribing(err));\r\n        });\r\n    }\r\n\r\n    public drainSubscriptions() {\r\n        const existing = Object.values(this.subscriptionsList);\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        return existing;\r\n    }\r\n\r\n    private getNextSubscriptionLocalKey() {\r\n        const current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    }\r\n\r\n    // This adds subscription and after timeout (30000 default) removes it if it isn't STATUS_SUBSCRIBED\r\n    private registerSubscription(subLocalKey: number, method: Glue42Core.AGM.MethodDefinition, params: Glue42Core.Interop.SubscriptionParams, success: (sub: Glue42Core.AGM.Subscription) => void, error: (err: SubscribeError) => void, timeout: number, existingSub: SubscriptionInner) {\r\n        const subsInfo: SubscriptionInner = {\r\n            localKey: subLocalKey,\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method,\r\n            params,\r\n            success,\r\n            error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: existingSub?.handlers.onData || [],\r\n                onClosed: existingSub?.handlers.onClosed || [],\r\n                onConnected: existingSub?.handlers.onConnected || [],\r\n                // onFailed: []\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n            close: () => this.closeSubscription(subLocalKey),\r\n            subscription: existingSub?.subscription // only when re-connecting\r\n        };\r\n\r\n        if (!existingSub) {\r\n            if (params.onData) {\r\n                subsInfo.handlers.onData.push(params.onData);\r\n            }\r\n            if (params.onClosed) {\r\n                subsInfo.handlers.onClosed.push(params.onClosed);\r\n            }\r\n            if (params.onConnected) {\r\n                subsInfo.handlers.onConnected.push(params.onConnected);\r\n            }\r\n        }\r\n\r\n        this.subscriptionsList[subLocalKey] = subsInfo;\r\n\r\n        subsInfo.timeoutId = setTimeout(() => {\r\n            if (this.subscriptionsList[subLocalKey] === undefined) {\r\n                return; // no such subscription\r\n            }\r\n\r\n            const pendingSub = this.subscriptionsList[subLocalKey];\r\n\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method,\r\n                    called_with: params.arguments,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n\r\n                // None of the target servers has answered the subscription attempt\r\n                delete this.subscriptionsList[subLocalKey];\r\n\r\n            } else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                // Clean the trackedServers, removing those without valid streamId\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter((server) => {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n\r\n                delete pendingSub.timeoutId;\r\n\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    // There are no open streams, some servers accepted then closed very quickly\r\n                    //  (that's why the status changed but there's no good server with a StreamId)\r\n\r\n                    // call the onClosed handlers\r\n                    this.callOnClosedHandlers(pendingSub);\r\n\r\n                    delete this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n\r\n        return subsInfo;\r\n    }\r\n\r\n    private handleErrorSubscribing = (errorResponse: ErrorSubscribingMessage) => {\r\n        const tag = errorResponse._tag;\r\n        const subLocalKey = tag.subLocalKey;\r\n        const pendingSub = this.subscriptionsList[subLocalKey];\r\n\r\n        if (typeof pendingSub !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        pendingSub.trackedServers = pendingSub.trackedServers.filter((server) => {\r\n            return server.serverId !== tag.serverId;\r\n        });\r\n\r\n        if (pendingSub.trackedServers.length <= 0) {\r\n            clearTimeout(pendingSub.timeoutId);\r\n\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                // Reject with reason\r\n                const reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                    ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                    \" No reason given.\";\r\n\r\n                const callArgs = typeof pendingSub.params.arguments === \"object\" ?\r\n                    JSON.stringify(pendingSub.params.arguments) :\r\n                    \"{}\";\r\n\r\n                pendingSub.error({\r\n                    message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                    called_with: pendingSub.params.arguments,\r\n                    method: pendingSub.method,\r\n                });\r\n\r\n            } else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                // The timeout may or may not have expired yet,\r\n                // but the status is 'subscribed' and trackedServers is now empty\r\n\r\n                this.callOnClosedHandlers(pendingSub);\r\n            }\r\n\r\n            delete this.subscriptionsList[subLocalKey];\r\n        }\r\n    }\r\n\r\n    private handleSubscribed = (msg: SubscribedMessage) => {\r\n        const subLocalKey = msg._tag.subLocalKey;\r\n        const pendingSub = this.subscriptionsList[subLocalKey];\r\n\r\n        if (typeof pendingSub !== \"object\") {\r\n            return;\r\n        }\r\n        const serverId = msg._tag.serverId;\r\n\r\n        // Add a subscription_id to this trackedServer\r\n\r\n        const acceptingServer = pendingSub.trackedServers\r\n            .filter((server) => {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n\r\n        if (typeof acceptingServer !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        acceptingServer.subscriptionId = msg.subscription_id;\r\n        this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n\r\n        const isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n\r\n        pendingSub.status = STATUS_SUBSCRIBED;\r\n\r\n        if (isFirstResponse) {\r\n            let reconnect: boolean = false;\r\n            let sub = pendingSub.subscription;\r\n            if (sub) {\r\n                // re-connect case, we already have subscription object\r\n                sub.setNewSubscription(pendingSub);\r\n                pendingSub.success(sub);\r\n                reconnect = true;\r\n            } else {\r\n                sub = new UserSubscription(this.repository, pendingSub);\r\n                pendingSub.subscription = sub;\r\n                // Pass in the subscription object\r\n                pendingSub.success(sub);\r\n            }\r\n\r\n            for (const handler of pendingSub.handlers.onConnected) {\r\n                try {\r\n                    handler(sub.serverInstance, reconnect);\r\n                } catch (e) {\r\n                    // DO nothing\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleEventData = (msg: EventMessage) => {\r\n\r\n        const subLocalKey = this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n\r\n        if (typeof subLocalKey === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        const subscription = this.subscriptionsList[subLocalKey];\r\n\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        const trackedServersFound = subscription.trackedServers.filter((server) => {\r\n            return server.subscriptionId === msg.subscription_id;\r\n        });\r\n\r\n        if (trackedServersFound.length !== 1) {\r\n            return;\r\n        }\r\n\r\n        // out_of_band. (main stream band)\r\n        const isPrivateData = msg.oob;\r\n\r\n        const sendingServerId = trackedServersFound[0].serverId;\r\n\r\n        // Create the arrivedData object, new object for each handler call\r\n        const receivedStreamData = (): Glue42Core.AGM.StreamData => {\r\n            return {\r\n                data: msg.data,\r\n                server: this.repository.getServerById(sendingServerId).instance,\r\n                requestArguments: subscription.params.arguments,\r\n                message: undefined,\r\n                private: isPrivateData,\r\n            };\r\n        };\r\n\r\n        const onDataHandlers = subscription.handlers.onData;\r\n        const queuedData = subscription.queued.data;\r\n\r\n        if (onDataHandlers.length > 0) {\r\n            onDataHandlers.forEach((callback) => {\r\n                if (typeof callback === \"function\") {\r\n                    callback(receivedStreamData());\r\n                }\r\n            });\r\n        } else {\r\n            queuedData.push(receivedStreamData());\r\n        }\r\n    }\r\n\r\n    // called only on stream.close() multiple times for each subscription\r\n    private handleSubscriptionCancelled = (msg: SubscriptionCancelledMessage) => {\r\n        const subLocalKey = this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n\r\n        if (typeof subLocalKey === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        const subscription = this.subscriptionsList[subLocalKey];\r\n\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        // Filter tracked servers\r\n        const expectedNewLength = subscription.trackedServers.length - 1;\r\n\r\n        subscription.trackedServers = subscription.trackedServers.filter((server) => {\r\n            if (server.subscriptionId === msg.subscription_id) {\r\n                subscription.queued.closers.push(server.serverId);\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        // Check if a server was actually removed\r\n        if (subscription.trackedServers.length !== expectedNewLength) {\r\n            // TODO: Log some error\r\n            return;\r\n        }\r\n\r\n        // Check if this was the last remaining server\r\n        if (subscription.trackedServers.length <= 0) {\r\n            clearTimeout(subscription.timeoutId);\r\n            this.callOnClosedHandlers(subscription);\r\n            delete this.subscriptionsList[subLocalKey];\r\n        }\r\n\r\n        delete this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n    }\r\n\r\n    private callOnClosedHandlers(subscription: SubscriptionInner, reason?: string) {\r\n\r\n        const closersCount = subscription.queued.closers.length;\r\n        const closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n\r\n        let closingServer: Glue42Core.AGM.Instance;\r\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\r\n            closingServer = this.repository.getServerById(closingServerId).instance;\r\n        }\r\n\r\n        subscription.handlers.onClosed.forEach((callback) => {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.params.arguments || {},\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    }\r\n\r\n    // called on client/server close (not on stream.close)\r\n    private closeSubscription(subLocalKey: number) {\r\n        const subscription = this.subscriptionsList[subLocalKey];\r\n\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n\r\n        // Tell each server that we're unsubscribing\r\n        subscription.trackedServers.forEach((server) => {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n\r\n            subscription.queued.closers.push(server.serverId);\r\n\r\n            this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n\r\n            delete this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n\r\n        subscription.trackedServers = [];\r\n\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n\r\n        delete this.subscriptionsList[subLocalKey];\r\n    }\r\n}\r\n","import ClientStreaming from \"./client-streaming\";\r\nimport {\r\n    CallMessage,\r\n    ErrorMessage,\r\n    MethodsAddedMessage,\r\n    MethodsRemovedMessage,\r\n    PeerAddedMessage,\r\n    PeerRemovedMessage,\r\n    ResultMessage,\r\n    MethodInfoMessage\r\n} from \"./messages\";\r\nimport { Glue42Core } from \"../../../../glue\";\r\nimport ClientRepository from \"../../client/repository\";\r\nimport { ClientMethodInfo, ServerInfo, ServerMethodsPair } from \"../../client/types\";\r\nimport { ClientProtocolDefinition, SubscribeError, SubscriptionInner } from \"../../types\";\r\nimport { InvokeResultMessage, InvokeStatus } from \"../../client/client\";\r\nimport { Logger } from \"../../../logger/logger\";\r\n\r\n/**\r\n * Handles session lifetime and events\r\n */\r\nexport default class ClientProtocol implements ClientProtocolDefinition {\r\n\r\n    private streaming: ClientStreaming;\r\n\r\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private repository: ClientRepository, private logger: Logger) {\r\n        session.on(\"peer-added\", (msg: PeerAddedMessage) => this.handlePeerAdded(msg));\r\n        session.on(\"peer-removed\", (msg: PeerRemovedMessage) => this.handlePeerRemoved(msg));\r\n        session.on(\"methods-added\", (msg: MethodsAddedMessage) => this.handleMethodsAddedMessage(msg));\r\n        session.on(\"methods-removed\", (msg: MethodsRemovedMessage) => this.handleMethodsRemovedMessage(msg));\r\n\r\n        this.streaming = new ClientStreaming(session, repository, logger);\r\n    }\r\n\r\n    public subscribe(stream: Glue42Core.AGM.MethodDefinition, options: Glue42Core.AGM.SubscriptionParams, targetServers: ServerMethodsPair[], success: (sub: Glue42Core.AGM.Subscription) => void, error: (err: SubscribeError) => void, existingSub: SubscriptionInner): void {\r\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\r\n    }\r\n\r\n    public invoke(id: string, method: ClientMethodInfo, args: object, target: ServerInfo): Promise<InvokeResultMessage> {\r\n\r\n        const serverId = target.id;\r\n        const methodId = method.gatewayId;\r\n        const msg: CallMessage = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n\r\n        // we transfer the invocation id as tag\r\n        return this.session.send<ResultMessage>(msg, { invocationId: id, serverId })\r\n            .then((m: ResultMessage) => this.handleResultMessage(m))\r\n            .catch((err) => this.handleInvocationError(err));\r\n    }\r\n\r\n    public drainSubscriptions(): SubscriptionInner[] {\r\n        return this.streaming.drainSubscriptions();\r\n    }\r\n\r\n    private handlePeerAdded(msg: PeerAddedMessage) {\r\n        const newPeerId = msg.new_peer_id;\r\n        const remoteId = msg.identity;\r\n        const isLocal = msg.meta ? msg.meta.local : true;\r\n        const pid = Number(remoteId.process);\r\n\r\n        const serverInfo: Glue42Core.AGM.Instance = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            applicationName: remoteId.applicationName,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n            api: remoteId.api,\r\n            isLocal\r\n        };\r\n\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    }\r\n\r\n    private handlePeerRemoved(msg: PeerRemovedMessage) {\r\n        const removedPeerId = msg.removed_id;\r\n        const reason = msg.reason;\r\n\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    }\r\n\r\n    private handleMethodsAddedMessage(msg: MethodsAddedMessage) {\r\n        const serverId = msg.server_id;\r\n        const methods = msg.methods;\r\n\r\n        methods.forEach((method: MethodInfoMessage) => {\r\n            this.repository.addServerMethod(serverId, method);\r\n        });\r\n    }\r\n\r\n    private handleMethodsRemovedMessage(msg: MethodsRemovedMessage) {\r\n        const serverId = msg.server_id;\r\n        const methodIdList = msg.methods;\r\n\r\n        const server = this.repository.getServerById(serverId);\r\n        const serverMethodKeys = Object.keys(server.methods);\r\n\r\n        serverMethodKeys.forEach((methodKey) => {\r\n            const method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\r\n                this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    }\r\n\r\n    private handleResultMessage(msg: ResultMessage): InvokeResultMessage {\r\n        const invocationId = msg._tag.invocationId;\r\n        const result = msg.result;\r\n        const serverId = msg._tag.serverId;\r\n        const server = this.repository.getServerById(serverId);\r\n\r\n        return {\r\n            invocationId,\r\n            result,\r\n            instance: server.instance,\r\n            status: InvokeStatus.Success,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    private handleInvocationError(msg: ErrorMessage | Error): InvokeResultMessage {\r\n        this.logger.debug(`handle invocation error ${JSON.stringify(msg)}`);\r\n\r\n        if (\"_tag\" in msg) {\r\n            const invocationId = msg._tag.invocationId;\r\n            const serverId = msg._tag.serverId;\r\n            const server = this.repository.getServerById(serverId);\r\n            const message = msg.reason;\r\n            const context = msg.context;\r\n\r\n            return {\r\n                invocationId,\r\n                result: context,\r\n                instance: server.instance,\r\n                status: InvokeStatus.Error,\r\n                message\r\n            };\r\n        } else {\r\n            return {\r\n                invocationId: \"\",\r\n                message: (msg as Error).message,\r\n                status: InvokeStatus.Error,\r\n                error: msg as Error\r\n            };\r\n        }\r\n    }\r\n}\r\n","import ServerProtocol from \"./server\";\r\nimport ClientProtocol from \"./client\";\r\nimport { Glue42Core } from \"../../../../glue\";\r\nimport ClientRepository from \"../../client/repository\";\r\nimport ServerRepository from \"../../server/repository\";\r\nimport Interop from \"../../interop\";\r\nimport { Protocol, InteropSettings } from \"../../types\";\r\nimport Connection from \"../../../connection/connection\";\r\n\r\nexport default function (instance: Glue42Core.AGM.Instance, connection: Connection, clientRepository: ClientRepository, serverRepository: ServerRepository, libConfig: InteropSettings, interop: Interop): Promise<Protocol> {\r\n    const logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    let resolveReadyPromise: ((p: Protocol) => void) | undefined;\r\n\r\n    const readyPromise = new Promise<Protocol>((resolve) => {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n\r\n    // start domain join handshake\r\n    const session = connection.domain(\"agm\", [\"subscribed\"]);\r\n\r\n    const server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    const client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\r\n\r\n    function handleReconnect() {\r\n        // we're reconnecting\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n\r\n        const existingSubscriptions = client.drainSubscriptions();\r\n        for (const sub of existingSubscriptions) {\r\n            const methodInfo = sub.method;\r\n            const params = Object.assign({}, sub.params);\r\n            // remove handlers, otherwise they will be added twice\r\n            logger.info(`trying to re-subscribe to method ${methodInfo.name}`);\r\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub);\r\n        }\r\n\r\n        // server side\r\n        const registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n\r\n        // replay server methods\r\n        for (const method of registeredMethods) {\r\n            const def = method.definition;\r\n            logger.info(`re-publishing method ${def.name}`);\r\n            if (method.stream) {\r\n                // streaming method\r\n                interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream);\r\n            } else if (method.theFunction && method.theFunction.userCallback) {\r\n                interop.register(def, method.theFunction.userCallback);\r\n            } else if (method.theFunction && method.theFunction.userCallbackAsync) {\r\n                interop.registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleInitialJoin() {\r\n        if (resolveReadyPromise) {\r\n            resolveReadyPromise({\r\n                client,\r\n                server,\r\n            });\r\n\r\n            resolveReadyPromise = undefined;\r\n        }\r\n    }\r\n\r\n    session.onJoined((reconnect) => {\r\n        // add our server to the client repository\r\n        clientRepository.addServer(instance, connection.peerId);\r\n\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        } else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n\r\n    session.onLeft(() => {\r\n        // reset the client repository when the connection is down\r\n        clientRepository.reset();\r\n    });\r\n\r\n    session.join();\r\n\r\n    return readyPromise;\r\n}\r\n","import Client from \"./client/client\";\r\nimport Server from \"./server/server\";\r\nimport { Protocol, SubscribeError, InteropSettings } from \"./types\";\r\nimport { Glue42Core } from \"../../glue\";\r\nimport ClientRepository from \"./client/repository\";\r\nimport ServerRepository from \"./server/repository\";\r\nimport { UnsubscribeFunction } from \"callback-registry\";\r\nimport gW3ProtocolFactory from \"./protocols/gw3/factory\";\r\nimport { InstanceWrapper } from \"./instance\";\r\nimport { PromiseWrapper } from \"../utils/pw\";\r\n\r\nexport default class Interop implements Glue42Core.AGM.API {\r\n    public instance: Glue42Core.AGM.Instance;\r\n    public readyPromise: Promise<Interop>;\r\n\r\n    public client!: Client;\r\n    public server!: Server;\r\n    public unwrappedInstance: InstanceWrapper;\r\n    private protocol!: Protocol;\r\n    private clientRepository: ClientRepository;\r\n    private serverRepository: ServerRepository;\r\n\r\n    constructor(configuration: InteropSettings) {\r\n        if (typeof configuration === \"undefined\") {\r\n            throw new Error(\"configuration is required\");\r\n        }\r\n\r\n        if (typeof configuration.connection === \"undefined\") {\r\n            throw new Error(\"configuration.connections is required\");\r\n        }\r\n\r\n        const connection = configuration.connection;\r\n\r\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n            configuration.methodResponseTimeout = 30 * 1000;\r\n        }\r\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n            configuration.waitTimeoutMs = 30 * 1000;\r\n        }\r\n\r\n        // Initialize our modules\r\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\r\n        this.instance = this.unwrappedInstance.unwrap();\r\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\r\n        this.serverRepository = new ServerRepository();\r\n        let protocolPromise: Promise<Protocol>;\r\n\r\n        if (connection.protocolVersion === 3) {\r\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\r\n        } else {\r\n            throw new Error(`protocol ${connection.protocolVersion} not supported`);\r\n        }\r\n\r\n        // wait for protocol to resolve\r\n        this.readyPromise = protocolPromise.then((protocol: Protocol) => {\r\n            this.protocol = protocol;\r\n            this.client = new Client(this.protocol, this.clientRepository, this.instance, configuration);\r\n            this.server = new Server(this.protocol, this.serverRepository);\r\n            return this;\r\n        });\r\n    }\r\n\r\n    public ready() {\r\n        return this.readyPromise;\r\n    }\r\n\r\n    public serverRemoved(callback: (instance: Glue42Core.AGM.Instance, reason: string) => void): UnsubscribeFunction {\r\n        return this.client.serverRemoved(callback);\r\n    }\r\n\r\n    public serverAdded(callback: (instance: Glue42Core.AGM.Instance) => void): UnsubscribeFunction {\r\n        return this.client.serverAdded(callback);\r\n    }\r\n\r\n    public serverMethodRemoved(callback: (info: { server: Glue42Core.AGM.Instance; method: Glue42Core.AGM.Method; }) => void): UnsubscribeFunction {\r\n        return this.client.serverMethodRemoved(callback);\r\n    }\r\n\r\n    public serverMethodAdded(callback: (info: { server: Glue42Core.AGM.Instance; method: Glue42Core.AGM.Method; }) => void): UnsubscribeFunction {\r\n        return this.client.serverMethodAdded(callback);\r\n    }\r\n\r\n    public methodRemoved(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\r\n        return this.client.methodRemoved(callback);\r\n    }\r\n\r\n    public methodAdded(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\r\n        return this.client.methodAdded(callback);\r\n    }\r\n\r\n    public methodsForInstance(instance: Glue42Core.AGM.Instance): Glue42Core.Interop.Method[] {\r\n        return this.client.methodsForInstance(instance);\r\n    }\r\n\r\n    public methods(methodFilter: Glue42Core.AGM.MethodDefinition): Glue42Core.Interop.Method[] {\r\n        return this.client.methods(methodFilter);\r\n    }\r\n\r\n    public servers(methodFilter: Glue42Core.AGM.MethodDefinition): Glue42Core.AGM.Instance[] {\r\n        return this.client.servers(methodFilter);\r\n    }\r\n\r\n    public subscribe(method: string, options: Glue42Core.AGM.SubscriptionParams, successCallback?: (subscription: Glue42Core.AGM.Subscription) => void, errorCallback?: (err: SubscribeError) => void): Promise<Glue42Core.AGM.Subscription> {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    }\r\n\r\n    public createStream(streamDef: string | Glue42Core.AGM.MethodDefinition, callbacks: Glue42Core.AGM.StreamOptions, successCallback?: (args?: object) => void, errorCallback?: (error?: string | object) => void): Promise<Glue42Core.AGM.Stream> {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    }\r\n\r\n    public unregister(methodFilter: string | Glue42Core.AGM.MethodDefinition): Promise<void> {\r\n        return this.server.unregister(methodFilter);\r\n    }\r\n\r\n    public registerAsync(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: any, caller: Glue42Core.AGM.Instance, successCallback: (args?: any) => void, errorCallback: (error?: string | object) => void) => void): Promise<void> {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    }\r\n\r\n    public register(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: any, caller: Glue42Core.AGM.Instance) => any | Promise<void>): Promise<void> {\r\n        return this.server.register(methodDefinition, callback);\r\n    }\r\n\r\n    public invoke(methodFilter: string | Glue42Core.AGM.MethodDefinition, argumentObj?: object, target?: Glue42Core.AGM.InstanceTarget | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[], additionalOptions?: Glue42Core.AGM.InvokeOptions, success?: (result: Glue42Core.AGM.InvocationResult<any>) => void, error?: (error: { method: Glue42Core.AGM.MethodDefinition; called_with: object; executed_by: Glue42Core.AGM.Instance; message: string; status: number; returned: object; }) => void): Promise<Glue42Core.AGM.InvocationResult<any>> {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    }\r\n\r\n    public waitForMethod(name: string): Promise<Glue42Core.Interop.Method> {\r\n        const pw = new PromiseWrapper<Glue42Core.Interop.Method>();\r\n        const unsubscribe = this.client.methodAdded((m) => {\r\n            if (m.name === name) {\r\n                unsubscribe();\r\n                pw.resolve(m);\r\n            }\r\n        });\r\n\r\n        return pw.promise;\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../glue\";\r\nimport Connection from \"../connection/connection\";\r\nimport { Logger } from \"../logger/logger\";\r\n\r\nexport interface BusSettings {\r\n    connection: Connection;\r\n    logger: Logger;\r\n}\r\ninterface SubscriptionEntry {\r\n    subscription_id: string;\r\n    topic: string;\r\n    callback: (data: object, topic: string, source: Glue42Core.Interop.Instance) => void;\r\n    source?: object;\r\n}\r\n\r\nconst successMessages = [\"subscribed\", \"success\"];\r\n\r\nexport class MessageBus implements Glue42Core.Bus.API {\r\n    public connection: Connection;\r\n    public logger: Logger;\r\n    public peerId: string;\r\n    public session: Glue42Core.Connection.GW3DomainSession;\r\n    public subscriptions: SubscriptionEntry[];\r\n    public readyPromise: Promise<object>;\r\n\r\n    constructor(connection: Connection, logger: Logger) {\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n        this.session = connection.domain(\"bus\", successMessages);\r\n        this.readyPromise = this.session.join();\r\n        this.readyPromise.then(() => {\r\n            this.watchOnEvent();\r\n        });\r\n    }\r\n\r\n    public ready() {\r\n        return this.readyPromise;\r\n    }\r\n\r\n    public publish = (topic: string, data: object, options?: Glue42Core.Bus.MessageOptions): void => {\r\n        const { routingKey, target } = options || {} as any;\r\n        const args = this.removeEmptyValues({\r\n            type: \"publish\",\r\n            topic,\r\n            data,\r\n            peer_id: this.peerId,\r\n            routing_key: routingKey,\r\n            target_identity: target\r\n        });\r\n        this.session.send(args);\r\n    }\r\n\r\n    public subscribe = (\r\n        topic: string,\r\n        callback: (data: object, topic: string, source: object) => void,\r\n        options?: Glue42Core.Bus.MessageOptions\r\n    ): Promise<Glue42Core.Bus.Subscription> => {\r\n        return new Promise((resolve, reject) => {\r\n            const { routingKey, target } = options || {} as any;\r\n            const args = this.removeEmptyValues({\r\n                type: \"subscribe\",\r\n                topic,\r\n                peer_id: this.peerId,\r\n                routing_key: routingKey,\r\n                source: target\r\n            });\r\n\r\n            this.session.send(args)\r\n                .then((response: any) => {\r\n                    const { subscription_id } = response;\r\n                    this.subscriptions.push({ subscription_id, topic, callback, source: target });\r\n\r\n                    resolve({\r\n                        unsubscribe: () => {\r\n                            this.session.send({ type: \"unsubscribe\", subscription_id, peer_id: this.peerId });\r\n                            this.subscriptions = this.subscriptions.filter((s) => s.subscription_id !== subscription_id);\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                .catch((error: any) => reject(error));\r\n        });\r\n    }\r\n\r\n    public watchOnEvent = () => {\r\n        this.session.on(\"event\", (args: any) => {\r\n            const { data, subscription_id } = args;\r\n            const source = args[\"publisher-identity\"];\r\n            const subscription = this.subscriptions.find((s) => s.subscription_id === subscription_id);\r\n\r\n            if (subscription) {\r\n                if (!subscription.source) {\r\n                    subscription.callback(data, subscription.topic, source);\r\n                } else {\r\n                    if (this.keysMatch(subscription.source, source)) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private removeEmptyValues(obj: any) {\r\n        const cleaned: any = {};\r\n        Object.keys(obj).forEach((key) => {\r\n            if (obj[key] !== undefined && obj[key] !== null) {\r\n                cleaned[key] = obj[key];\r\n            }\r\n        });\r\n        return cleaned;\r\n    }\r\n\r\n    private keysMatch(obj1: any, obj2: any) {\r\n        const keysObj1 = Object.keys(obj1);\r\n        let allMatch = true;\r\n        keysObj1.forEach((key) => {\r\n            if (obj1[key] !== obj2[key]) {\r\n                allMatch = false;\r\n            }\r\n        });\r\n        return allMatch;\r\n    }\r\n}\r\n","import metrics from \"./metrics/main\";\r\nimport Connection from \"./connection/connection\";\r\nimport { Logger } from \"./logger/logger\";\r\nimport { Glue42Core } from \"../glue\";\r\nimport prepareConfig from \"./config\";\r\nimport timer, { getAllTimers } from \"./utils/timer\";\r\nimport Utils from \"./utils/utils\";\r\nimport { Timer } from \"./types\";\r\nimport { ContextsModule } from \"./contexts/contextsModule\";\r\nimport { ContextMessageReplaySpec } from \"./contexts/contextMessageReplaySpec\";\r\nimport { InteropSettings } from \"./interop/types\";\r\nimport Interop from \"./interop/interop\";\r\nimport { MessageBus } from \"./bus/main\";\r\nimport { version } from \"../package.json\";\r\nimport shortid from \"shortid\";\r\n\r\nconst GlueCore = (userConfig?: Glue42Core.Config, ext?: Glue42Core.Extension): Promise<Glue42Core.GlueCore> => {\r\n    const gdVersion: number | undefined = Utils.getGDMajorVersion();\r\n    let glue42gd: Glue42Core.GDObject | undefined;\r\n    let preloadPromise: Promise<any> = Promise.resolve();\r\n\r\n    if (gdVersion) {\r\n        if (gdVersion < 3) {\r\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\r\n        } else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\r\n        }\r\n    }\r\n\r\n    const glueInitTimer = timer(\"glue\");\r\n\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    const internalConfig = prepareConfig(userConfig, ext, glue42gd);\r\n\r\n    // Init the GLUE namespace\r\n    let _connection: Connection;\r\n    let _interop: Interop;\r\n    let _logger: Logger;\r\n    let _metrics: Glue42Core.Metrics.API;\r\n    let _contexts: Glue42Core.Contexts.API;\r\n    let _bus: Glue42Core.Bus.API;\r\n    let _allowTrace: boolean; // true if trace logging is enabled\r\n\r\n    const libs: { [key: string]: any } = {};\r\n\r\n    function registerLib(name: string | string[], inner: any, t: Timer) {\r\n\r\n        _allowTrace = _logger.canPublish(\"trace\");\r\n        if (_allowTrace) {\r\n            _logger.trace(`registering ${name} module`);\r\n        }\r\n\r\n        const done = () => {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n            inner.marks = t.marks;\r\n            if (_allowTrace) {\r\n                _logger.trace(`${name} is ready - ${t.endTime - t.startTime}`);\r\n            }\r\n        };\r\n\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(() => {\r\n                done();\r\n            });\r\n        } else {\r\n            done();\r\n        }\r\n\r\n        if (!Array.isArray(name)) {\r\n            name = [name];\r\n        }\r\n\r\n        name.forEach((n) => {\r\n            libs[n] = inner;\r\n            (GlueCore as any)[n] = inner;\r\n        });\r\n    }\r\n\r\n    function setupConnection(): Promise<object> {\r\n        const initTimer = timer(\"connection\");\r\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\r\n\r\n        let authPromise: Promise<any> = Promise.resolve(internalConfig.auth);\r\n\r\n        // no auth - what we do in different protocol versions\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            if (glue42gd) {\r\n                authPromise = glue42gd.getGWToken()\r\n                    .then((token) => {\r\n                        // initTimer.mark(\"got-gw-token\");\r\n                        return {\r\n                            gatewayToken: token\r\n                        };\r\n                    });\r\n            } else {\r\n                // assign to auth promise so we ca cleanup the connection\r\n                authPromise = Promise.reject(\"You need to provide auth information\");\r\n            }\r\n        }\r\n\r\n        return authPromise\r\n            .then((authConfig) => {\r\n                initTimer.mark(\"auth-promise-resolved\");\r\n                // convert the authConfig to AuthRequest object\r\n                let authRequest: Glue42Core.Auth;\r\n                if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                    authRequest = authConfig;\r\n                } else {\r\n                    throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n                }\r\n                // do the login\r\n                return _connection.login(authRequest);\r\n            })\r\n            .then(() => {\r\n                registerLib(\"connection\", _connection, initTimer);\r\n                return internalConfig;\r\n            })\r\n            .catch((e) => {\r\n                if (_connection) {\r\n                    _connection.logout();\r\n                }\r\n                throw e;\r\n            });\r\n    }\r\n\r\n    function setupLogger(): Promise<void> {\r\n        // Logger\r\n        const initTimer = timer(\"logger\");\r\n        _logger = new Logger(`${internalConfig.connection.identity?.application}`, undefined, internalConfig.customLogger);\r\n        _logger.consoleLevel(internalConfig.logger.console);\r\n        _logger.publishLevel(internalConfig.logger.publish);\r\n\r\n        if (_logger.canPublish(\"debug\")) {\r\n            _logger.debug(\"initializing glue...\");\r\n        }\r\n        registerLib(\"logger\", _logger, initTimer);\r\n\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    function setupMetrics(): Promise<void> {\r\n        const initTimer = timer(\"metrics\");\r\n        const config = internalConfig.metrics;\r\n\r\n        const metricsPublishingEnabledFunc = glue42gd?.getMetricsPublishingEnabled;\r\n        const identity = internalConfig.connection.identity;\r\n        const canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : () => true;\r\n        const disableAutoAppSystem: boolean = (typeof config !== \"boolean\" && config.disableAutoAppSystem) ?? false;\r\n        _metrics = metrics({\r\n            connection: config ? _connection : undefined,\r\n            logger: _logger.subLogger(\"metrics\"),\r\n            canUpdateMetric,\r\n            system: \"Glue42\",\r\n            service: identity?.service ?? glue42gd?.applicationName ?? internalConfig.application,\r\n            instance: identity?.instance ?? identity?.windowId ?? shortid(),\r\n            disableAutoAppSystem,\r\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config?.pagePerformanceMetrics : undefined\r\n        });\r\n\r\n        registerLib(\"metrics\", _metrics, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    function setupInterop(): Promise<void> {\r\n        const initTimer = timer(\"interop\");\r\n\r\n        const agmConfig: InteropSettings = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"interop\"),\r\n        };\r\n\r\n        _interop = new Interop(agmConfig);\r\n        Logger.Interop = _interop;\r\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    function setupContexts() {\r\n        const hasActivities = ((internalConfig as any).activities && _connection.protocolVersion === 3);\r\n        const needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            const initTimer = timer(\"contexts\");\r\n\r\n            _contexts = new ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\")\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n\r\n            // NB: The shared contexts data is part of the global domain,\r\n            // which is joined implicitly and there is no 'Success' message\r\n            // to indicate that the initial state has arrived.\r\n            // We're relying on the fact that none of the other Glue libs\r\n            // rely on the shared contexts' state, and that the 'contexts'\r\n            // lib is created first so any other domain's success message\r\n            // will arrive after our state, so the contexts will be visible\r\n            // when the Glue promise resolves.\r\n        } else {\r\n            const replayer = _connection.replayer;\r\n            if (replayer) {\r\n                replayer.drain(ContextMessageReplaySpec.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function setupBus(): Promise<void> {\r\n        if (!internalConfig.bus) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const initTimer = timer(\"bus\");\r\n        _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\r\n        registerLib(\"bus\", _bus, initTimer);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    function setupExternalLibs(externalLibs: Glue42Core.ExternalLib[]): Promise<any> {\r\n        try {\r\n            externalLibs.forEach((lib) => {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n\r\n            return Promise.resolve();\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    function setupExternalLib(name: string, createCallback: (core: any) => any) {\r\n        const initTimer = timer(name);\r\n        const lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n\r\n    function waitForLibs(): Promise<object[]> {\r\n        // get all libs that have ready promises and wait for these to be ready\r\n        const libsReadyPromises = Object.keys(libs).map((key) => {\r\n            const lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n\r\n    function constructGlueObject(): Glue42Core.GlueCore {\r\n\r\n        const feedbackFunc = (feedbackInfo?: Glue42Core.FeedbackInfo) => {\r\n            if (!_interop) {\r\n                return;\r\n            }\r\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\r\n        };\r\n\r\n        const info: { [key: string]: any } = {\r\n            coreVersion: version,\r\n            version: internalConfig.version\r\n        };\r\n\r\n        glueInitTimer.stop();\r\n\r\n        const glue: Glue42Core.GlueCore & ({ [key: string]: any }) = {\r\n            feedback: feedbackFunc,\r\n            info,\r\n            logger: _logger,\r\n            interop: _interop,\r\n            agm: _interop,\r\n            connection: _connection,\r\n            metrics: _metrics,\r\n            contexts: _contexts,\r\n            bus: _bus,\r\n            version: internalConfig.version,\r\n            userConfig,\r\n            done: () => {\r\n                _logger?.info(`done called by user...`);\r\n                return _connection.logout();\r\n            }\r\n        };\r\n\r\n        // ver performance\r\n        glue.performance = {\r\n            get glueVer() {\r\n                return internalConfig.version;\r\n            },\r\n            get glueConfig() {\r\n                return JSON.stringify(userConfig);\r\n            },\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return (window as any).performance.memory;\r\n            },\r\n            get initTimes() {\r\n                const all = getAllTimers();\r\n                return Object.keys(all).map((key) => {\r\n                    const t = all[key];\r\n                    return {\r\n                        name: key,\r\n                        duration: t.endTime - t.startTime,\r\n                        marks: t.marks,\r\n                        startTime: t.startTime,\r\n                        endTime: t.endTime\r\n                    };\r\n                });\r\n            }\r\n        };\r\n\r\n        // attach each lib to glue\r\n        Object.keys(libs).forEach((key) => {\r\n            const lib = libs[key];\r\n            glue[key] = lib;\r\n        });\r\n\r\n        // construct the config object to be exposed to end user\r\n        // transfer config keys from internalConfig and then ext\r\n        glue.config = {};\r\n\r\n        Object.keys(internalConfig).forEach((k) => {\r\n            glue.config[k] = (internalConfig as any)[k];\r\n        });\r\n\r\n        if (ext && ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach((k) => {\r\n                glue.config[k] = ext?.extOptions[k];\r\n            });\r\n        }\r\n\r\n        if (ext?.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n\r\n        if (glue.agm) {\r\n            const deprecatedDecorator = (fn: any, wrong: string, proper: string) => {\r\n                // tslint:disable-next-line:only-arrow-functions\r\n                return function () {\r\n                    // tslint:disable-next-line:no-console\r\n                    glue.logger.warn(`glue.js - 'glue.agm.${wrong}' method is deprecated, use 'glue.interop.${proper}' instead.`);\r\n                    return fn.apply(glue.agm, arguments);\r\n                };\r\n            };\r\n            // extend glue.agm with legacy support\r\n            const agmAny: any = glue.agm;\r\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\r\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\r\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\r\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\r\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\r\n        }\r\n        return glue;\r\n    }\r\n\r\n    return preloadPromise\r\n        .then(setupLogger)\r\n        .then(setupConnection)\r\n        .then(() => Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]))\r\n        .then(() => _interop.readyPromise)\r\n        .then(() => {\r\n            return setupExternalLibs(internalConfig.libs || []);\r\n        })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch((err) => {\r\n            // if there is some some error include the libs object for debugging purposes\r\n            return Promise.reject({\r\n                err,\r\n                libs\r\n            });\r\n        });\r\n};\r\n\r\nif (typeof window !== \"undefined\") {\r\n    (window as any).GlueCore = GlueCore;\r\n}\r\n(GlueCore as any).version = version;\r\n// add default library for ES6 modules\r\n(GlueCore as any).default = GlueCore;\r\n\r\nexport default GlueCore;\r\n"],"names":["metricTypes","CallbackRegistryFactory","setSeed","randomByte","alphabet","encode","decode","require$$0","generate","CallbackFactory","msg.GW_MESSAGE_CREATE_CONTEXT","msg.GW_MESSAGE_ACTIVITY_CREATED","msg.GW_MESSAGE_ACTIVITY_DESTROYED","msg.GW_MESSAGE_CONTEXT_CREATED","msg.GW_MESSAGE_CONTEXT_ADDED","msg.GW_MESSAGE_SUBSCRIBE_CONTEXT","msg.GW_MESSAGE_SUBSCRIBED_CONTEXT","msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT","msg.GW_MESSAGE_DESTROY_CONTEXT","msg.GW_MESSAGE_CONTEXT_DESTROYED","msg.GW_MESSAGE_UPDATE_CONTEXT","msg.GW_MESSAGE_CONTEXT_UPDATED","msg.GW_MESSAGE_JOINED_ACTIVITY","pjsonVersion","ContextData","random","ServerStreaming"],"mappings":"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"}